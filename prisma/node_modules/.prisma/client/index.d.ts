
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model RoleChangeLog
 * 
 */
export type RoleChangeLog = $Result.DefaultSelection<Prisma.$RoleChangeLogPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Notification
 * 
 */
export type Notification = $Result.DefaultSelection<Prisma.$NotificationPayload>
/**
 * Model Asset
 * 
 */
export type Asset = $Result.DefaultSelection<Prisma.$AssetPayload>
/**
 * Model Transfer
 * 
 */
export type Transfer = $Result.DefaultSelection<Prisma.$TransferPayload>
/**
 * Model Maintenance
 * 
 */
export type Maintenance = $Result.DefaultSelection<Prisma.$MaintenancePayload>
/**
 * Model Disposal
 * 
 */
export type Disposal = $Result.DefaultSelection<Prisma.$DisposalPayload>
/**
 * Model Document
 * 
 */
export type Document = $Result.DefaultSelection<Prisma.$DocumentPayload>
/**
 * Model Depreciation
 * 
 */
export type Depreciation = $Result.DefaultSelection<Prisma.$DepreciationPayload>
/**
 * Model AssetDepreciation
 * 
 */
export type AssetDepreciation = $Result.DefaultSelection<Prisma.$AssetDepreciationPayload>
/**
 * Model AssetHistory
 * 
 */
export type AssetHistory = $Result.DefaultSelection<Prisma.$AssetHistoryPayload>
/**
 * Model LinkedAsset
 * 
 */
export type LinkedAsset = $Result.DefaultSelection<Prisma.$LinkedAssetPayload>
/**
 * Model Permission
 * 
 */
export type Permission = $Result.DefaultSelection<Prisma.$PermissionPayload>
/**
 * Model UserPermission
 * 
 */
export type UserPermission = $Result.DefaultSelection<Prisma.$UserPermissionPayload>
/**
 * Model RolePermission
 * 
 */
export type RolePermission = $Result.DefaultSelection<Prisma.$RolePermissionPayload>
/**
 * Model CapitalImprovement
 * 
 */
export type CapitalImprovement = $Result.DefaultSelection<Prisma.$CapitalImprovementPayload>
/**
 * Model MaintenanceSchedule
 * 
 */
export type MaintenanceSchedule = $Result.DefaultSelection<Prisma.$MaintenanceSchedulePayload>
/**
 * Model MaintenanceTemplate
 * 
 */
export type MaintenanceTemplate = $Result.DefaultSelection<Prisma.$MaintenanceTemplatePayload>
/**
 * Model AssetAudit
 * 
 */
export type AssetAudit = $Result.DefaultSelection<Prisma.$AssetAuditPayload>
/**
 * Model AuditAssignment
 * 
 */
export type AuditAssignment = $Result.DefaultSelection<Prisma.$AuditAssignmentPayload>
/**
 * Model AuditRequest
 * 
 */
export type AuditRequest = $Result.DefaultSelection<Prisma.$AuditRequestPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const AssetStatus: {
  ACTIVE: 'ACTIVE',
  TRANSFERRED: 'TRANSFERRED',
  DISPOSED: 'DISPOSED',
  UNDER_MAINTENANCE: 'UNDER_MAINTENANCE'
};

export type AssetStatus = (typeof AssetStatus)[keyof typeof AssetStatus]


export const TransferStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  COMPLETED: 'COMPLETED'
};

export type TransferStatus = (typeof TransferStatus)[keyof typeof TransferStatus]


export const MaintenanceType: {
  PREVENTIVE: 'PREVENTIVE',
  CORRECTIVE: 'CORRECTIVE',
  INSPECTION: 'INSPECTION'
};

export type MaintenanceType = (typeof MaintenanceType)[keyof typeof MaintenanceType]


export const MaintenanceStatus: {
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  SCHEDULED: 'SCHEDULED',
  IN_PROGRESS: 'IN_PROGRESS',
  WORK_COMPLETED: 'WORK_COMPLETED',
  PENDING_REVIEW: 'PENDING_REVIEW',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type MaintenanceStatus = (typeof MaintenanceStatus)[keyof typeof MaintenanceStatus]


export const MaintenancePriority: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

export type MaintenancePriority = (typeof MaintenancePriority)[keyof typeof MaintenancePriority]


export const ScheduleFrequency: {
  DAILY: 'DAILY',
  WEEKLY: 'WEEKLY',
  MONTHLY: 'MONTHLY',
  QUARTERLY: 'QUARTERLY',
  SEMI_ANNUALLY: 'SEMI_ANNUALLY',
  ANNUALLY: 'ANNUALLY',
  CUSTOM: 'CUSTOM'
};

export type ScheduleFrequency = (typeof ScheduleFrequency)[keyof typeof ScheduleFrequency]


export const ScheduleStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  PAUSED: 'PAUSED',
  EXPIRED: 'EXPIRED'
};

export type ScheduleStatus = (typeof ScheduleStatus)[keyof typeof ScheduleStatus]


export const DisposalStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  COMPLETED: 'COMPLETED'
};

export type DisposalStatus = (typeof DisposalStatus)[keyof typeof DisposalStatus]


export const DisposalMethod: {
  SALE: 'SALE',
  DONATION: 'DONATION',
  RECYCLE: 'RECYCLE',
  SCRAP: 'SCRAP'
};

export type DisposalMethod = (typeof DisposalMethod)[keyof typeof DisposalMethod]


export const DepreciationMethodEnum: {
  STRAIGHT_LINE: 'STRAIGHT_LINE',
  DECLINING_BALANCE: 'DECLINING_BALANCE',
  DOUBLE_DECLINING: 'DOUBLE_DECLINING',
  SUM_OF_YEARS_DIGITS: 'SUM_OF_YEARS_DIGITS',
  UNITS_OF_ACTIVITY: 'UNITS_OF_ACTIVITY'
};

export type DepreciationMethodEnum = (typeof DepreciationMethodEnum)[keyof typeof DepreciationMethodEnum]


export const DocumentType: {
  INVOICE: 'INVOICE',
  WARRANTY: 'WARRANTY',
  MANUAL: 'MANUAL',
  MAINTENANCE_RECORD: 'MAINTENANCE_RECORD',
  TRANSFER_APPROVAL: 'TRANSFER_APPROVAL',
  TRANSFER_REJECTION: 'TRANSFER_REJECTION',
  MAINTENANCE_APPROVAL: 'MAINTENANCE_APPROVAL',
  MAINTENANCE_REJECTION: 'MAINTENANCE_REJECTION',
  OTHER: 'OTHER'
};

export type DocumentType = (typeof DocumentType)[keyof typeof DocumentType]


export const Role: {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  USER: 'USER',
  AUDITOR: 'AUDITOR'
};

export type Role = (typeof Role)[keyof typeof Role]


export const AuditStatus: {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED',
  FAILED: 'FAILED',
  NEEDS_REVIEW: 'NEEDS_REVIEW'
};

export type AuditStatus = (typeof AuditStatus)[keyof typeof AuditStatus]


export const AuditCondition: {
  EXCELLENT: 'EXCELLENT',
  GOOD: 'GOOD',
  FAIR: 'FAIR',
  POOR: 'POOR',
  CRITICAL: 'CRITICAL',
  MISSING: 'MISSING'
};

export type AuditCondition = (typeof AuditCondition)[keyof typeof AuditCondition]


export const AuditAssignmentStatus: {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  OVERDUE: 'OVERDUE',
  CANCELLED: 'CANCELLED'
};

export type AuditAssignmentStatus = (typeof AuditAssignmentStatus)[keyof typeof AuditAssignmentStatus]


export const AuditRequestStatus: {
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

export type AuditRequestStatus = (typeof AuditRequestStatus)[keyof typeof AuditRequestStatus]


export const AuditWorkflowStatus: {
  DRAFT: 'DRAFT',
  PENDING_REVIEW: 'PENDING_REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  REQUIRES_REVISION: 'REQUIRES_REVISION'
};

export type AuditWorkflowStatus = (typeof AuditWorkflowStatus)[keyof typeof AuditWorkflowStatus]

}

export type AssetStatus = $Enums.AssetStatus

export const AssetStatus: typeof $Enums.AssetStatus

export type TransferStatus = $Enums.TransferStatus

export const TransferStatus: typeof $Enums.TransferStatus

export type MaintenanceType = $Enums.MaintenanceType

export const MaintenanceType: typeof $Enums.MaintenanceType

export type MaintenanceStatus = $Enums.MaintenanceStatus

export const MaintenanceStatus: typeof $Enums.MaintenanceStatus

export type MaintenancePriority = $Enums.MaintenancePriority

export const MaintenancePriority: typeof $Enums.MaintenancePriority

export type ScheduleFrequency = $Enums.ScheduleFrequency

export const ScheduleFrequency: typeof $Enums.ScheduleFrequency

export type ScheduleStatus = $Enums.ScheduleStatus

export const ScheduleStatus: typeof $Enums.ScheduleStatus

export type DisposalStatus = $Enums.DisposalStatus

export const DisposalStatus: typeof $Enums.DisposalStatus

export type DisposalMethod = $Enums.DisposalMethod

export const DisposalMethod: typeof $Enums.DisposalMethod

export type DepreciationMethodEnum = $Enums.DepreciationMethodEnum

export const DepreciationMethodEnum: typeof $Enums.DepreciationMethodEnum

export type DocumentType = $Enums.DocumentType

export const DocumentType: typeof $Enums.DocumentType

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type AuditStatus = $Enums.AuditStatus

export const AuditStatus: typeof $Enums.AuditStatus

export type AuditCondition = $Enums.AuditCondition

export const AuditCondition: typeof $Enums.AuditCondition

export type AuditAssignmentStatus = $Enums.AuditAssignmentStatus

export const AuditAssignmentStatus: typeof $Enums.AuditAssignmentStatus

export type AuditRequestStatus = $Enums.AuditRequestStatus

export const AuditRequestStatus: typeof $Enums.AuditRequestStatus

export type AuditWorkflowStatus = $Enums.AuditWorkflowStatus

export const AuditWorkflowStatus: typeof $Enums.AuditWorkflowStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more RoleChangeLogs
 * const roleChangeLogs = await prisma.roleChangeLog.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more RoleChangeLogs
   * const roleChangeLogs = await prisma.roleChangeLog.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.roleChangeLog`: Exposes CRUD operations for the **RoleChangeLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoleChangeLogs
    * const roleChangeLogs = await prisma.roleChangeLog.findMany()
    * ```
    */
  get roleChangeLog(): Prisma.RoleChangeLogDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **Notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.NotificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.asset`: Exposes CRUD operations for the **Asset** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Assets
    * const assets = await prisma.asset.findMany()
    * ```
    */
  get asset(): Prisma.AssetDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.transfer`: Exposes CRUD operations for the **Transfer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transfers
    * const transfers = await prisma.transfer.findMany()
    * ```
    */
  get transfer(): Prisma.TransferDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.maintenance`: Exposes CRUD operations for the **Maintenance** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Maintenances
    * const maintenances = await prisma.maintenance.findMany()
    * ```
    */
  get maintenance(): Prisma.MaintenanceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.disposal`: Exposes CRUD operations for the **Disposal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Disposals
    * const disposals = await prisma.disposal.findMany()
    * ```
    */
  get disposal(): Prisma.DisposalDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.document`: Exposes CRUD operations for the **Document** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Documents
    * const documents = await prisma.document.findMany()
    * ```
    */
  get document(): Prisma.DocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.depreciation`: Exposes CRUD operations for the **Depreciation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Depreciations
    * const depreciations = await prisma.depreciation.findMany()
    * ```
    */
  get depreciation(): Prisma.DepreciationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.assetDepreciation`: Exposes CRUD operations for the **AssetDepreciation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AssetDepreciations
    * const assetDepreciations = await prisma.assetDepreciation.findMany()
    * ```
    */
  get assetDepreciation(): Prisma.AssetDepreciationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.assetHistory`: Exposes CRUD operations for the **AssetHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AssetHistories
    * const assetHistories = await prisma.assetHistory.findMany()
    * ```
    */
  get assetHistory(): Prisma.AssetHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.linkedAsset`: Exposes CRUD operations for the **LinkedAsset** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LinkedAssets
    * const linkedAssets = await prisma.linkedAsset.findMany()
    * ```
    */
  get linkedAsset(): Prisma.LinkedAssetDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **Permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.PermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userPermission`: Exposes CRUD operations for the **UserPermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserPermissions
    * const userPermissions = await prisma.userPermission.findMany()
    * ```
    */
  get userPermission(): Prisma.UserPermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rolePermission`: Exposes CRUD operations for the **RolePermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RolePermissions
    * const rolePermissions = await prisma.rolePermission.findMany()
    * ```
    */
  get rolePermission(): Prisma.RolePermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.capitalImprovement`: Exposes CRUD operations for the **CapitalImprovement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CapitalImprovements
    * const capitalImprovements = await prisma.capitalImprovement.findMany()
    * ```
    */
  get capitalImprovement(): Prisma.CapitalImprovementDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.maintenanceSchedule`: Exposes CRUD operations for the **MaintenanceSchedule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaintenanceSchedules
    * const maintenanceSchedules = await prisma.maintenanceSchedule.findMany()
    * ```
    */
  get maintenanceSchedule(): Prisma.MaintenanceScheduleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.maintenanceTemplate`: Exposes CRUD operations for the **MaintenanceTemplate** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MaintenanceTemplates
    * const maintenanceTemplates = await prisma.maintenanceTemplate.findMany()
    * ```
    */
  get maintenanceTemplate(): Prisma.MaintenanceTemplateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.assetAudit`: Exposes CRUD operations for the **AssetAudit** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AssetAudits
    * const assetAudits = await prisma.assetAudit.findMany()
    * ```
    */
  get assetAudit(): Prisma.AssetAuditDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auditAssignment`: Exposes CRUD operations for the **AuditAssignment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditAssignments
    * const auditAssignments = await prisma.auditAssignment.findMany()
    * ```
    */
  get auditAssignment(): Prisma.AuditAssignmentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auditRequest`: Exposes CRUD operations for the **AuditRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditRequests
    * const auditRequests = await prisma.auditRequest.findMany()
    * ```
    */
  get auditRequest(): Prisma.AuditRequestDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    RoleChangeLog: 'RoleChangeLog',
    User: 'User',
    Notification: 'Notification',
    Asset: 'Asset',
    Transfer: 'Transfer',
    Maintenance: 'Maintenance',
    Disposal: 'Disposal',
    Document: 'Document',
    Depreciation: 'Depreciation',
    AssetDepreciation: 'AssetDepreciation',
    AssetHistory: 'AssetHistory',
    LinkedAsset: 'LinkedAsset',
    Permission: 'Permission',
    UserPermission: 'UserPermission',
    RolePermission: 'RolePermission',
    CapitalImprovement: 'CapitalImprovement',
    MaintenanceSchedule: 'MaintenanceSchedule',
    MaintenanceTemplate: 'MaintenanceTemplate',
    AssetAudit: 'AssetAudit',
    AuditAssignment: 'AuditAssignment',
    AuditRequest: 'AuditRequest'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "roleChangeLog" | "user" | "notification" | "asset" | "transfer" | "maintenance" | "disposal" | "document" | "depreciation" | "assetDepreciation" | "assetHistory" | "linkedAsset" | "permission" | "userPermission" | "rolePermission" | "capitalImprovement" | "maintenanceSchedule" | "maintenanceTemplate" | "assetAudit" | "auditAssignment" | "auditRequest"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      RoleChangeLog: {
        payload: Prisma.$RoleChangeLogPayload<ExtArgs>
        fields: Prisma.RoleChangeLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleChangeLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleChangeLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>
          }
          findFirst: {
            args: Prisma.RoleChangeLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleChangeLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>
          }
          findMany: {
            args: Prisma.RoleChangeLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>[]
          }
          create: {
            args: Prisma.RoleChangeLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>
          }
          createMany: {
            args: Prisma.RoleChangeLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleChangeLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>[]
          }
          delete: {
            args: Prisma.RoleChangeLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>
          }
          update: {
            args: Prisma.RoleChangeLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>
          }
          deleteMany: {
            args: Prisma.RoleChangeLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleChangeLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleChangeLogUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>[]
          }
          upsert: {
            args: Prisma.RoleChangeLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoleChangeLogPayload>
          }
          aggregate: {
            args: Prisma.RoleChangeLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoleChangeLog>
          }
          groupBy: {
            args: Prisma.RoleChangeLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleChangeLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleChangeLogCountArgs<ExtArgs>
            result: $Utils.Optional<RoleChangeLogCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Notification: {
        payload: Prisma.$NotificationPayload<ExtArgs>
        fields: Prisma.NotificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NotificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NotificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findFirst: {
            args: Prisma.NotificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NotificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          findMany: {
            args: Prisma.NotificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          create: {
            args: Prisma.NotificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          createMany: {
            args: Prisma.NotificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NotificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          delete: {
            args: Prisma.NotificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          update: {
            args: Prisma.NotificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          deleteMany: {
            args: Prisma.NotificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NotificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.NotificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>[]
          }
          upsert: {
            args: Prisma.NotificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NotificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.NotificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.NotificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      Asset: {
        payload: Prisma.$AssetPayload<ExtArgs>
        fields: Prisma.AssetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>
          }
          findFirst: {
            args: Prisma.AssetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>
          }
          findMany: {
            args: Prisma.AssetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>[]
          }
          create: {
            args: Prisma.AssetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>
          }
          createMany: {
            args: Prisma.AssetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssetCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>[]
          }
          delete: {
            args: Prisma.AssetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>
          }
          update: {
            args: Prisma.AssetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>
          }
          deleteMany: {
            args: Prisma.AssetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssetUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>[]
          }
          upsert: {
            args: Prisma.AssetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetPayload>
          }
          aggregate: {
            args: Prisma.AssetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAsset>
          }
          groupBy: {
            args: Prisma.AssetGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssetGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssetCountArgs<ExtArgs>
            result: $Utils.Optional<AssetCountAggregateOutputType> | number
          }
        }
      }
      Transfer: {
        payload: Prisma.$TransferPayload<ExtArgs>
        fields: Prisma.TransferFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TransferFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TransferFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>
          }
          findFirst: {
            args: Prisma.TransferFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TransferFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>
          }
          findMany: {
            args: Prisma.TransferFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>[]
          }
          create: {
            args: Prisma.TransferCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>
          }
          createMany: {
            args: Prisma.TransferCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TransferCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>[]
          }
          delete: {
            args: Prisma.TransferDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>
          }
          update: {
            args: Prisma.TransferUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>
          }
          deleteMany: {
            args: Prisma.TransferDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TransferUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.TransferUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>[]
          }
          upsert: {
            args: Prisma.TransferUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TransferPayload>
          }
          aggregate: {
            args: Prisma.TransferAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransfer>
          }
          groupBy: {
            args: Prisma.TransferGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransferGroupByOutputType>[]
          }
          count: {
            args: Prisma.TransferCountArgs<ExtArgs>
            result: $Utils.Optional<TransferCountAggregateOutputType> | number
          }
        }
      }
      Maintenance: {
        payload: Prisma.$MaintenancePayload<ExtArgs>
        fields: Prisma.MaintenanceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaintenanceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaintenanceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>
          }
          findFirst: {
            args: Prisma.MaintenanceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaintenanceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>
          }
          findMany: {
            args: Prisma.MaintenanceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>[]
          }
          create: {
            args: Prisma.MaintenanceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>
          }
          createMany: {
            args: Prisma.MaintenanceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaintenanceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>[]
          }
          delete: {
            args: Prisma.MaintenanceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>
          }
          update: {
            args: Prisma.MaintenanceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>
          }
          deleteMany: {
            args: Prisma.MaintenanceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaintenanceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MaintenanceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>[]
          }
          upsert: {
            args: Prisma.MaintenanceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenancePayload>
          }
          aggregate: {
            args: Prisma.MaintenanceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaintenance>
          }
          groupBy: {
            args: Prisma.MaintenanceGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaintenanceGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaintenanceCountArgs<ExtArgs>
            result: $Utils.Optional<MaintenanceCountAggregateOutputType> | number
          }
        }
      }
      Disposal: {
        payload: Prisma.$DisposalPayload<ExtArgs>
        fields: Prisma.DisposalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DisposalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DisposalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>
          }
          findFirst: {
            args: Prisma.DisposalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DisposalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>
          }
          findMany: {
            args: Prisma.DisposalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>[]
          }
          create: {
            args: Prisma.DisposalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>
          }
          createMany: {
            args: Prisma.DisposalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DisposalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>[]
          }
          delete: {
            args: Prisma.DisposalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>
          }
          update: {
            args: Prisma.DisposalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>
          }
          deleteMany: {
            args: Prisma.DisposalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DisposalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DisposalUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>[]
          }
          upsert: {
            args: Prisma.DisposalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DisposalPayload>
          }
          aggregate: {
            args: Prisma.DisposalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDisposal>
          }
          groupBy: {
            args: Prisma.DisposalGroupByArgs<ExtArgs>
            result: $Utils.Optional<DisposalGroupByOutputType>[]
          }
          count: {
            args: Prisma.DisposalCountArgs<ExtArgs>
            result: $Utils.Optional<DisposalCountAggregateOutputType> | number
          }
        }
      }
      Document: {
        payload: Prisma.$DocumentPayload<ExtArgs>
        fields: Prisma.DocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findFirst: {
            args: Prisma.DocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          findMany: {
            args: Prisma.DocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          create: {
            args: Prisma.DocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          createMany: {
            args: Prisma.DocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DocumentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          delete: {
            args: Prisma.DocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          update: {
            args: Prisma.DocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          deleteMany: {
            args: Prisma.DocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DocumentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>[]
          }
          upsert: {
            args: Prisma.DocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DocumentPayload>
          }
          aggregate: {
            args: Prisma.DocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocument>
          }
          groupBy: {
            args: Prisma.DocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<DocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.DocumentCountArgs<ExtArgs>
            result: $Utils.Optional<DocumentCountAggregateOutputType> | number
          }
        }
      }
      Depreciation: {
        payload: Prisma.$DepreciationPayload<ExtArgs>
        fields: Prisma.DepreciationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DepreciationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DepreciationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>
          }
          findFirst: {
            args: Prisma.DepreciationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DepreciationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>
          }
          findMany: {
            args: Prisma.DepreciationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>[]
          }
          create: {
            args: Prisma.DepreciationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>
          }
          createMany: {
            args: Prisma.DepreciationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DepreciationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>[]
          }
          delete: {
            args: Prisma.DepreciationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>
          }
          update: {
            args: Prisma.DepreciationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>
          }
          deleteMany: {
            args: Prisma.DepreciationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DepreciationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DepreciationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>[]
          }
          upsert: {
            args: Prisma.DepreciationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DepreciationPayload>
          }
          aggregate: {
            args: Prisma.DepreciationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDepreciation>
          }
          groupBy: {
            args: Prisma.DepreciationGroupByArgs<ExtArgs>
            result: $Utils.Optional<DepreciationGroupByOutputType>[]
          }
          count: {
            args: Prisma.DepreciationCountArgs<ExtArgs>
            result: $Utils.Optional<DepreciationCountAggregateOutputType> | number
          }
        }
      }
      AssetDepreciation: {
        payload: Prisma.$AssetDepreciationPayload<ExtArgs>
        fields: Prisma.AssetDepreciationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssetDepreciationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssetDepreciationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>
          }
          findFirst: {
            args: Prisma.AssetDepreciationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssetDepreciationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>
          }
          findMany: {
            args: Prisma.AssetDepreciationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>[]
          }
          create: {
            args: Prisma.AssetDepreciationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>
          }
          createMany: {
            args: Prisma.AssetDepreciationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssetDepreciationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>[]
          }
          delete: {
            args: Prisma.AssetDepreciationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>
          }
          update: {
            args: Prisma.AssetDepreciationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>
          }
          deleteMany: {
            args: Prisma.AssetDepreciationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssetDepreciationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssetDepreciationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>[]
          }
          upsert: {
            args: Prisma.AssetDepreciationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetDepreciationPayload>
          }
          aggregate: {
            args: Prisma.AssetDepreciationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssetDepreciation>
          }
          groupBy: {
            args: Prisma.AssetDepreciationGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssetDepreciationGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssetDepreciationCountArgs<ExtArgs>
            result: $Utils.Optional<AssetDepreciationCountAggregateOutputType> | number
          }
        }
      }
      AssetHistory: {
        payload: Prisma.$AssetHistoryPayload<ExtArgs>
        fields: Prisma.AssetHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssetHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssetHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>
          }
          findFirst: {
            args: Prisma.AssetHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssetHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>
          }
          findMany: {
            args: Prisma.AssetHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>[]
          }
          create: {
            args: Prisma.AssetHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>
          }
          createMany: {
            args: Prisma.AssetHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssetHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>[]
          }
          delete: {
            args: Prisma.AssetHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>
          }
          update: {
            args: Prisma.AssetHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>
          }
          deleteMany: {
            args: Prisma.AssetHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssetHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssetHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>[]
          }
          upsert: {
            args: Prisma.AssetHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetHistoryPayload>
          }
          aggregate: {
            args: Prisma.AssetHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssetHistory>
          }
          groupBy: {
            args: Prisma.AssetHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssetHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssetHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<AssetHistoryCountAggregateOutputType> | number
          }
        }
      }
      LinkedAsset: {
        payload: Prisma.$LinkedAssetPayload<ExtArgs>
        fields: Prisma.LinkedAssetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LinkedAssetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LinkedAssetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>
          }
          findFirst: {
            args: Prisma.LinkedAssetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LinkedAssetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>
          }
          findMany: {
            args: Prisma.LinkedAssetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>[]
          }
          create: {
            args: Prisma.LinkedAssetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>
          }
          createMany: {
            args: Prisma.LinkedAssetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LinkedAssetCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>[]
          }
          delete: {
            args: Prisma.LinkedAssetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>
          }
          update: {
            args: Prisma.LinkedAssetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>
          }
          deleteMany: {
            args: Prisma.LinkedAssetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LinkedAssetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LinkedAssetUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>[]
          }
          upsert: {
            args: Prisma.LinkedAssetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkedAssetPayload>
          }
          aggregate: {
            args: Prisma.LinkedAssetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLinkedAsset>
          }
          groupBy: {
            args: Prisma.LinkedAssetGroupByArgs<ExtArgs>
            result: $Utils.Optional<LinkedAssetGroupByOutputType>[]
          }
          count: {
            args: Prisma.LinkedAssetCountArgs<ExtArgs>
            result: $Utils.Optional<LinkedAssetCountAggregateOutputType> | number
          }
        }
      }
      Permission: {
        payload: Prisma.$PermissionPayload<ExtArgs>
        fields: Prisma.PermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findFirst: {
            args: Prisma.PermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findMany: {
            args: Prisma.PermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          create: {
            args: Prisma.PermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          createMany: {
            args: Prisma.PermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          delete: {
            args: Prisma.PermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          update: {
            args: Prisma.PermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          deleteMany: {
            args: Prisma.PermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          upsert: {
            args: Prisma.PermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.PermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      UserPermission: {
        payload: Prisma.$UserPermissionPayload<ExtArgs>
        fields: Prisma.UserPermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserPermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserPermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>
          }
          findFirst: {
            args: Prisma.UserPermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserPermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>
          }
          findMany: {
            args: Prisma.UserPermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>[]
          }
          create: {
            args: Prisma.UserPermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>
          }
          createMany: {
            args: Prisma.UserPermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserPermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>[]
          }
          delete: {
            args: Prisma.UserPermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>
          }
          update: {
            args: Prisma.UserPermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>
          }
          deleteMany: {
            args: Prisma.UserPermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserPermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserPermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>[]
          }
          upsert: {
            args: Prisma.UserPermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPermissionPayload>
          }
          aggregate: {
            args: Prisma.UserPermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserPermission>
          }
          groupBy: {
            args: Prisma.UserPermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserPermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserPermissionCountArgs<ExtArgs>
            result: $Utils.Optional<UserPermissionCountAggregateOutputType> | number
          }
        }
      }
      RolePermission: {
        payload: Prisma.$RolePermissionPayload<ExtArgs>
        fields: Prisma.RolePermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RolePermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RolePermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findFirst: {
            args: Prisma.RolePermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RolePermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          findMany: {
            args: Prisma.RolePermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          create: {
            args: Prisma.RolePermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          createMany: {
            args: Prisma.RolePermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RolePermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          delete: {
            args: Prisma.RolePermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          update: {
            args: Prisma.RolePermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          deleteMany: {
            args: Prisma.RolePermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RolePermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RolePermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>[]
          }
          upsert: {
            args: Prisma.RolePermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePermissionPayload>
          }
          aggregate: {
            args: Prisma.RolePermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRolePermission>
          }
          groupBy: {
            args: Prisma.RolePermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.RolePermissionCountArgs<ExtArgs>
            result: $Utils.Optional<RolePermissionCountAggregateOutputType> | number
          }
        }
      }
      CapitalImprovement: {
        payload: Prisma.$CapitalImprovementPayload<ExtArgs>
        fields: Prisma.CapitalImprovementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CapitalImprovementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CapitalImprovementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>
          }
          findFirst: {
            args: Prisma.CapitalImprovementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CapitalImprovementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>
          }
          findMany: {
            args: Prisma.CapitalImprovementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>[]
          }
          create: {
            args: Prisma.CapitalImprovementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>
          }
          createMany: {
            args: Prisma.CapitalImprovementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CapitalImprovementCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>[]
          }
          delete: {
            args: Prisma.CapitalImprovementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>
          }
          update: {
            args: Prisma.CapitalImprovementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>
          }
          deleteMany: {
            args: Prisma.CapitalImprovementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CapitalImprovementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CapitalImprovementUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>[]
          }
          upsert: {
            args: Prisma.CapitalImprovementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CapitalImprovementPayload>
          }
          aggregate: {
            args: Prisma.CapitalImprovementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCapitalImprovement>
          }
          groupBy: {
            args: Prisma.CapitalImprovementGroupByArgs<ExtArgs>
            result: $Utils.Optional<CapitalImprovementGroupByOutputType>[]
          }
          count: {
            args: Prisma.CapitalImprovementCountArgs<ExtArgs>
            result: $Utils.Optional<CapitalImprovementCountAggregateOutputType> | number
          }
        }
      }
      MaintenanceSchedule: {
        payload: Prisma.$MaintenanceSchedulePayload<ExtArgs>
        fields: Prisma.MaintenanceScheduleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaintenanceScheduleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaintenanceScheduleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>
          }
          findFirst: {
            args: Prisma.MaintenanceScheduleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaintenanceScheduleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>
          }
          findMany: {
            args: Prisma.MaintenanceScheduleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>[]
          }
          create: {
            args: Prisma.MaintenanceScheduleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>
          }
          createMany: {
            args: Prisma.MaintenanceScheduleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaintenanceScheduleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>[]
          }
          delete: {
            args: Prisma.MaintenanceScheduleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>
          }
          update: {
            args: Prisma.MaintenanceScheduleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>
          }
          deleteMany: {
            args: Prisma.MaintenanceScheduleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaintenanceScheduleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MaintenanceScheduleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>[]
          }
          upsert: {
            args: Prisma.MaintenanceScheduleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceSchedulePayload>
          }
          aggregate: {
            args: Prisma.MaintenanceScheduleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaintenanceSchedule>
          }
          groupBy: {
            args: Prisma.MaintenanceScheduleGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaintenanceScheduleGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaintenanceScheduleCountArgs<ExtArgs>
            result: $Utils.Optional<MaintenanceScheduleCountAggregateOutputType> | number
          }
        }
      }
      MaintenanceTemplate: {
        payload: Prisma.$MaintenanceTemplatePayload<ExtArgs>
        fields: Prisma.MaintenanceTemplateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MaintenanceTemplateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MaintenanceTemplateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>
          }
          findFirst: {
            args: Prisma.MaintenanceTemplateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MaintenanceTemplateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>
          }
          findMany: {
            args: Prisma.MaintenanceTemplateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>[]
          }
          create: {
            args: Prisma.MaintenanceTemplateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>
          }
          createMany: {
            args: Prisma.MaintenanceTemplateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MaintenanceTemplateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>[]
          }
          delete: {
            args: Prisma.MaintenanceTemplateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>
          }
          update: {
            args: Prisma.MaintenanceTemplateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>
          }
          deleteMany: {
            args: Prisma.MaintenanceTemplateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MaintenanceTemplateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MaintenanceTemplateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>[]
          }
          upsert: {
            args: Prisma.MaintenanceTemplateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MaintenanceTemplatePayload>
          }
          aggregate: {
            args: Prisma.MaintenanceTemplateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMaintenanceTemplate>
          }
          groupBy: {
            args: Prisma.MaintenanceTemplateGroupByArgs<ExtArgs>
            result: $Utils.Optional<MaintenanceTemplateGroupByOutputType>[]
          }
          count: {
            args: Prisma.MaintenanceTemplateCountArgs<ExtArgs>
            result: $Utils.Optional<MaintenanceTemplateCountAggregateOutputType> | number
          }
        }
      }
      AssetAudit: {
        payload: Prisma.$AssetAuditPayload<ExtArgs>
        fields: Prisma.AssetAuditFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AssetAuditFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AssetAuditFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>
          }
          findFirst: {
            args: Prisma.AssetAuditFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AssetAuditFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>
          }
          findMany: {
            args: Prisma.AssetAuditFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>[]
          }
          create: {
            args: Prisma.AssetAuditCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>
          }
          createMany: {
            args: Prisma.AssetAuditCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AssetAuditCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>[]
          }
          delete: {
            args: Prisma.AssetAuditDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>
          }
          update: {
            args: Prisma.AssetAuditUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>
          }
          deleteMany: {
            args: Prisma.AssetAuditDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AssetAuditUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AssetAuditUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>[]
          }
          upsert: {
            args: Prisma.AssetAuditUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AssetAuditPayload>
          }
          aggregate: {
            args: Prisma.AssetAuditAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAssetAudit>
          }
          groupBy: {
            args: Prisma.AssetAuditGroupByArgs<ExtArgs>
            result: $Utils.Optional<AssetAuditGroupByOutputType>[]
          }
          count: {
            args: Prisma.AssetAuditCountArgs<ExtArgs>
            result: $Utils.Optional<AssetAuditCountAggregateOutputType> | number
          }
        }
      }
      AuditAssignment: {
        payload: Prisma.$AuditAssignmentPayload<ExtArgs>
        fields: Prisma.AuditAssignmentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditAssignmentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditAssignmentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>
          }
          findFirst: {
            args: Prisma.AuditAssignmentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditAssignmentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>
          }
          findMany: {
            args: Prisma.AuditAssignmentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>[]
          }
          create: {
            args: Prisma.AuditAssignmentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>
          }
          createMany: {
            args: Prisma.AuditAssignmentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditAssignmentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>[]
          }
          delete: {
            args: Prisma.AuditAssignmentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>
          }
          update: {
            args: Prisma.AuditAssignmentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>
          }
          deleteMany: {
            args: Prisma.AuditAssignmentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditAssignmentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AuditAssignmentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>[]
          }
          upsert: {
            args: Prisma.AuditAssignmentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditAssignmentPayload>
          }
          aggregate: {
            args: Prisma.AuditAssignmentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditAssignment>
          }
          groupBy: {
            args: Prisma.AuditAssignmentGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditAssignmentGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditAssignmentCountArgs<ExtArgs>
            result: $Utils.Optional<AuditAssignmentCountAggregateOutputType> | number
          }
        }
      }
      AuditRequest: {
        payload: Prisma.$AuditRequestPayload<ExtArgs>
        fields: Prisma.AuditRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>
          }
          findFirst: {
            args: Prisma.AuditRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>
          }
          findMany: {
            args: Prisma.AuditRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>[]
          }
          create: {
            args: Prisma.AuditRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>
          }
          createMany: {
            args: Prisma.AuditRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>[]
          }
          delete: {
            args: Prisma.AuditRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>
          }
          update: {
            args: Prisma.AuditRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>
          }
          deleteMany: {
            args: Prisma.AuditRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AuditRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>[]
          }
          upsert: {
            args: Prisma.AuditRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditRequestPayload>
          }
          aggregate: {
            args: Prisma.AuditRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditRequest>
          }
          groupBy: {
            args: Prisma.AuditRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditRequestCountArgs<ExtArgs>
            result: $Utils.Optional<AuditRequestCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    roleChangeLog?: RoleChangeLogOmit
    user?: UserOmit
    notification?: NotificationOmit
    asset?: AssetOmit
    transfer?: TransferOmit
    maintenance?: MaintenanceOmit
    disposal?: DisposalOmit
    document?: DocumentOmit
    depreciation?: DepreciationOmit
    assetDepreciation?: AssetDepreciationOmit
    assetHistory?: AssetHistoryOmit
    linkedAsset?: LinkedAssetOmit
    permission?: PermissionOmit
    userPermission?: UserPermissionOmit
    rolePermission?: RolePermissionOmit
    capitalImprovement?: CapitalImprovementOmit
    maintenanceSchedule?: MaintenanceScheduleOmit
    maintenanceTemplate?: MaintenanceTemplateOmit
    assetAudit?: AssetAuditOmit
    auditAssignment?: AuditAssignmentOmit
    auditRequest?: AuditRequestOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    roleChangeLogs: number
    roleChangesMade: number
    userPermissions: number
    maintenanceRequests: number
    managedMaintenance: number
    assignedMaintenance: number
    createdSchedules: number
    assignedSchedules: number
    createdTemplates: number
    transferRequests: number
    managedTransfers: number
    disposalRequests: number
    notifications: number
    auditsPerformed: number
    auditAssignments: number
    auditAssignmentsMade: number
    auditRequests: number
    auditRequestsReviewed: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roleChangeLogs?: boolean | UserCountOutputTypeCountRoleChangeLogsArgs
    roleChangesMade?: boolean | UserCountOutputTypeCountRoleChangesMadeArgs
    userPermissions?: boolean | UserCountOutputTypeCountUserPermissionsArgs
    maintenanceRequests?: boolean | UserCountOutputTypeCountMaintenanceRequestsArgs
    managedMaintenance?: boolean | UserCountOutputTypeCountManagedMaintenanceArgs
    assignedMaintenance?: boolean | UserCountOutputTypeCountAssignedMaintenanceArgs
    createdSchedules?: boolean | UserCountOutputTypeCountCreatedSchedulesArgs
    assignedSchedules?: boolean | UserCountOutputTypeCountAssignedSchedulesArgs
    createdTemplates?: boolean | UserCountOutputTypeCountCreatedTemplatesArgs
    transferRequests?: boolean | UserCountOutputTypeCountTransferRequestsArgs
    managedTransfers?: boolean | UserCountOutputTypeCountManagedTransfersArgs
    disposalRequests?: boolean | UserCountOutputTypeCountDisposalRequestsArgs
    notifications?: boolean | UserCountOutputTypeCountNotificationsArgs
    auditsPerformed?: boolean | UserCountOutputTypeCountAuditsPerformedArgs
    auditAssignments?: boolean | UserCountOutputTypeCountAuditAssignmentsArgs
    auditAssignmentsMade?: boolean | UserCountOutputTypeCountAuditAssignmentsMadeArgs
    auditRequests?: boolean | UserCountOutputTypeCountAuditRequestsArgs
    auditRequestsReviewed?: boolean | UserCountOutputTypeCountAuditRequestsReviewedArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRoleChangeLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleChangeLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRoleChangesMadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleChangeLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserPermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMaintenanceRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManagedMaintenanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignedMaintenanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceScheduleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAssignedSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceScheduleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedTemplatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceTemplateWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransferRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountManagedTransfersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDisposalRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DisposalWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditsPerformedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetAuditWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditAssignmentsMadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditAssignmentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditRequestWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAuditRequestsReviewedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditRequestWhereInput
  }


  /**
   * Count Type AssetCountOutputType
   */

  export type AssetCountOutputType = {
    assetDepreciations: number
    history: number
    depreciations: number
    disposalRequests: number
    documents: number
    maintenanceRequests: number
    maintenanceSchedules: number
    transferRequests: number
    linkedTo: number
    linkedFrom: number
    capitalImprovements: number
    audits: number
    auditAssignments: number
    auditRequests: number
  }

  export type AssetCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assetDepreciations?: boolean | AssetCountOutputTypeCountAssetDepreciationsArgs
    history?: boolean | AssetCountOutputTypeCountHistoryArgs
    depreciations?: boolean | AssetCountOutputTypeCountDepreciationsArgs
    disposalRequests?: boolean | AssetCountOutputTypeCountDisposalRequestsArgs
    documents?: boolean | AssetCountOutputTypeCountDocumentsArgs
    maintenanceRequests?: boolean | AssetCountOutputTypeCountMaintenanceRequestsArgs
    maintenanceSchedules?: boolean | AssetCountOutputTypeCountMaintenanceSchedulesArgs
    transferRequests?: boolean | AssetCountOutputTypeCountTransferRequestsArgs
    linkedTo?: boolean | AssetCountOutputTypeCountLinkedToArgs
    linkedFrom?: boolean | AssetCountOutputTypeCountLinkedFromArgs
    capitalImprovements?: boolean | AssetCountOutputTypeCountCapitalImprovementsArgs
    audits?: boolean | AssetCountOutputTypeCountAuditsArgs
    auditAssignments?: boolean | AssetCountOutputTypeCountAuditAssignmentsArgs
    auditRequests?: boolean | AssetCountOutputTypeCountAuditRequestsArgs
  }

  // Custom InputTypes
  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetCountOutputType
     */
    select?: AssetCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountAssetDepreciationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetDepreciationWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetHistoryWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountDepreciationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepreciationWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountDisposalRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DisposalWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountMaintenanceRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountMaintenanceSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceScheduleWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountTransferRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountLinkedToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LinkedAssetWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountLinkedFromArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LinkedAssetWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountCapitalImprovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CapitalImprovementWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountAuditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetAuditWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountAuditAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditAssignmentWhereInput
  }

  /**
   * AssetCountOutputType without action
   */
  export type AssetCountOutputTypeCountAuditRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditRequestWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    userPermissions: number
    rolePermissions: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userPermissions?: boolean | PermissionCountOutputTypeCountUserPermissionsArgs
    rolePermissions?: boolean | PermissionCountOutputTypeCountRolePermissionsArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountUserPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserPermissionWhereInput
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRolePermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
  }


  /**
   * Count Type MaintenanceScheduleCountOutputType
   */

  export type MaintenanceScheduleCountOutputType = {
    maintenanceTasks: number
  }

  export type MaintenanceScheduleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    maintenanceTasks?: boolean | MaintenanceScheduleCountOutputTypeCountMaintenanceTasksArgs
  }

  // Custom InputTypes
  /**
   * MaintenanceScheduleCountOutputType without action
   */
  export type MaintenanceScheduleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceScheduleCountOutputType
     */
    select?: MaintenanceScheduleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaintenanceScheduleCountOutputType without action
   */
  export type MaintenanceScheduleCountOutputTypeCountMaintenanceTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
  }


  /**
   * Count Type MaintenanceTemplateCountOutputType
   */

  export type MaintenanceTemplateCountOutputType = {
    schedules: number
    maintenanceTasks: number
  }

  export type MaintenanceTemplateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    schedules?: boolean | MaintenanceTemplateCountOutputTypeCountSchedulesArgs
    maintenanceTasks?: boolean | MaintenanceTemplateCountOutputTypeCountMaintenanceTasksArgs
  }

  // Custom InputTypes
  /**
   * MaintenanceTemplateCountOutputType without action
   */
  export type MaintenanceTemplateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplateCountOutputType
     */
    select?: MaintenanceTemplateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MaintenanceTemplateCountOutputType without action
   */
  export type MaintenanceTemplateCountOutputTypeCountSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceScheduleWhereInput
  }

  /**
   * MaintenanceTemplateCountOutputType without action
   */
  export type MaintenanceTemplateCountOutputTypeCountMaintenanceTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
  }


  /**
   * Count Type AuditAssignmentCountOutputType
   */

  export type AuditAssignmentCountOutputType = {
    audits: number
  }

  export type AuditAssignmentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    audits?: boolean | AuditAssignmentCountOutputTypeCountAuditsArgs
  }

  // Custom InputTypes
  /**
   * AuditAssignmentCountOutputType without action
   */
  export type AuditAssignmentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignmentCountOutputType
     */
    select?: AuditAssignmentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AuditAssignmentCountOutputType without action
   */
  export type AuditAssignmentCountOutputTypeCountAuditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetAuditWhereInput
  }


  /**
   * Count Type AuditRequestCountOutputType
   */

  export type AuditRequestCountOutputType = {
    audits: number
  }

  export type AuditRequestCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    audits?: boolean | AuditRequestCountOutputTypeCountAuditsArgs
  }

  // Custom InputTypes
  /**
   * AuditRequestCountOutputType without action
   */
  export type AuditRequestCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequestCountOutputType
     */
    select?: AuditRequestCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AuditRequestCountOutputType without action
   */
  export type AuditRequestCountOutputTypeCountAuditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetAuditWhereInput
  }


  /**
   * Models
   */

  /**
   * Model RoleChangeLog
   */

  export type AggregateRoleChangeLog = {
    _count: RoleChangeLogCountAggregateOutputType | null
    _min: RoleChangeLogMinAggregateOutputType | null
    _max: RoleChangeLogMaxAggregateOutputType | null
  }

  export type RoleChangeLogMinAggregateOutputType = {
    id: string | null
    userId: string | null
    oldRole: string | null
    newRole: string | null
    changedBy: string | null
    changedAt: Date | null
  }

  export type RoleChangeLogMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    oldRole: string | null
    newRole: string | null
    changedBy: string | null
    changedAt: Date | null
  }

  export type RoleChangeLogCountAggregateOutputType = {
    id: number
    userId: number
    oldRole: number
    newRole: number
    changedBy: number
    changedAt: number
    _all: number
  }


  export type RoleChangeLogMinAggregateInputType = {
    id?: true
    userId?: true
    oldRole?: true
    newRole?: true
    changedBy?: true
    changedAt?: true
  }

  export type RoleChangeLogMaxAggregateInputType = {
    id?: true
    userId?: true
    oldRole?: true
    newRole?: true
    changedBy?: true
    changedAt?: true
  }

  export type RoleChangeLogCountAggregateInputType = {
    id?: true
    userId?: true
    oldRole?: true
    newRole?: true
    changedBy?: true
    changedAt?: true
    _all?: true
  }

  export type RoleChangeLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleChangeLog to aggregate.
     */
    where?: RoleChangeLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleChangeLogs to fetch.
     */
    orderBy?: RoleChangeLogOrderByWithRelationInput | RoleChangeLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleChangeLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleChangeLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleChangeLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoleChangeLogs
    **/
    _count?: true | RoleChangeLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleChangeLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleChangeLogMaxAggregateInputType
  }

  export type GetRoleChangeLogAggregateType<T extends RoleChangeLogAggregateArgs> = {
        [P in keyof T & keyof AggregateRoleChangeLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoleChangeLog[P]>
      : GetScalarType<T[P], AggregateRoleChangeLog[P]>
  }




  export type RoleChangeLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleChangeLogWhereInput
    orderBy?: RoleChangeLogOrderByWithAggregationInput | RoleChangeLogOrderByWithAggregationInput[]
    by: RoleChangeLogScalarFieldEnum[] | RoleChangeLogScalarFieldEnum
    having?: RoleChangeLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleChangeLogCountAggregateInputType | true
    _min?: RoleChangeLogMinAggregateInputType
    _max?: RoleChangeLogMaxAggregateInputType
  }

  export type RoleChangeLogGroupByOutputType = {
    id: string
    userId: string
    oldRole: string
    newRole: string
    changedBy: string
    changedAt: Date
    _count: RoleChangeLogCountAggregateOutputType | null
    _min: RoleChangeLogMinAggregateOutputType | null
    _max: RoleChangeLogMaxAggregateOutputType | null
  }

  type GetRoleChangeLogGroupByPayload<T extends RoleChangeLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleChangeLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleChangeLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleChangeLogGroupByOutputType[P]>
            : GetScalarType<T[P], RoleChangeLogGroupByOutputType[P]>
        }
      >
    >


  export type RoleChangeLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    oldRole?: boolean
    newRole?: boolean
    changedBy?: boolean
    changedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    changedByUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleChangeLog"]>

  export type RoleChangeLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    oldRole?: boolean
    newRole?: boolean
    changedBy?: boolean
    changedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    changedByUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleChangeLog"]>

  export type RoleChangeLogSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    oldRole?: boolean
    newRole?: boolean
    changedBy?: boolean
    changedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    changedByUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roleChangeLog"]>

  export type RoleChangeLogSelectScalar = {
    id?: boolean
    userId?: boolean
    oldRole?: boolean
    newRole?: boolean
    changedBy?: boolean
    changedAt?: boolean
  }

  export type RoleChangeLogOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "oldRole" | "newRole" | "changedBy" | "changedAt", ExtArgs["result"]["roleChangeLog"]>
  export type RoleChangeLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    changedByUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RoleChangeLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    changedByUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type RoleChangeLogIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    changedByUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RoleChangeLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RoleChangeLog"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      changedByUser: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      oldRole: string
      newRole: string
      changedBy: string
      changedAt: Date
    }, ExtArgs["result"]["roleChangeLog"]>
    composites: {}
  }

  type RoleChangeLogGetPayload<S extends boolean | null | undefined | RoleChangeLogDefaultArgs> = $Result.GetResult<Prisma.$RoleChangeLogPayload, S>

  type RoleChangeLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleChangeLogFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleChangeLogCountAggregateInputType | true
    }

  export interface RoleChangeLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RoleChangeLog'], meta: { name: 'RoleChangeLog' } }
    /**
     * Find zero or one RoleChangeLog that matches the filter.
     * @param {RoleChangeLogFindUniqueArgs} args - Arguments to find a RoleChangeLog
     * @example
     * // Get one RoleChangeLog
     * const roleChangeLog = await prisma.roleChangeLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleChangeLogFindUniqueArgs>(args: SelectSubset<T, RoleChangeLogFindUniqueArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RoleChangeLog that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleChangeLogFindUniqueOrThrowArgs} args - Arguments to find a RoleChangeLog
     * @example
     * // Get one RoleChangeLog
     * const roleChangeLog = await prisma.roleChangeLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleChangeLogFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleChangeLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleChangeLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogFindFirstArgs} args - Arguments to find a RoleChangeLog
     * @example
     * // Get one RoleChangeLog
     * const roleChangeLog = await prisma.roleChangeLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleChangeLogFindFirstArgs>(args?: SelectSubset<T, RoleChangeLogFindFirstArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoleChangeLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogFindFirstOrThrowArgs} args - Arguments to find a RoleChangeLog
     * @example
     * // Get one RoleChangeLog
     * const roleChangeLog = await prisma.roleChangeLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleChangeLogFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleChangeLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RoleChangeLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoleChangeLogs
     * const roleChangeLogs = await prisma.roleChangeLog.findMany()
     * 
     * // Get first 10 RoleChangeLogs
     * const roleChangeLogs = await prisma.roleChangeLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleChangeLogWithIdOnly = await prisma.roleChangeLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleChangeLogFindManyArgs>(args?: SelectSubset<T, RoleChangeLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RoleChangeLog.
     * @param {RoleChangeLogCreateArgs} args - Arguments to create a RoleChangeLog.
     * @example
     * // Create one RoleChangeLog
     * const RoleChangeLog = await prisma.roleChangeLog.create({
     *   data: {
     *     // ... data to create a RoleChangeLog
     *   }
     * })
     * 
     */
    create<T extends RoleChangeLogCreateArgs>(args: SelectSubset<T, RoleChangeLogCreateArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RoleChangeLogs.
     * @param {RoleChangeLogCreateManyArgs} args - Arguments to create many RoleChangeLogs.
     * @example
     * // Create many RoleChangeLogs
     * const roleChangeLog = await prisma.roleChangeLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleChangeLogCreateManyArgs>(args?: SelectSubset<T, RoleChangeLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RoleChangeLogs and returns the data saved in the database.
     * @param {RoleChangeLogCreateManyAndReturnArgs} args - Arguments to create many RoleChangeLogs.
     * @example
     * // Create many RoleChangeLogs
     * const roleChangeLog = await prisma.roleChangeLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RoleChangeLogs and only return the `id`
     * const roleChangeLogWithIdOnly = await prisma.roleChangeLog.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleChangeLogCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleChangeLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RoleChangeLog.
     * @param {RoleChangeLogDeleteArgs} args - Arguments to delete one RoleChangeLog.
     * @example
     * // Delete one RoleChangeLog
     * const RoleChangeLog = await prisma.roleChangeLog.delete({
     *   where: {
     *     // ... filter to delete one RoleChangeLog
     *   }
     * })
     * 
     */
    delete<T extends RoleChangeLogDeleteArgs>(args: SelectSubset<T, RoleChangeLogDeleteArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RoleChangeLog.
     * @param {RoleChangeLogUpdateArgs} args - Arguments to update one RoleChangeLog.
     * @example
     * // Update one RoleChangeLog
     * const roleChangeLog = await prisma.roleChangeLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleChangeLogUpdateArgs>(args: SelectSubset<T, RoleChangeLogUpdateArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RoleChangeLogs.
     * @param {RoleChangeLogDeleteManyArgs} args - Arguments to filter RoleChangeLogs to delete.
     * @example
     * // Delete a few RoleChangeLogs
     * const { count } = await prisma.roleChangeLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleChangeLogDeleteManyArgs>(args?: SelectSubset<T, RoleChangeLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleChangeLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoleChangeLogs
     * const roleChangeLog = await prisma.roleChangeLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleChangeLogUpdateManyArgs>(args: SelectSubset<T, RoleChangeLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoleChangeLogs and returns the data updated in the database.
     * @param {RoleChangeLogUpdateManyAndReturnArgs} args - Arguments to update many RoleChangeLogs.
     * @example
     * // Update many RoleChangeLogs
     * const roleChangeLog = await prisma.roleChangeLog.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RoleChangeLogs and only return the `id`
     * const roleChangeLogWithIdOnly = await prisma.roleChangeLog.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleChangeLogUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleChangeLogUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RoleChangeLog.
     * @param {RoleChangeLogUpsertArgs} args - Arguments to update or create a RoleChangeLog.
     * @example
     * // Update or create a RoleChangeLog
     * const roleChangeLog = await prisma.roleChangeLog.upsert({
     *   create: {
     *     // ... data to create a RoleChangeLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoleChangeLog we want to update
     *   }
     * })
     */
    upsert<T extends RoleChangeLogUpsertArgs>(args: SelectSubset<T, RoleChangeLogUpsertArgs<ExtArgs>>): Prisma__RoleChangeLogClient<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RoleChangeLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogCountArgs} args - Arguments to filter RoleChangeLogs to count.
     * @example
     * // Count the number of RoleChangeLogs
     * const count = await prisma.roleChangeLog.count({
     *   where: {
     *     // ... the filter for the RoleChangeLogs we want to count
     *   }
     * })
    **/
    count<T extends RoleChangeLogCountArgs>(
      args?: Subset<T, RoleChangeLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleChangeLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoleChangeLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleChangeLogAggregateArgs>(args: Subset<T, RoleChangeLogAggregateArgs>): Prisma.PrismaPromise<GetRoleChangeLogAggregateType<T>>

    /**
     * Group by RoleChangeLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleChangeLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleChangeLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleChangeLogGroupByArgs['orderBy'] }
        : { orderBy?: RoleChangeLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleChangeLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleChangeLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RoleChangeLog model
   */
  readonly fields: RoleChangeLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RoleChangeLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleChangeLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    changedByUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RoleChangeLog model
   */
  interface RoleChangeLogFieldRefs {
    readonly id: FieldRef<"RoleChangeLog", 'String'>
    readonly userId: FieldRef<"RoleChangeLog", 'String'>
    readonly oldRole: FieldRef<"RoleChangeLog", 'String'>
    readonly newRole: FieldRef<"RoleChangeLog", 'String'>
    readonly changedBy: FieldRef<"RoleChangeLog", 'String'>
    readonly changedAt: FieldRef<"RoleChangeLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RoleChangeLog findUnique
   */
  export type RoleChangeLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * Filter, which RoleChangeLog to fetch.
     */
    where: RoleChangeLogWhereUniqueInput
  }

  /**
   * RoleChangeLog findUniqueOrThrow
   */
  export type RoleChangeLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * Filter, which RoleChangeLog to fetch.
     */
    where: RoleChangeLogWhereUniqueInput
  }

  /**
   * RoleChangeLog findFirst
   */
  export type RoleChangeLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * Filter, which RoleChangeLog to fetch.
     */
    where?: RoleChangeLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleChangeLogs to fetch.
     */
    orderBy?: RoleChangeLogOrderByWithRelationInput | RoleChangeLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleChangeLogs.
     */
    cursor?: RoleChangeLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleChangeLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleChangeLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleChangeLogs.
     */
    distinct?: RoleChangeLogScalarFieldEnum | RoleChangeLogScalarFieldEnum[]
  }

  /**
   * RoleChangeLog findFirstOrThrow
   */
  export type RoleChangeLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * Filter, which RoleChangeLog to fetch.
     */
    where?: RoleChangeLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleChangeLogs to fetch.
     */
    orderBy?: RoleChangeLogOrderByWithRelationInput | RoleChangeLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoleChangeLogs.
     */
    cursor?: RoleChangeLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleChangeLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleChangeLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoleChangeLogs.
     */
    distinct?: RoleChangeLogScalarFieldEnum | RoleChangeLogScalarFieldEnum[]
  }

  /**
   * RoleChangeLog findMany
   */
  export type RoleChangeLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * Filter, which RoleChangeLogs to fetch.
     */
    where?: RoleChangeLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoleChangeLogs to fetch.
     */
    orderBy?: RoleChangeLogOrderByWithRelationInput | RoleChangeLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoleChangeLogs.
     */
    cursor?: RoleChangeLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoleChangeLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoleChangeLogs.
     */
    skip?: number
    distinct?: RoleChangeLogScalarFieldEnum | RoleChangeLogScalarFieldEnum[]
  }

  /**
   * RoleChangeLog create
   */
  export type RoleChangeLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * The data needed to create a RoleChangeLog.
     */
    data: XOR<RoleChangeLogCreateInput, RoleChangeLogUncheckedCreateInput>
  }

  /**
   * RoleChangeLog createMany
   */
  export type RoleChangeLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RoleChangeLogs.
     */
    data: RoleChangeLogCreateManyInput | RoleChangeLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RoleChangeLog createManyAndReturn
   */
  export type RoleChangeLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * The data used to create many RoleChangeLogs.
     */
    data: RoleChangeLogCreateManyInput | RoleChangeLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RoleChangeLog update
   */
  export type RoleChangeLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * The data needed to update a RoleChangeLog.
     */
    data: XOR<RoleChangeLogUpdateInput, RoleChangeLogUncheckedUpdateInput>
    /**
     * Choose, which RoleChangeLog to update.
     */
    where: RoleChangeLogWhereUniqueInput
  }

  /**
   * RoleChangeLog updateMany
   */
  export type RoleChangeLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RoleChangeLogs.
     */
    data: XOR<RoleChangeLogUpdateManyMutationInput, RoleChangeLogUncheckedUpdateManyInput>
    /**
     * Filter which RoleChangeLogs to update
     */
    where?: RoleChangeLogWhereInput
    /**
     * Limit how many RoleChangeLogs to update.
     */
    limit?: number
  }

  /**
   * RoleChangeLog updateManyAndReturn
   */
  export type RoleChangeLogUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * The data used to update RoleChangeLogs.
     */
    data: XOR<RoleChangeLogUpdateManyMutationInput, RoleChangeLogUncheckedUpdateManyInput>
    /**
     * Filter which RoleChangeLogs to update
     */
    where?: RoleChangeLogWhereInput
    /**
     * Limit how many RoleChangeLogs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RoleChangeLog upsert
   */
  export type RoleChangeLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * The filter to search for the RoleChangeLog to update in case it exists.
     */
    where: RoleChangeLogWhereUniqueInput
    /**
     * In case the RoleChangeLog found by the `where` argument doesn't exist, create a new RoleChangeLog with this data.
     */
    create: XOR<RoleChangeLogCreateInput, RoleChangeLogUncheckedCreateInput>
    /**
     * In case the RoleChangeLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleChangeLogUpdateInput, RoleChangeLogUncheckedUpdateInput>
  }

  /**
   * RoleChangeLog delete
   */
  export type RoleChangeLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    /**
     * Filter which RoleChangeLog to delete.
     */
    where: RoleChangeLogWhereUniqueInput
  }

  /**
   * RoleChangeLog deleteMany
   */
  export type RoleChangeLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoleChangeLogs to delete
     */
    where?: RoleChangeLogWhereInput
    /**
     * Limit how many RoleChangeLogs to delete.
     */
    limit?: number
  }

  /**
   * RoleChangeLog without action
   */
  export type RoleChangeLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    role: $Enums.Role | null
    emailVerified: Date | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    role: $Enums.Role | null
    emailVerified: Date | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    role: number
    emailVerified: number
    image: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    emailVerified?: true
    image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    emailVerified?: true
    image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    emailVerified?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string | null
    email: string
    password: string
    role: $Enums.Role
    emailVerified: Date | null
    image: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    roleChangeLogs?: boolean | User$roleChangeLogsArgs<ExtArgs>
    roleChangesMade?: boolean | User$roleChangesMadeArgs<ExtArgs>
    userPermissions?: boolean | User$userPermissionsArgs<ExtArgs>
    maintenanceRequests?: boolean | User$maintenanceRequestsArgs<ExtArgs>
    managedMaintenance?: boolean | User$managedMaintenanceArgs<ExtArgs>
    assignedMaintenance?: boolean | User$assignedMaintenanceArgs<ExtArgs>
    createdSchedules?: boolean | User$createdSchedulesArgs<ExtArgs>
    assignedSchedules?: boolean | User$assignedSchedulesArgs<ExtArgs>
    createdTemplates?: boolean | User$createdTemplatesArgs<ExtArgs>
    transferRequests?: boolean | User$transferRequestsArgs<ExtArgs>
    managedTransfers?: boolean | User$managedTransfersArgs<ExtArgs>
    disposalRequests?: boolean | User$disposalRequestsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    auditsPerformed?: boolean | User$auditsPerformedArgs<ExtArgs>
    auditAssignments?: boolean | User$auditAssignmentsArgs<ExtArgs>
    auditAssignmentsMade?: boolean | User$auditAssignmentsMadeArgs<ExtArgs>
    auditRequests?: boolean | User$auditRequestsArgs<ExtArgs>
    auditRequestsReviewed?: boolean | User$auditRequestsReviewedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "role" | "emailVerified" | "image" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roleChangeLogs?: boolean | User$roleChangeLogsArgs<ExtArgs>
    roleChangesMade?: boolean | User$roleChangesMadeArgs<ExtArgs>
    userPermissions?: boolean | User$userPermissionsArgs<ExtArgs>
    maintenanceRequests?: boolean | User$maintenanceRequestsArgs<ExtArgs>
    managedMaintenance?: boolean | User$managedMaintenanceArgs<ExtArgs>
    assignedMaintenance?: boolean | User$assignedMaintenanceArgs<ExtArgs>
    createdSchedules?: boolean | User$createdSchedulesArgs<ExtArgs>
    assignedSchedules?: boolean | User$assignedSchedulesArgs<ExtArgs>
    createdTemplates?: boolean | User$createdTemplatesArgs<ExtArgs>
    transferRequests?: boolean | User$transferRequestsArgs<ExtArgs>
    managedTransfers?: boolean | User$managedTransfersArgs<ExtArgs>
    disposalRequests?: boolean | User$disposalRequestsArgs<ExtArgs>
    notifications?: boolean | User$notificationsArgs<ExtArgs>
    auditsPerformed?: boolean | User$auditsPerformedArgs<ExtArgs>
    auditAssignments?: boolean | User$auditAssignmentsArgs<ExtArgs>
    auditAssignmentsMade?: boolean | User$auditAssignmentsMadeArgs<ExtArgs>
    auditRequests?: boolean | User$auditRequestsArgs<ExtArgs>
    auditRequestsReviewed?: boolean | User$auditRequestsReviewedArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      roleChangeLogs: Prisma.$RoleChangeLogPayload<ExtArgs>[]
      roleChangesMade: Prisma.$RoleChangeLogPayload<ExtArgs>[]
      userPermissions: Prisma.$UserPermissionPayload<ExtArgs>[]
      maintenanceRequests: Prisma.$MaintenancePayload<ExtArgs>[]
      managedMaintenance: Prisma.$MaintenancePayload<ExtArgs>[]
      assignedMaintenance: Prisma.$MaintenancePayload<ExtArgs>[]
      createdSchedules: Prisma.$MaintenanceSchedulePayload<ExtArgs>[]
      assignedSchedules: Prisma.$MaintenanceSchedulePayload<ExtArgs>[]
      createdTemplates: Prisma.$MaintenanceTemplatePayload<ExtArgs>[]
      transferRequests: Prisma.$TransferPayload<ExtArgs>[]
      managedTransfers: Prisma.$TransferPayload<ExtArgs>[]
      disposalRequests: Prisma.$DisposalPayload<ExtArgs>[]
      notifications: Prisma.$NotificationPayload<ExtArgs>[]
      auditsPerformed: Prisma.$AssetAuditPayload<ExtArgs>[]
      auditAssignments: Prisma.$AuditAssignmentPayload<ExtArgs>[]
      auditAssignmentsMade: Prisma.$AuditAssignmentPayload<ExtArgs>[]
      auditRequests: Prisma.$AuditRequestPayload<ExtArgs>[]
      auditRequestsReviewed: Prisma.$AuditRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string | null
      email: string
      password: string
      role: $Enums.Role
      emailVerified: Date | null
      image: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roleChangeLogs<T extends User$roleChangeLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$roleChangeLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    roleChangesMade<T extends User$roleChangesMadeArgs<ExtArgs> = {}>(args?: Subset<T, User$roleChangesMadeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoleChangeLogPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userPermissions<T extends User$userPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, User$userPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    maintenanceRequests<T extends User$maintenanceRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$maintenanceRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    managedMaintenance<T extends User$managedMaintenanceArgs<ExtArgs> = {}>(args?: Subset<T, User$managedMaintenanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    assignedMaintenance<T extends User$assignedMaintenanceArgs<ExtArgs> = {}>(args?: Subset<T, User$assignedMaintenanceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdSchedules<T extends User$createdSchedulesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdSchedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    assignedSchedules<T extends User$assignedSchedulesArgs<ExtArgs> = {}>(args?: Subset<T, User$assignedSchedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdTemplates<T extends User$createdTemplatesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdTemplatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transferRequests<T extends User$transferRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$transferRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    managedTransfers<T extends User$managedTransfersArgs<ExtArgs> = {}>(args?: Subset<T, User$managedTransfersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    disposalRequests<T extends User$disposalRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$disposalRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends User$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditsPerformed<T extends User$auditsPerformedArgs<ExtArgs> = {}>(args?: Subset<T, User$auditsPerformedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditAssignments<T extends User$auditAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, User$auditAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditAssignmentsMade<T extends User$auditAssignmentsMadeArgs<ExtArgs> = {}>(args?: Subset<T, User$auditAssignmentsMadeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditRequests<T extends User$auditRequestsArgs<ExtArgs> = {}>(args?: Subset<T, User$auditRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditRequestsReviewed<T extends User$auditRequestsReviewedArgs<ExtArgs> = {}>(args?: Subset<T, User$auditRequestsReviewedArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly emailVerified: FieldRef<"User", 'DateTime'>
    readonly image: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.roleChangeLogs
   */
  export type User$roleChangeLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    where?: RoleChangeLogWhereInput
    orderBy?: RoleChangeLogOrderByWithRelationInput | RoleChangeLogOrderByWithRelationInput[]
    cursor?: RoleChangeLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleChangeLogScalarFieldEnum | RoleChangeLogScalarFieldEnum[]
  }

  /**
   * User.roleChangesMade
   */
  export type User$roleChangesMadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleChangeLog
     */
    select?: RoleChangeLogSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoleChangeLog
     */
    omit?: RoleChangeLogOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleChangeLogInclude<ExtArgs> | null
    where?: RoleChangeLogWhereInput
    orderBy?: RoleChangeLogOrderByWithRelationInput | RoleChangeLogOrderByWithRelationInput[]
    cursor?: RoleChangeLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleChangeLogScalarFieldEnum | RoleChangeLogScalarFieldEnum[]
  }

  /**
   * User.userPermissions
   */
  export type User$userPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    where?: UserPermissionWhereInput
    orderBy?: UserPermissionOrderByWithRelationInput | UserPermissionOrderByWithRelationInput[]
    cursor?: UserPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserPermissionScalarFieldEnum | UserPermissionScalarFieldEnum[]
  }

  /**
   * User.maintenanceRequests
   */
  export type User$maintenanceRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    cursor?: MaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * User.managedMaintenance
   */
  export type User$managedMaintenanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    cursor?: MaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * User.assignedMaintenance
   */
  export type User$assignedMaintenanceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    cursor?: MaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * User.createdSchedules
   */
  export type User$createdSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    where?: MaintenanceScheduleWhereInput
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    cursor?: MaintenanceScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * User.assignedSchedules
   */
  export type User$assignedSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    where?: MaintenanceScheduleWhereInput
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    cursor?: MaintenanceScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * User.createdTemplates
   */
  export type User$createdTemplatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    where?: MaintenanceTemplateWhereInput
    orderBy?: MaintenanceTemplateOrderByWithRelationInput | MaintenanceTemplateOrderByWithRelationInput[]
    cursor?: MaintenanceTemplateWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceTemplateScalarFieldEnum | MaintenanceTemplateScalarFieldEnum[]
  }

  /**
   * User.transferRequests
   */
  export type User$transferRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    where?: TransferWhereInput
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    cursor?: TransferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferScalarFieldEnum | TransferScalarFieldEnum[]
  }

  /**
   * User.managedTransfers
   */
  export type User$managedTransfersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    where?: TransferWhereInput
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    cursor?: TransferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferScalarFieldEnum | TransferScalarFieldEnum[]
  }

  /**
   * User.disposalRequests
   */
  export type User$disposalRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    where?: DisposalWhereInput
    orderBy?: DisposalOrderByWithRelationInput | DisposalOrderByWithRelationInput[]
    cursor?: DisposalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisposalScalarFieldEnum | DisposalScalarFieldEnum[]
  }

  /**
   * User.notifications
   */
  export type User$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    cursor?: NotificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * User.auditsPerformed
   */
  export type User$auditsPerformedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    where?: AssetAuditWhereInput
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    cursor?: AssetAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * User.auditAssignments
   */
  export type User$auditAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    where?: AuditAssignmentWhereInput
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    cursor?: AuditAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditAssignmentScalarFieldEnum | AuditAssignmentScalarFieldEnum[]
  }

  /**
   * User.auditAssignmentsMade
   */
  export type User$auditAssignmentsMadeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    where?: AuditAssignmentWhereInput
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    cursor?: AuditAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditAssignmentScalarFieldEnum | AuditAssignmentScalarFieldEnum[]
  }

  /**
   * User.auditRequests
   */
  export type User$auditRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    where?: AuditRequestWhereInput
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    cursor?: AuditRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditRequestScalarFieldEnum | AuditRequestScalarFieldEnum[]
  }

  /**
   * User.auditRequestsReviewed
   */
  export type User$auditRequestsReviewedArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    where?: AuditRequestWhereInput
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    cursor?: AuditRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditRequestScalarFieldEnum | AuditRequestScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationMinAggregateOutputType = {
    id: string | null
    userId: string | null
    message: string | null
    type: string | null
    read: boolean | null
    createdAt: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    message: string | null
    type: string | null
    read: boolean | null
    createdAt: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    userId: number
    message: number
    type: number
    meta: number
    read: number
    createdAt: number
    _all: number
  }


  export type NotificationMinAggregateInputType = {
    id?: true
    userId?: true
    message?: true
    type?: true
    read?: true
    createdAt?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    userId?: true
    message?: true
    type?: true
    read?: true
    createdAt?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    userId?: true
    message?: true
    type?: true
    meta?: true
    read?: true
    createdAt?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notification to aggregate.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type NotificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NotificationWhereInput
    orderBy?: NotificationOrderByWithAggregationInput | NotificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: NotificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: string
    userId: string
    message: string
    type: string
    meta: JsonValue | null
    read: boolean
    createdAt: Date
    _count: NotificationCountAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends NotificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type NotificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    message?: boolean
    type?: boolean
    meta?: boolean
    read?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    message?: boolean
    type?: boolean
    meta?: boolean
    read?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    message?: boolean
    type?: boolean
    meta?: boolean
    read?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type NotificationSelectScalar = {
    id?: boolean
    userId?: boolean
    message?: boolean
    type?: boolean
    meta?: boolean
    read?: boolean
    createdAt?: boolean
  }

  export type NotificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "message" | "type" | "meta" | "read" | "createdAt", ExtArgs["result"]["notification"]>
  export type NotificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type NotificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $NotificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Notification"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      message: string
      type: string
      meta: Prisma.JsonValue | null
      read: boolean
      createdAt: Date
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type NotificationGetPayload<S extends boolean | null | undefined | NotificationDefaultArgs> = $Result.GetResult<Prisma.$NotificationPayload, S>

  type NotificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<NotificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface NotificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Notification'], meta: { name: 'Notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {NotificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NotificationFindUniqueArgs>(args: SelectSubset<T, NotificationFindUniqueArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {NotificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NotificationFindUniqueOrThrowArgs>(args: SelectSubset<T, NotificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NotificationFindFirstArgs>(args?: SelectSubset<T, NotificationFindFirstArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NotificationFindFirstOrThrowArgs>(args?: SelectSubset<T, NotificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NotificationFindManyArgs>(args?: SelectSubset<T, NotificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {NotificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends NotificationCreateArgs>(args: SelectSubset<T, NotificationCreateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {NotificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NotificationCreateManyArgs>(args?: SelectSubset<T, NotificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {NotificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NotificationCreateManyAndReturnArgs>(args?: SelectSubset<T, NotificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {NotificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends NotificationDeleteArgs>(args: SelectSubset<T, NotificationDeleteArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {NotificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NotificationUpdateArgs>(args: SelectSubset<T, NotificationUpdateArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {NotificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NotificationDeleteManyArgs>(args?: SelectSubset<T, NotificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NotificationUpdateManyArgs>(args: SelectSubset<T, NotificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {NotificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends NotificationUpdateManyAndReturnArgs>(args: SelectSubset<T, NotificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {NotificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends NotificationUpsertArgs>(args: SelectSubset<T, NotificationUpsertArgs<ExtArgs>>): Prisma__NotificationClient<$Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends NotificationCountArgs>(
      args?: Subset<T, NotificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NotificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NotificationGroupByArgs['orderBy'] }
        : { orderBy?: NotificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NotificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Notification model
   */
  readonly fields: NotificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NotificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Notification model
   */
  interface NotificationFieldRefs {
    readonly id: FieldRef<"Notification", 'String'>
    readonly userId: FieldRef<"Notification", 'String'>
    readonly message: FieldRef<"Notification", 'String'>
    readonly type: FieldRef<"Notification", 'String'>
    readonly meta: FieldRef<"Notification", 'Json'>
    readonly read: FieldRef<"Notification", 'Boolean'>
    readonly createdAt: FieldRef<"Notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Notification findUnique
   */
  export type NotificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findUniqueOrThrow
   */
  export type NotificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification findFirst
   */
  export type NotificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findFirstOrThrow
   */
  export type NotificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notification to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification findMany
   */
  export type NotificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter, which Notifications to fetch.
     */
    where?: NotificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Notifications to fetch.
     */
    orderBy?: NotificationOrderByWithRelationInput | NotificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Notifications.
     */
    cursor?: NotificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * Notification create
   */
  export type NotificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to create a Notification.
     */
    data: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
  }

  /**
   * Notification createMany
   */
  export type NotificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Notification createManyAndReturn
   */
  export type NotificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to create many Notifications.
     */
    data: NotificationCreateManyInput | NotificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification update
   */
  export type NotificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The data needed to update a Notification.
     */
    data: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
    /**
     * Choose, which Notification to update.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification updateMany
   */
  export type NotificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
  }

  /**
   * Notification updateManyAndReturn
   */
  export type NotificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * The data used to update Notifications.
     */
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyInput>
    /**
     * Filter which Notifications to update
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Notification upsert
   */
  export type NotificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * The filter to search for the Notification to update in case it exists.
     */
    where: NotificationWhereUniqueInput
    /**
     * In case the Notification found by the `where` argument doesn't exist, create a new Notification with this data.
     */
    create: XOR<NotificationCreateInput, NotificationUncheckedCreateInput>
    /**
     * In case the Notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NotificationUpdateInput, NotificationUncheckedUpdateInput>
  }

  /**
   * Notification delete
   */
  export type NotificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
    /**
     * Filter which Notification to delete.
     */
    where: NotificationWhereUniqueInput
  }

  /**
   * Notification deleteMany
   */
  export type NotificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Notifications to delete
     */
    where?: NotificationWhereInput
    /**
     * Limit how many Notifications to delete.
     */
    limit?: number
  }

  /**
   * Notification without action
   */
  export type NotificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Notification
     */
    select?: NotificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Notification
     */
    omit?: NotificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NotificationInclude<ExtArgs> | null
  }


  /**
   * Model Asset
   */

  export type AggregateAsset = {
    _count: AssetCountAggregateOutputType | null
    _avg: AssetAvgAggregateOutputType | null
    _sum: AssetSumAggregateOutputType | null
    _min: AssetMinAggregateOutputType | null
    _max: AssetMaxAggregateOutputType | null
  }

  export type AssetAvgAggregateOutputType = {
    purchasePrice: number | null
    currentValue: number | null
    depreciableCost: number | null
    salvageValue: number | null
    usefulLifeMonths: number | null
  }

  export type AssetSumAggregateOutputType = {
    purchasePrice: number | null
    currentValue: number | null
    depreciableCost: number | null
    salvageValue: number | null
    usefulLifeMonths: number | null
  }

  export type AssetMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    serialNumber: string | null
    purchaseDate: Date | null
    purchasePrice: number | null
    currentValue: number | null
    status: string | null
    location: string | null
    department: string | null
    category: string | null
    type: string | null
    supplier: string | null
    warrantyExpiry: Date | null
    lastMaintenance: Date | null
    nextMaintenance: Date | null
    depreciableCost: number | null
    salvageValue: number | null
    usefulLifeMonths: number | null
    depreciationMethod: $Enums.DepreciationMethodEnum | null
    depreciationStartDate: Date | null
    lastAuditDate: Date | null
    nextAuditDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AssetMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    serialNumber: string | null
    purchaseDate: Date | null
    purchasePrice: number | null
    currentValue: number | null
    status: string | null
    location: string | null
    department: string | null
    category: string | null
    type: string | null
    supplier: string | null
    warrantyExpiry: Date | null
    lastMaintenance: Date | null
    nextMaintenance: Date | null
    depreciableCost: number | null
    salvageValue: number | null
    usefulLifeMonths: number | null
    depreciationMethod: $Enums.DepreciationMethodEnum | null
    depreciationStartDate: Date | null
    lastAuditDate: Date | null
    nextAuditDate: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AssetCountAggregateOutputType = {
    id: number
    name: number
    description: number
    serialNumber: number
    purchaseDate: number
    purchasePrice: number
    currentValue: number
    status: number
    location: number
    department: number
    category: number
    type: number
    supplier: number
    warrantyExpiry: number
    lastMaintenance: number
    nextMaintenance: number
    depreciableCost: number
    salvageValue: number
    usefulLifeMonths: number
    depreciationMethod: number
    depreciationStartDate: number
    lastAuditDate: number
    nextAuditDate: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AssetAvgAggregateInputType = {
    purchasePrice?: true
    currentValue?: true
    depreciableCost?: true
    salvageValue?: true
    usefulLifeMonths?: true
  }

  export type AssetSumAggregateInputType = {
    purchasePrice?: true
    currentValue?: true
    depreciableCost?: true
    salvageValue?: true
    usefulLifeMonths?: true
  }

  export type AssetMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    serialNumber?: true
    purchaseDate?: true
    purchasePrice?: true
    currentValue?: true
    status?: true
    location?: true
    department?: true
    category?: true
    type?: true
    supplier?: true
    warrantyExpiry?: true
    lastMaintenance?: true
    nextMaintenance?: true
    depreciableCost?: true
    salvageValue?: true
    usefulLifeMonths?: true
    depreciationMethod?: true
    depreciationStartDate?: true
    lastAuditDate?: true
    nextAuditDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AssetMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    serialNumber?: true
    purchaseDate?: true
    purchasePrice?: true
    currentValue?: true
    status?: true
    location?: true
    department?: true
    category?: true
    type?: true
    supplier?: true
    warrantyExpiry?: true
    lastMaintenance?: true
    nextMaintenance?: true
    depreciableCost?: true
    salvageValue?: true
    usefulLifeMonths?: true
    depreciationMethod?: true
    depreciationStartDate?: true
    lastAuditDate?: true
    nextAuditDate?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AssetCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    serialNumber?: true
    purchaseDate?: true
    purchasePrice?: true
    currentValue?: true
    status?: true
    location?: true
    department?: true
    category?: true
    type?: true
    supplier?: true
    warrantyExpiry?: true
    lastMaintenance?: true
    nextMaintenance?: true
    depreciableCost?: true
    salvageValue?: true
    usefulLifeMonths?: true
    depreciationMethod?: true
    depreciationStartDate?: true
    lastAuditDate?: true
    nextAuditDate?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AssetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Asset to aggregate.
     */
    where?: AssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetOrderByWithRelationInput | AssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Assets
    **/
    _count?: true | AssetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AssetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AssetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssetMaxAggregateInputType
  }

  export type GetAssetAggregateType<T extends AssetAggregateArgs> = {
        [P in keyof T & keyof AggregateAsset]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAsset[P]>
      : GetScalarType<T[P], AggregateAsset[P]>
  }




  export type AssetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetWhereInput
    orderBy?: AssetOrderByWithAggregationInput | AssetOrderByWithAggregationInput[]
    by: AssetScalarFieldEnum[] | AssetScalarFieldEnum
    having?: AssetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssetCountAggregateInputType | true
    _avg?: AssetAvgAggregateInputType
    _sum?: AssetSumAggregateInputType
    _min?: AssetMinAggregateInputType
    _max?: AssetMaxAggregateInputType
  }

  export type AssetGroupByOutputType = {
    id: string
    name: string
    description: string | null
    serialNumber: string
    purchaseDate: Date
    purchasePrice: number
    currentValue: number
    status: string
    location: string | null
    department: string | null
    category: string | null
    type: string | null
    supplier: string | null
    warrantyExpiry: Date | null
    lastMaintenance: Date | null
    nextMaintenance: Date | null
    depreciableCost: number | null
    salvageValue: number | null
    usefulLifeMonths: number | null
    depreciationMethod: $Enums.DepreciationMethodEnum | null
    depreciationStartDate: Date | null
    lastAuditDate: Date | null
    nextAuditDate: Date | null
    createdAt: Date
    updatedAt: Date
    _count: AssetCountAggregateOutputType | null
    _avg: AssetAvgAggregateOutputType | null
    _sum: AssetSumAggregateOutputType | null
    _min: AssetMinAggregateOutputType | null
    _max: AssetMaxAggregateOutputType | null
  }

  type GetAssetGroupByPayload<T extends AssetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssetGroupByOutputType[P]>
            : GetScalarType<T[P], AssetGroupByOutputType[P]>
        }
      >
    >


  export type AssetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    serialNumber?: boolean
    purchaseDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    status?: boolean
    location?: boolean
    department?: boolean
    category?: boolean
    type?: boolean
    supplier?: boolean
    warrantyExpiry?: boolean
    lastMaintenance?: boolean
    nextMaintenance?: boolean
    depreciableCost?: boolean
    salvageValue?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    depreciationStartDate?: boolean
    lastAuditDate?: boolean
    nextAuditDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assetDepreciations?: boolean | Asset$assetDepreciationsArgs<ExtArgs>
    history?: boolean | Asset$historyArgs<ExtArgs>
    depreciations?: boolean | Asset$depreciationsArgs<ExtArgs>
    disposalRequests?: boolean | Asset$disposalRequestsArgs<ExtArgs>
    documents?: boolean | Asset$documentsArgs<ExtArgs>
    maintenanceRequests?: boolean | Asset$maintenanceRequestsArgs<ExtArgs>
    maintenanceSchedules?: boolean | Asset$maintenanceSchedulesArgs<ExtArgs>
    transferRequests?: boolean | Asset$transferRequestsArgs<ExtArgs>
    linkedTo?: boolean | Asset$linkedToArgs<ExtArgs>
    linkedFrom?: boolean | Asset$linkedFromArgs<ExtArgs>
    capitalImprovements?: boolean | Asset$capitalImprovementsArgs<ExtArgs>
    audits?: boolean | Asset$auditsArgs<ExtArgs>
    auditAssignments?: boolean | Asset$auditAssignmentsArgs<ExtArgs>
    auditRequests?: boolean | Asset$auditRequestsArgs<ExtArgs>
    _count?: boolean | AssetCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["asset"]>

  export type AssetSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    serialNumber?: boolean
    purchaseDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    status?: boolean
    location?: boolean
    department?: boolean
    category?: boolean
    type?: boolean
    supplier?: boolean
    warrantyExpiry?: boolean
    lastMaintenance?: boolean
    nextMaintenance?: boolean
    depreciableCost?: boolean
    salvageValue?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    depreciationStartDate?: boolean
    lastAuditDate?: boolean
    nextAuditDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["asset"]>

  export type AssetSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    serialNumber?: boolean
    purchaseDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    status?: boolean
    location?: boolean
    department?: boolean
    category?: boolean
    type?: boolean
    supplier?: boolean
    warrantyExpiry?: boolean
    lastMaintenance?: boolean
    nextMaintenance?: boolean
    depreciableCost?: boolean
    salvageValue?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    depreciationStartDate?: boolean
    lastAuditDate?: boolean
    nextAuditDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["asset"]>

  export type AssetSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    serialNumber?: boolean
    purchaseDate?: boolean
    purchasePrice?: boolean
    currentValue?: boolean
    status?: boolean
    location?: boolean
    department?: boolean
    category?: boolean
    type?: boolean
    supplier?: boolean
    warrantyExpiry?: boolean
    lastMaintenance?: boolean
    nextMaintenance?: boolean
    depreciableCost?: boolean
    salvageValue?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    depreciationStartDate?: boolean
    lastAuditDate?: boolean
    nextAuditDate?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AssetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "serialNumber" | "purchaseDate" | "purchasePrice" | "currentValue" | "status" | "location" | "department" | "category" | "type" | "supplier" | "warrantyExpiry" | "lastMaintenance" | "nextMaintenance" | "depreciableCost" | "salvageValue" | "usefulLifeMonths" | "depreciationMethod" | "depreciationStartDate" | "lastAuditDate" | "nextAuditDate" | "createdAt" | "updatedAt", ExtArgs["result"]["asset"]>
  export type AssetInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    assetDepreciations?: boolean | Asset$assetDepreciationsArgs<ExtArgs>
    history?: boolean | Asset$historyArgs<ExtArgs>
    depreciations?: boolean | Asset$depreciationsArgs<ExtArgs>
    disposalRequests?: boolean | Asset$disposalRequestsArgs<ExtArgs>
    documents?: boolean | Asset$documentsArgs<ExtArgs>
    maintenanceRequests?: boolean | Asset$maintenanceRequestsArgs<ExtArgs>
    maintenanceSchedules?: boolean | Asset$maintenanceSchedulesArgs<ExtArgs>
    transferRequests?: boolean | Asset$transferRequestsArgs<ExtArgs>
    linkedTo?: boolean | Asset$linkedToArgs<ExtArgs>
    linkedFrom?: boolean | Asset$linkedFromArgs<ExtArgs>
    capitalImprovements?: boolean | Asset$capitalImprovementsArgs<ExtArgs>
    audits?: boolean | Asset$auditsArgs<ExtArgs>
    auditAssignments?: boolean | Asset$auditAssignmentsArgs<ExtArgs>
    auditRequests?: boolean | Asset$auditRequestsArgs<ExtArgs>
    _count?: boolean | AssetCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AssetIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AssetIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AssetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Asset"
    objects: {
      assetDepreciations: Prisma.$AssetDepreciationPayload<ExtArgs>[]
      history: Prisma.$AssetHistoryPayload<ExtArgs>[]
      depreciations: Prisma.$DepreciationPayload<ExtArgs>[]
      disposalRequests: Prisma.$DisposalPayload<ExtArgs>[]
      documents: Prisma.$DocumentPayload<ExtArgs>[]
      maintenanceRequests: Prisma.$MaintenancePayload<ExtArgs>[]
      maintenanceSchedules: Prisma.$MaintenanceSchedulePayload<ExtArgs>[]
      transferRequests: Prisma.$TransferPayload<ExtArgs>[]
      linkedTo: Prisma.$LinkedAssetPayload<ExtArgs>[]
      linkedFrom: Prisma.$LinkedAssetPayload<ExtArgs>[]
      capitalImprovements: Prisma.$CapitalImprovementPayload<ExtArgs>[]
      audits: Prisma.$AssetAuditPayload<ExtArgs>[]
      auditAssignments: Prisma.$AuditAssignmentPayload<ExtArgs>[]
      auditRequests: Prisma.$AuditRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      serialNumber: string
      purchaseDate: Date
      purchasePrice: number
      currentValue: number
      status: string
      location: string | null
      department: string | null
      category: string | null
      type: string | null
      supplier: string | null
      warrantyExpiry: Date | null
      lastMaintenance: Date | null
      nextMaintenance: Date | null
      depreciableCost: number | null
      salvageValue: number | null
      usefulLifeMonths: number | null
      depreciationMethod: $Enums.DepreciationMethodEnum | null
      depreciationStartDate: Date | null
      lastAuditDate: Date | null
      nextAuditDate: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["asset"]>
    composites: {}
  }

  type AssetGetPayload<S extends boolean | null | undefined | AssetDefaultArgs> = $Result.GetResult<Prisma.$AssetPayload, S>

  type AssetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssetCountAggregateInputType | true
    }

  export interface AssetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Asset'], meta: { name: 'Asset' } }
    /**
     * Find zero or one Asset that matches the filter.
     * @param {AssetFindUniqueArgs} args - Arguments to find a Asset
     * @example
     * // Get one Asset
     * const asset = await prisma.asset.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssetFindUniqueArgs>(args: SelectSubset<T, AssetFindUniqueArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Asset that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssetFindUniqueOrThrowArgs} args - Arguments to find a Asset
     * @example
     * // Get one Asset
     * const asset = await prisma.asset.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssetFindUniqueOrThrowArgs>(args: SelectSubset<T, AssetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asset that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetFindFirstArgs} args - Arguments to find a Asset
     * @example
     * // Get one Asset
     * const asset = await prisma.asset.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssetFindFirstArgs>(args?: SelectSubset<T, AssetFindFirstArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Asset that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetFindFirstOrThrowArgs} args - Arguments to find a Asset
     * @example
     * // Get one Asset
     * const asset = await prisma.asset.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssetFindFirstOrThrowArgs>(args?: SelectSubset<T, AssetFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Assets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Assets
     * const assets = await prisma.asset.findMany()
     * 
     * // Get first 10 Assets
     * const assets = await prisma.asset.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assetWithIdOnly = await prisma.asset.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssetFindManyArgs>(args?: SelectSubset<T, AssetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Asset.
     * @param {AssetCreateArgs} args - Arguments to create a Asset.
     * @example
     * // Create one Asset
     * const Asset = await prisma.asset.create({
     *   data: {
     *     // ... data to create a Asset
     *   }
     * })
     * 
     */
    create<T extends AssetCreateArgs>(args: SelectSubset<T, AssetCreateArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Assets.
     * @param {AssetCreateManyArgs} args - Arguments to create many Assets.
     * @example
     * // Create many Assets
     * const asset = await prisma.asset.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssetCreateManyArgs>(args?: SelectSubset<T, AssetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Assets and returns the data saved in the database.
     * @param {AssetCreateManyAndReturnArgs} args - Arguments to create many Assets.
     * @example
     * // Create many Assets
     * const asset = await prisma.asset.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Assets and only return the `id`
     * const assetWithIdOnly = await prisma.asset.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssetCreateManyAndReturnArgs>(args?: SelectSubset<T, AssetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Asset.
     * @param {AssetDeleteArgs} args - Arguments to delete one Asset.
     * @example
     * // Delete one Asset
     * const Asset = await prisma.asset.delete({
     *   where: {
     *     // ... filter to delete one Asset
     *   }
     * })
     * 
     */
    delete<T extends AssetDeleteArgs>(args: SelectSubset<T, AssetDeleteArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Asset.
     * @param {AssetUpdateArgs} args - Arguments to update one Asset.
     * @example
     * // Update one Asset
     * const asset = await prisma.asset.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssetUpdateArgs>(args: SelectSubset<T, AssetUpdateArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Assets.
     * @param {AssetDeleteManyArgs} args - Arguments to filter Assets to delete.
     * @example
     * // Delete a few Assets
     * const { count } = await prisma.asset.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssetDeleteManyArgs>(args?: SelectSubset<T, AssetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Assets
     * const asset = await prisma.asset.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssetUpdateManyArgs>(args: SelectSubset<T, AssetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Assets and returns the data updated in the database.
     * @param {AssetUpdateManyAndReturnArgs} args - Arguments to update many Assets.
     * @example
     * // Update many Assets
     * const asset = await prisma.asset.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Assets and only return the `id`
     * const assetWithIdOnly = await prisma.asset.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssetUpdateManyAndReturnArgs>(args: SelectSubset<T, AssetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Asset.
     * @param {AssetUpsertArgs} args - Arguments to update or create a Asset.
     * @example
     * // Update or create a Asset
     * const asset = await prisma.asset.upsert({
     *   create: {
     *     // ... data to create a Asset
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Asset we want to update
     *   }
     * })
     */
    upsert<T extends AssetUpsertArgs>(args: SelectSubset<T, AssetUpsertArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Assets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetCountArgs} args - Arguments to filter Assets to count.
     * @example
     * // Count the number of Assets
     * const count = await prisma.asset.count({
     *   where: {
     *     // ... the filter for the Assets we want to count
     *   }
     * })
    **/
    count<T extends AssetCountArgs>(
      args?: Subset<T, AssetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Asset.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssetAggregateArgs>(args: Subset<T, AssetAggregateArgs>): Prisma.PrismaPromise<GetAssetAggregateType<T>>

    /**
     * Group by Asset.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssetGroupByArgs['orderBy'] }
        : { orderBy?: AssetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Asset model
   */
  readonly fields: AssetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Asset.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    assetDepreciations<T extends Asset$assetDepreciationsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$assetDepreciationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    history<T extends Asset$historyArgs<ExtArgs> = {}>(args?: Subset<T, Asset$historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    depreciations<T extends Asset$depreciationsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$depreciationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    disposalRequests<T extends Asset$disposalRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$disposalRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends Asset$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    maintenanceRequests<T extends Asset$maintenanceRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$maintenanceRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    maintenanceSchedules<T extends Asset$maintenanceSchedulesArgs<ExtArgs> = {}>(args?: Subset<T, Asset$maintenanceSchedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    transferRequests<T extends Asset$transferRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$transferRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    linkedTo<T extends Asset$linkedToArgs<ExtArgs> = {}>(args?: Subset<T, Asset$linkedToArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    linkedFrom<T extends Asset$linkedFromArgs<ExtArgs> = {}>(args?: Subset<T, Asset$linkedFromArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    capitalImprovements<T extends Asset$capitalImprovementsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$capitalImprovementsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    audits<T extends Asset$auditsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$auditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditAssignments<T extends Asset$auditAssignmentsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$auditAssignmentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auditRequests<T extends Asset$auditRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Asset$auditRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Asset model
   */
  interface AssetFieldRefs {
    readonly id: FieldRef<"Asset", 'String'>
    readonly name: FieldRef<"Asset", 'String'>
    readonly description: FieldRef<"Asset", 'String'>
    readonly serialNumber: FieldRef<"Asset", 'String'>
    readonly purchaseDate: FieldRef<"Asset", 'DateTime'>
    readonly purchasePrice: FieldRef<"Asset", 'Float'>
    readonly currentValue: FieldRef<"Asset", 'Float'>
    readonly status: FieldRef<"Asset", 'String'>
    readonly location: FieldRef<"Asset", 'String'>
    readonly department: FieldRef<"Asset", 'String'>
    readonly category: FieldRef<"Asset", 'String'>
    readonly type: FieldRef<"Asset", 'String'>
    readonly supplier: FieldRef<"Asset", 'String'>
    readonly warrantyExpiry: FieldRef<"Asset", 'DateTime'>
    readonly lastMaintenance: FieldRef<"Asset", 'DateTime'>
    readonly nextMaintenance: FieldRef<"Asset", 'DateTime'>
    readonly depreciableCost: FieldRef<"Asset", 'Float'>
    readonly salvageValue: FieldRef<"Asset", 'Float'>
    readonly usefulLifeMonths: FieldRef<"Asset", 'Int'>
    readonly depreciationMethod: FieldRef<"Asset", 'DepreciationMethodEnum'>
    readonly depreciationStartDate: FieldRef<"Asset", 'DateTime'>
    readonly lastAuditDate: FieldRef<"Asset", 'DateTime'>
    readonly nextAuditDate: FieldRef<"Asset", 'DateTime'>
    readonly createdAt: FieldRef<"Asset", 'DateTime'>
    readonly updatedAt: FieldRef<"Asset", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Asset findUnique
   */
  export type AssetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * Filter, which Asset to fetch.
     */
    where: AssetWhereUniqueInput
  }

  /**
   * Asset findUniqueOrThrow
   */
  export type AssetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * Filter, which Asset to fetch.
     */
    where: AssetWhereUniqueInput
  }

  /**
   * Asset findFirst
   */
  export type AssetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * Filter, which Asset to fetch.
     */
    where?: AssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetOrderByWithRelationInput | AssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Assets.
     */
    cursor?: AssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Assets.
     */
    distinct?: AssetScalarFieldEnum | AssetScalarFieldEnum[]
  }

  /**
   * Asset findFirstOrThrow
   */
  export type AssetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * Filter, which Asset to fetch.
     */
    where?: AssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetOrderByWithRelationInput | AssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Assets.
     */
    cursor?: AssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Assets.
     */
    distinct?: AssetScalarFieldEnum | AssetScalarFieldEnum[]
  }

  /**
   * Asset findMany
   */
  export type AssetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * Filter, which Assets to fetch.
     */
    where?: AssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Assets to fetch.
     */
    orderBy?: AssetOrderByWithRelationInput | AssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Assets.
     */
    cursor?: AssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Assets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Assets.
     */
    skip?: number
    distinct?: AssetScalarFieldEnum | AssetScalarFieldEnum[]
  }

  /**
   * Asset create
   */
  export type AssetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * The data needed to create a Asset.
     */
    data: XOR<AssetCreateInput, AssetUncheckedCreateInput>
  }

  /**
   * Asset createMany
   */
  export type AssetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Assets.
     */
    data: AssetCreateManyInput | AssetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Asset createManyAndReturn
   */
  export type AssetCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * The data used to create many Assets.
     */
    data: AssetCreateManyInput | AssetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Asset update
   */
  export type AssetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * The data needed to update a Asset.
     */
    data: XOR<AssetUpdateInput, AssetUncheckedUpdateInput>
    /**
     * Choose, which Asset to update.
     */
    where: AssetWhereUniqueInput
  }

  /**
   * Asset updateMany
   */
  export type AssetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Assets.
     */
    data: XOR<AssetUpdateManyMutationInput, AssetUncheckedUpdateManyInput>
    /**
     * Filter which Assets to update
     */
    where?: AssetWhereInput
    /**
     * Limit how many Assets to update.
     */
    limit?: number
  }

  /**
   * Asset updateManyAndReturn
   */
  export type AssetUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * The data used to update Assets.
     */
    data: XOR<AssetUpdateManyMutationInput, AssetUncheckedUpdateManyInput>
    /**
     * Filter which Assets to update
     */
    where?: AssetWhereInput
    /**
     * Limit how many Assets to update.
     */
    limit?: number
  }

  /**
   * Asset upsert
   */
  export type AssetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * The filter to search for the Asset to update in case it exists.
     */
    where: AssetWhereUniqueInput
    /**
     * In case the Asset found by the `where` argument doesn't exist, create a new Asset with this data.
     */
    create: XOR<AssetCreateInput, AssetUncheckedCreateInput>
    /**
     * In case the Asset was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssetUpdateInput, AssetUncheckedUpdateInput>
  }

  /**
   * Asset delete
   */
  export type AssetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
    /**
     * Filter which Asset to delete.
     */
    where: AssetWhereUniqueInput
  }

  /**
   * Asset deleteMany
   */
  export type AssetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Assets to delete
     */
    where?: AssetWhereInput
    /**
     * Limit how many Assets to delete.
     */
    limit?: number
  }

  /**
   * Asset.assetDepreciations
   */
  export type Asset$assetDepreciationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    where?: AssetDepreciationWhereInput
    orderBy?: AssetDepreciationOrderByWithRelationInput | AssetDepreciationOrderByWithRelationInput[]
    cursor?: AssetDepreciationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetDepreciationScalarFieldEnum | AssetDepreciationScalarFieldEnum[]
  }

  /**
   * Asset.history
   */
  export type Asset$historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    where?: AssetHistoryWhereInput
    orderBy?: AssetHistoryOrderByWithRelationInput | AssetHistoryOrderByWithRelationInput[]
    cursor?: AssetHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetHistoryScalarFieldEnum | AssetHistoryScalarFieldEnum[]
  }

  /**
   * Asset.depreciations
   */
  export type Asset$depreciationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    where?: DepreciationWhereInput
    orderBy?: DepreciationOrderByWithRelationInput | DepreciationOrderByWithRelationInput[]
    cursor?: DepreciationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DepreciationScalarFieldEnum | DepreciationScalarFieldEnum[]
  }

  /**
   * Asset.disposalRequests
   */
  export type Asset$disposalRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    where?: DisposalWhereInput
    orderBy?: DisposalOrderByWithRelationInput | DisposalOrderByWithRelationInput[]
    cursor?: DisposalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DisposalScalarFieldEnum | DisposalScalarFieldEnum[]
  }

  /**
   * Asset.documents
   */
  export type Asset$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    cursor?: DocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Asset.maintenanceRequests
   */
  export type Asset$maintenanceRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    cursor?: MaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * Asset.maintenanceSchedules
   */
  export type Asset$maintenanceSchedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    where?: MaintenanceScheduleWhereInput
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    cursor?: MaintenanceScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * Asset.transferRequests
   */
  export type Asset$transferRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    where?: TransferWhereInput
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    cursor?: TransferWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransferScalarFieldEnum | TransferScalarFieldEnum[]
  }

  /**
   * Asset.linkedTo
   */
  export type Asset$linkedToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    where?: LinkedAssetWhereInput
    orderBy?: LinkedAssetOrderByWithRelationInput | LinkedAssetOrderByWithRelationInput[]
    cursor?: LinkedAssetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LinkedAssetScalarFieldEnum | LinkedAssetScalarFieldEnum[]
  }

  /**
   * Asset.linkedFrom
   */
  export type Asset$linkedFromArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    where?: LinkedAssetWhereInput
    orderBy?: LinkedAssetOrderByWithRelationInput | LinkedAssetOrderByWithRelationInput[]
    cursor?: LinkedAssetWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LinkedAssetScalarFieldEnum | LinkedAssetScalarFieldEnum[]
  }

  /**
   * Asset.capitalImprovements
   */
  export type Asset$capitalImprovementsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    where?: CapitalImprovementWhereInput
    orderBy?: CapitalImprovementOrderByWithRelationInput | CapitalImprovementOrderByWithRelationInput[]
    cursor?: CapitalImprovementWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CapitalImprovementScalarFieldEnum | CapitalImprovementScalarFieldEnum[]
  }

  /**
   * Asset.audits
   */
  export type Asset$auditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    where?: AssetAuditWhereInput
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    cursor?: AssetAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * Asset.auditAssignments
   */
  export type Asset$auditAssignmentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    where?: AuditAssignmentWhereInput
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    cursor?: AuditAssignmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditAssignmentScalarFieldEnum | AuditAssignmentScalarFieldEnum[]
  }

  /**
   * Asset.auditRequests
   */
  export type Asset$auditRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    where?: AuditRequestWhereInput
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    cursor?: AuditRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AuditRequestScalarFieldEnum | AuditRequestScalarFieldEnum[]
  }

  /**
   * Asset without action
   */
  export type AssetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Asset
     */
    select?: AssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Asset
     */
    omit?: AssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetInclude<ExtArgs> | null
  }


  /**
   * Model Transfer
   */

  export type AggregateTransfer = {
    _count: TransferCountAggregateOutputType | null
    _min: TransferMinAggregateOutputType | null
    _max: TransferMaxAggregateOutputType | null
  }

  export type TransferMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    fromDepartment: string | null
    requesterId: string | null
    toDepartment: string | null
    status: $Enums.TransferStatus | null
    managerReason: string | null
    managerId: string | null
  }

  export type TransferMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    fromDepartment: string | null
    requesterId: string | null
    toDepartment: string | null
    status: $Enums.TransferStatus | null
    managerReason: string | null
    managerId: string | null
  }

  export type TransferCountAggregateOutputType = {
    id: number
    assetId: number
    reason: number
    createdAt: number
    updatedAt: number
    fromDepartment: number
    requesterId: number
    toDepartment: number
    status: number
    managerReason: number
    managerId: number
    _all: number
  }


  export type TransferMinAggregateInputType = {
    id?: true
    assetId?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    fromDepartment?: true
    requesterId?: true
    toDepartment?: true
    status?: true
    managerReason?: true
    managerId?: true
  }

  export type TransferMaxAggregateInputType = {
    id?: true
    assetId?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    fromDepartment?: true
    requesterId?: true
    toDepartment?: true
    status?: true
    managerReason?: true
    managerId?: true
  }

  export type TransferCountAggregateInputType = {
    id?: true
    assetId?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    fromDepartment?: true
    requesterId?: true
    toDepartment?: true
    status?: true
    managerReason?: true
    managerId?: true
    _all?: true
  }

  export type TransferAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transfer to aggregate.
     */
    where?: TransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transfers to fetch.
     */
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Transfers
    **/
    _count?: true | TransferCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransferMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransferMaxAggregateInputType
  }

  export type GetTransferAggregateType<T extends TransferAggregateArgs> = {
        [P in keyof T & keyof AggregateTransfer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransfer[P]>
      : GetScalarType<T[P], AggregateTransfer[P]>
  }




  export type TransferGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TransferWhereInput
    orderBy?: TransferOrderByWithAggregationInput | TransferOrderByWithAggregationInput[]
    by: TransferScalarFieldEnum[] | TransferScalarFieldEnum
    having?: TransferScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransferCountAggregateInputType | true
    _min?: TransferMinAggregateInputType
    _max?: TransferMaxAggregateInputType
  }

  export type TransferGroupByOutputType = {
    id: string
    assetId: string
    reason: string
    createdAt: Date
    updatedAt: Date
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status: $Enums.TransferStatus
    managerReason: string | null
    managerId: string | null
    _count: TransferCountAggregateOutputType | null
    _min: TransferMinAggregateOutputType | null
    _max: TransferMaxAggregateOutputType | null
  }

  type GetTransferGroupByPayload<T extends TransferGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransferGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransferGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransferGroupByOutputType[P]>
            : GetScalarType<T[P], TransferGroupByOutputType[P]>
        }
      >
    >


  export type TransferSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromDepartment?: boolean
    requesterId?: boolean
    toDepartment?: boolean
    status?: boolean
    managerReason?: boolean
    managerId?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Transfer$managerArgs<ExtArgs>
  }, ExtArgs["result"]["transfer"]>

  export type TransferSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromDepartment?: boolean
    requesterId?: boolean
    toDepartment?: boolean
    status?: boolean
    managerReason?: boolean
    managerId?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Transfer$managerArgs<ExtArgs>
  }, ExtArgs["result"]["transfer"]>

  export type TransferSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromDepartment?: boolean
    requesterId?: boolean
    toDepartment?: boolean
    status?: boolean
    managerReason?: boolean
    managerId?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Transfer$managerArgs<ExtArgs>
  }, ExtArgs["result"]["transfer"]>

  export type TransferSelectScalar = {
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromDepartment?: boolean
    requesterId?: boolean
    toDepartment?: boolean
    status?: boolean
    managerReason?: boolean
    managerId?: boolean
  }

  export type TransferOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "reason" | "createdAt" | "updatedAt" | "fromDepartment" | "requesterId" | "toDepartment" | "status" | "managerReason" | "managerId", ExtArgs["result"]["transfer"]>
  export type TransferInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Transfer$managerArgs<ExtArgs>
  }
  export type TransferIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Transfer$managerArgs<ExtArgs>
  }
  export type TransferIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Transfer$managerArgs<ExtArgs>
  }

  export type $TransferPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Transfer"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      requester: Prisma.$UserPayload<ExtArgs>
      manager: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      reason: string
      createdAt: Date
      updatedAt: Date
      fromDepartment: string
      requesterId: string
      toDepartment: string
      status: $Enums.TransferStatus
      managerReason: string | null
      managerId: string | null
    }, ExtArgs["result"]["transfer"]>
    composites: {}
  }

  type TransferGetPayload<S extends boolean | null | undefined | TransferDefaultArgs> = $Result.GetResult<Prisma.$TransferPayload, S>

  type TransferCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TransferFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TransferCountAggregateInputType | true
    }

  export interface TransferDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Transfer'], meta: { name: 'Transfer' } }
    /**
     * Find zero or one Transfer that matches the filter.
     * @param {TransferFindUniqueArgs} args - Arguments to find a Transfer
     * @example
     * // Get one Transfer
     * const transfer = await prisma.transfer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TransferFindUniqueArgs>(args: SelectSubset<T, TransferFindUniqueArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Transfer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TransferFindUniqueOrThrowArgs} args - Arguments to find a Transfer
     * @example
     * // Get one Transfer
     * const transfer = await prisma.transfer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TransferFindUniqueOrThrowArgs>(args: SelectSubset<T, TransferFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transfer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferFindFirstArgs} args - Arguments to find a Transfer
     * @example
     * // Get one Transfer
     * const transfer = await prisma.transfer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TransferFindFirstArgs>(args?: SelectSubset<T, TransferFindFirstArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Transfer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferFindFirstOrThrowArgs} args - Arguments to find a Transfer
     * @example
     * // Get one Transfer
     * const transfer = await prisma.transfer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TransferFindFirstOrThrowArgs>(args?: SelectSubset<T, TransferFindFirstOrThrowArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Transfers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transfers
     * const transfers = await prisma.transfer.findMany()
     * 
     * // Get first 10 Transfers
     * const transfers = await prisma.transfer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transferWithIdOnly = await prisma.transfer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TransferFindManyArgs>(args?: SelectSubset<T, TransferFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Transfer.
     * @param {TransferCreateArgs} args - Arguments to create a Transfer.
     * @example
     * // Create one Transfer
     * const Transfer = await prisma.transfer.create({
     *   data: {
     *     // ... data to create a Transfer
     *   }
     * })
     * 
     */
    create<T extends TransferCreateArgs>(args: SelectSubset<T, TransferCreateArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Transfers.
     * @param {TransferCreateManyArgs} args - Arguments to create many Transfers.
     * @example
     * // Create many Transfers
     * const transfer = await prisma.transfer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TransferCreateManyArgs>(args?: SelectSubset<T, TransferCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Transfers and returns the data saved in the database.
     * @param {TransferCreateManyAndReturnArgs} args - Arguments to create many Transfers.
     * @example
     * // Create many Transfers
     * const transfer = await prisma.transfer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Transfers and only return the `id`
     * const transferWithIdOnly = await prisma.transfer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends TransferCreateManyAndReturnArgs>(args?: SelectSubset<T, TransferCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Transfer.
     * @param {TransferDeleteArgs} args - Arguments to delete one Transfer.
     * @example
     * // Delete one Transfer
     * const Transfer = await prisma.transfer.delete({
     *   where: {
     *     // ... filter to delete one Transfer
     *   }
     * })
     * 
     */
    delete<T extends TransferDeleteArgs>(args: SelectSubset<T, TransferDeleteArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Transfer.
     * @param {TransferUpdateArgs} args - Arguments to update one Transfer.
     * @example
     * // Update one Transfer
     * const transfer = await prisma.transfer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TransferUpdateArgs>(args: SelectSubset<T, TransferUpdateArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Transfers.
     * @param {TransferDeleteManyArgs} args - Arguments to filter Transfers to delete.
     * @example
     * // Delete a few Transfers
     * const { count } = await prisma.transfer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TransferDeleteManyArgs>(args?: SelectSubset<T, TransferDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transfers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transfers
     * const transfer = await prisma.transfer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TransferUpdateManyArgs>(args: SelectSubset<T, TransferUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transfers and returns the data updated in the database.
     * @param {TransferUpdateManyAndReturnArgs} args - Arguments to update many Transfers.
     * @example
     * // Update many Transfers
     * const transfer = await prisma.transfer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Transfers and only return the `id`
     * const transferWithIdOnly = await prisma.transfer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends TransferUpdateManyAndReturnArgs>(args: SelectSubset<T, TransferUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Transfer.
     * @param {TransferUpsertArgs} args - Arguments to update or create a Transfer.
     * @example
     * // Update or create a Transfer
     * const transfer = await prisma.transfer.upsert({
     *   create: {
     *     // ... data to create a Transfer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transfer we want to update
     *   }
     * })
     */
    upsert<T extends TransferUpsertArgs>(args: SelectSubset<T, TransferUpsertArgs<ExtArgs>>): Prisma__TransferClient<$Result.GetResult<Prisma.$TransferPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Transfers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferCountArgs} args - Arguments to filter Transfers to count.
     * @example
     * // Count the number of Transfers
     * const count = await prisma.transfer.count({
     *   where: {
     *     // ... the filter for the Transfers we want to count
     *   }
     * })
    **/
    count<T extends TransferCountArgs>(
      args?: Subset<T, TransferCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransferCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transfer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransferAggregateArgs>(args: Subset<T, TransferAggregateArgs>): Prisma.PrismaPromise<GetTransferAggregateType<T>>

    /**
     * Group by Transfer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransferGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TransferGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TransferGroupByArgs['orderBy'] }
        : { orderBy?: TransferGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TransferGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransferGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Transfer model
   */
  readonly fields: TransferFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Transfer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TransferClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manager<T extends Transfer$managerArgs<ExtArgs> = {}>(args?: Subset<T, Transfer$managerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Transfer model
   */
  interface TransferFieldRefs {
    readonly id: FieldRef<"Transfer", 'String'>
    readonly assetId: FieldRef<"Transfer", 'String'>
    readonly reason: FieldRef<"Transfer", 'String'>
    readonly createdAt: FieldRef<"Transfer", 'DateTime'>
    readonly updatedAt: FieldRef<"Transfer", 'DateTime'>
    readonly fromDepartment: FieldRef<"Transfer", 'String'>
    readonly requesterId: FieldRef<"Transfer", 'String'>
    readonly toDepartment: FieldRef<"Transfer", 'String'>
    readonly status: FieldRef<"Transfer", 'TransferStatus'>
    readonly managerReason: FieldRef<"Transfer", 'String'>
    readonly managerId: FieldRef<"Transfer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Transfer findUnique
   */
  export type TransferFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * Filter, which Transfer to fetch.
     */
    where: TransferWhereUniqueInput
  }

  /**
   * Transfer findUniqueOrThrow
   */
  export type TransferFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * Filter, which Transfer to fetch.
     */
    where: TransferWhereUniqueInput
  }

  /**
   * Transfer findFirst
   */
  export type TransferFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * Filter, which Transfer to fetch.
     */
    where?: TransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transfers to fetch.
     */
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transfers.
     */
    cursor?: TransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transfers.
     */
    distinct?: TransferScalarFieldEnum | TransferScalarFieldEnum[]
  }

  /**
   * Transfer findFirstOrThrow
   */
  export type TransferFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * Filter, which Transfer to fetch.
     */
    where?: TransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transfers to fetch.
     */
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Transfers.
     */
    cursor?: TransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transfers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Transfers.
     */
    distinct?: TransferScalarFieldEnum | TransferScalarFieldEnum[]
  }

  /**
   * Transfer findMany
   */
  export type TransferFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * Filter, which Transfers to fetch.
     */
    where?: TransferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Transfers to fetch.
     */
    orderBy?: TransferOrderByWithRelationInput | TransferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Transfers.
     */
    cursor?: TransferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Transfers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Transfers.
     */
    skip?: number
    distinct?: TransferScalarFieldEnum | TransferScalarFieldEnum[]
  }

  /**
   * Transfer create
   */
  export type TransferCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * The data needed to create a Transfer.
     */
    data: XOR<TransferCreateInput, TransferUncheckedCreateInput>
  }

  /**
   * Transfer createMany
   */
  export type TransferCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Transfers.
     */
    data: TransferCreateManyInput | TransferCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Transfer createManyAndReturn
   */
  export type TransferCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * The data used to create many Transfers.
     */
    data: TransferCreateManyInput | TransferCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transfer update
   */
  export type TransferUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * The data needed to update a Transfer.
     */
    data: XOR<TransferUpdateInput, TransferUncheckedUpdateInput>
    /**
     * Choose, which Transfer to update.
     */
    where: TransferWhereUniqueInput
  }

  /**
   * Transfer updateMany
   */
  export type TransferUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Transfers.
     */
    data: XOR<TransferUpdateManyMutationInput, TransferUncheckedUpdateManyInput>
    /**
     * Filter which Transfers to update
     */
    where?: TransferWhereInput
    /**
     * Limit how many Transfers to update.
     */
    limit?: number
  }

  /**
   * Transfer updateManyAndReturn
   */
  export type TransferUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * The data used to update Transfers.
     */
    data: XOR<TransferUpdateManyMutationInput, TransferUncheckedUpdateManyInput>
    /**
     * Filter which Transfers to update
     */
    where?: TransferWhereInput
    /**
     * Limit how many Transfers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Transfer upsert
   */
  export type TransferUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * The filter to search for the Transfer to update in case it exists.
     */
    where: TransferWhereUniqueInput
    /**
     * In case the Transfer found by the `where` argument doesn't exist, create a new Transfer with this data.
     */
    create: XOR<TransferCreateInput, TransferUncheckedCreateInput>
    /**
     * In case the Transfer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TransferUpdateInput, TransferUncheckedUpdateInput>
  }

  /**
   * Transfer delete
   */
  export type TransferDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
    /**
     * Filter which Transfer to delete.
     */
    where: TransferWhereUniqueInput
  }

  /**
   * Transfer deleteMany
   */
  export type TransferDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Transfers to delete
     */
    where?: TransferWhereInput
    /**
     * Limit how many Transfers to delete.
     */
    limit?: number
  }

  /**
   * Transfer.manager
   */
  export type Transfer$managerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Transfer without action
   */
  export type TransferDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Transfer
     */
    select?: TransferSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Transfer
     */
    omit?: TransferOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TransferInclude<ExtArgs> | null
  }


  /**
   * Model Maintenance
   */

  export type AggregateMaintenance = {
    _count: MaintenanceCountAggregateOutputType | null
    _avg: MaintenanceAvgAggregateOutputType | null
    _sum: MaintenanceSumAggregateOutputType | null
    _min: MaintenanceMinAggregateOutputType | null
    _max: MaintenanceMaxAggregateOutputType | null
  }

  export type MaintenanceAvgAggregateOutputType = {
    cost: number | null
    estimatedHours: number | null
    actualHours: number | null
    laborHours: number | null
    partsCost: number | null
    laborCost: number | null
    totalCost: number | null
  }

  export type MaintenanceSumAggregateOutputType = {
    cost: number | null
    estimatedHours: number | null
    actualHours: number | null
    laborHours: number | null
    partsCost: number | null
    laborCost: number | null
    totalCost: number | null
  }

  export type MaintenanceMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    description: string | null
    cost: number | null
    createdAt: Date | null
    updatedAt: Date | null
    completedAt: Date | null
    scheduledDate: Date | null
    priority: $Enums.MaintenancePriority | null
    requesterId: string | null
    managerId: string | null
    status: $Enums.MaintenanceStatus | null
    notes: string | null
    maintenanceType: $Enums.MaintenanceType | null
    scheduleId: string | null
    templateId: string | null
    assignedToId: string | null
    estimatedHours: number | null
    actualHours: number | null
    checklistItems: string | null
    issueType: string | null
    urgencyLevel: string | null
    reportedBy: string | null
    assetDowntime: boolean | null
    impactDescription: string | null
    photoUrls: string | null
    workPerformed: string | null
    partsUsed: string | null
    laborHours: number | null
    partsCost: number | null
    laborCost: number | null
    totalCost: number | null
    workStartedAt: Date | null
    workCompletedAt: Date | null
    technicianNotes: string | null
    managerReviewNotes: string | null
    finalApprovedAt: Date | null
    finalApprovedBy: string | null
    workPhotos: string | null
  }

  export type MaintenanceMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    description: string | null
    cost: number | null
    createdAt: Date | null
    updatedAt: Date | null
    completedAt: Date | null
    scheduledDate: Date | null
    priority: $Enums.MaintenancePriority | null
    requesterId: string | null
    managerId: string | null
    status: $Enums.MaintenanceStatus | null
    notes: string | null
    maintenanceType: $Enums.MaintenanceType | null
    scheduleId: string | null
    templateId: string | null
    assignedToId: string | null
    estimatedHours: number | null
    actualHours: number | null
    checklistItems: string | null
    issueType: string | null
    urgencyLevel: string | null
    reportedBy: string | null
    assetDowntime: boolean | null
    impactDescription: string | null
    photoUrls: string | null
    workPerformed: string | null
    partsUsed: string | null
    laborHours: number | null
    partsCost: number | null
    laborCost: number | null
    totalCost: number | null
    workStartedAt: Date | null
    workCompletedAt: Date | null
    technicianNotes: string | null
    managerReviewNotes: string | null
    finalApprovedAt: Date | null
    finalApprovedBy: string | null
    workPhotos: string | null
  }

  export type MaintenanceCountAggregateOutputType = {
    id: number
    assetId: number
    description: number
    cost: number
    createdAt: number
    updatedAt: number
    completedAt: number
    scheduledDate: number
    priority: number
    requesterId: number
    managerId: number
    status: number
    notes: number
    maintenanceType: number
    scheduleId: number
    templateId: number
    assignedToId: number
    estimatedHours: number
    actualHours: number
    checklistItems: number
    issueType: number
    urgencyLevel: number
    reportedBy: number
    assetDowntime: number
    impactDescription: number
    photoUrls: number
    workPerformed: number
    partsUsed: number
    laborHours: number
    partsCost: number
    laborCost: number
    totalCost: number
    workStartedAt: number
    workCompletedAt: number
    technicianNotes: number
    managerReviewNotes: number
    finalApprovedAt: number
    finalApprovedBy: number
    workPhotos: number
    _all: number
  }


  export type MaintenanceAvgAggregateInputType = {
    cost?: true
    estimatedHours?: true
    actualHours?: true
    laborHours?: true
    partsCost?: true
    laborCost?: true
    totalCost?: true
  }

  export type MaintenanceSumAggregateInputType = {
    cost?: true
    estimatedHours?: true
    actualHours?: true
    laborHours?: true
    partsCost?: true
    laborCost?: true
    totalCost?: true
  }

  export type MaintenanceMinAggregateInputType = {
    id?: true
    assetId?: true
    description?: true
    cost?: true
    createdAt?: true
    updatedAt?: true
    completedAt?: true
    scheduledDate?: true
    priority?: true
    requesterId?: true
    managerId?: true
    status?: true
    notes?: true
    maintenanceType?: true
    scheduleId?: true
    templateId?: true
    assignedToId?: true
    estimatedHours?: true
    actualHours?: true
    checklistItems?: true
    issueType?: true
    urgencyLevel?: true
    reportedBy?: true
    assetDowntime?: true
    impactDescription?: true
    photoUrls?: true
    workPerformed?: true
    partsUsed?: true
    laborHours?: true
    partsCost?: true
    laborCost?: true
    totalCost?: true
    workStartedAt?: true
    workCompletedAt?: true
    technicianNotes?: true
    managerReviewNotes?: true
    finalApprovedAt?: true
    finalApprovedBy?: true
    workPhotos?: true
  }

  export type MaintenanceMaxAggregateInputType = {
    id?: true
    assetId?: true
    description?: true
    cost?: true
    createdAt?: true
    updatedAt?: true
    completedAt?: true
    scheduledDate?: true
    priority?: true
    requesterId?: true
    managerId?: true
    status?: true
    notes?: true
    maintenanceType?: true
    scheduleId?: true
    templateId?: true
    assignedToId?: true
    estimatedHours?: true
    actualHours?: true
    checklistItems?: true
    issueType?: true
    urgencyLevel?: true
    reportedBy?: true
    assetDowntime?: true
    impactDescription?: true
    photoUrls?: true
    workPerformed?: true
    partsUsed?: true
    laborHours?: true
    partsCost?: true
    laborCost?: true
    totalCost?: true
    workStartedAt?: true
    workCompletedAt?: true
    technicianNotes?: true
    managerReviewNotes?: true
    finalApprovedAt?: true
    finalApprovedBy?: true
    workPhotos?: true
  }

  export type MaintenanceCountAggregateInputType = {
    id?: true
    assetId?: true
    description?: true
    cost?: true
    createdAt?: true
    updatedAt?: true
    completedAt?: true
    scheduledDate?: true
    priority?: true
    requesterId?: true
    managerId?: true
    status?: true
    notes?: true
    maintenanceType?: true
    scheduleId?: true
    templateId?: true
    assignedToId?: true
    estimatedHours?: true
    actualHours?: true
    checklistItems?: true
    issueType?: true
    urgencyLevel?: true
    reportedBy?: true
    assetDowntime?: true
    impactDescription?: true
    photoUrls?: true
    workPerformed?: true
    partsUsed?: true
    laborHours?: true
    partsCost?: true
    laborCost?: true
    totalCost?: true
    workStartedAt?: true
    workCompletedAt?: true
    technicianNotes?: true
    managerReviewNotes?: true
    finalApprovedAt?: true
    finalApprovedBy?: true
    workPhotos?: true
    _all?: true
  }

  export type MaintenanceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Maintenance to aggregate.
     */
    where?: MaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Maintenances to fetch.
     */
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Maintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Maintenances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Maintenances
    **/
    _count?: true | MaintenanceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaintenanceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaintenanceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaintenanceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaintenanceMaxAggregateInputType
  }

  export type GetMaintenanceAggregateType<T extends MaintenanceAggregateArgs> = {
        [P in keyof T & keyof AggregateMaintenance]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaintenance[P]>
      : GetScalarType<T[P], AggregateMaintenance[P]>
  }




  export type MaintenanceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithAggregationInput | MaintenanceOrderByWithAggregationInput[]
    by: MaintenanceScalarFieldEnum[] | MaintenanceScalarFieldEnum
    having?: MaintenanceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaintenanceCountAggregateInputType | true
    _avg?: MaintenanceAvgAggregateInputType
    _sum?: MaintenanceSumAggregateInputType
    _min?: MaintenanceMinAggregateInputType
    _max?: MaintenanceMaxAggregateInputType
  }

  export type MaintenanceGroupByOutputType = {
    id: string
    assetId: string
    description: string
    cost: number | null
    createdAt: Date
    updatedAt: Date
    completedAt: Date | null
    scheduledDate: Date | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId: string | null
    status: $Enums.MaintenanceStatus
    notes: string | null
    maintenanceType: $Enums.MaintenanceType
    scheduleId: string | null
    templateId: string | null
    assignedToId: string | null
    estimatedHours: number | null
    actualHours: number | null
    checklistItems: string | null
    issueType: string | null
    urgencyLevel: string | null
    reportedBy: string | null
    assetDowntime: boolean
    impactDescription: string | null
    photoUrls: string | null
    workPerformed: string | null
    partsUsed: string | null
    laborHours: number | null
    partsCost: number | null
    laborCost: number | null
    totalCost: number | null
    workStartedAt: Date | null
    workCompletedAt: Date | null
    technicianNotes: string | null
    managerReviewNotes: string | null
    finalApprovedAt: Date | null
    finalApprovedBy: string | null
    workPhotos: string | null
    _count: MaintenanceCountAggregateOutputType | null
    _avg: MaintenanceAvgAggregateOutputType | null
    _sum: MaintenanceSumAggregateOutputType | null
    _min: MaintenanceMinAggregateOutputType | null
    _max: MaintenanceMaxAggregateOutputType | null
  }

  type GetMaintenanceGroupByPayload<T extends MaintenanceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaintenanceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaintenanceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaintenanceGroupByOutputType[P]>
            : GetScalarType<T[P], MaintenanceGroupByOutputType[P]>
        }
      >
    >


  export type MaintenanceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    description?: boolean
    cost?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    completedAt?: boolean
    scheduledDate?: boolean
    priority?: boolean
    requesterId?: boolean
    managerId?: boolean
    status?: boolean
    notes?: boolean
    maintenanceType?: boolean
    scheduleId?: boolean
    templateId?: boolean
    assignedToId?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    checklistItems?: boolean
    issueType?: boolean
    urgencyLevel?: boolean
    reportedBy?: boolean
    assetDowntime?: boolean
    impactDescription?: boolean
    photoUrls?: boolean
    workPerformed?: boolean
    partsUsed?: boolean
    laborHours?: boolean
    partsCost?: boolean
    laborCost?: boolean
    totalCost?: boolean
    workStartedAt?: boolean
    workCompletedAt?: boolean
    technicianNotes?: boolean
    managerReviewNotes?: boolean
    finalApprovedAt?: boolean
    finalApprovedBy?: boolean
    workPhotos?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Maintenance$managerArgs<ExtArgs>
    assignedTo?: boolean | Maintenance$assignedToArgs<ExtArgs>
    schedule?: boolean | Maintenance$scheduleArgs<ExtArgs>
    template?: boolean | Maintenance$templateArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance"]>

  export type MaintenanceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    description?: boolean
    cost?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    completedAt?: boolean
    scheduledDate?: boolean
    priority?: boolean
    requesterId?: boolean
    managerId?: boolean
    status?: boolean
    notes?: boolean
    maintenanceType?: boolean
    scheduleId?: boolean
    templateId?: boolean
    assignedToId?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    checklistItems?: boolean
    issueType?: boolean
    urgencyLevel?: boolean
    reportedBy?: boolean
    assetDowntime?: boolean
    impactDescription?: boolean
    photoUrls?: boolean
    workPerformed?: boolean
    partsUsed?: boolean
    laborHours?: boolean
    partsCost?: boolean
    laborCost?: boolean
    totalCost?: boolean
    workStartedAt?: boolean
    workCompletedAt?: boolean
    technicianNotes?: boolean
    managerReviewNotes?: boolean
    finalApprovedAt?: boolean
    finalApprovedBy?: boolean
    workPhotos?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Maintenance$managerArgs<ExtArgs>
    assignedTo?: boolean | Maintenance$assignedToArgs<ExtArgs>
    schedule?: boolean | Maintenance$scheduleArgs<ExtArgs>
    template?: boolean | Maintenance$templateArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance"]>

  export type MaintenanceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    description?: boolean
    cost?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    completedAt?: boolean
    scheduledDate?: boolean
    priority?: boolean
    requesterId?: boolean
    managerId?: boolean
    status?: boolean
    notes?: boolean
    maintenanceType?: boolean
    scheduleId?: boolean
    templateId?: boolean
    assignedToId?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    checklistItems?: boolean
    issueType?: boolean
    urgencyLevel?: boolean
    reportedBy?: boolean
    assetDowntime?: boolean
    impactDescription?: boolean
    photoUrls?: boolean
    workPerformed?: boolean
    partsUsed?: boolean
    laborHours?: boolean
    partsCost?: boolean
    laborCost?: boolean
    totalCost?: boolean
    workStartedAt?: boolean
    workCompletedAt?: boolean
    technicianNotes?: boolean
    managerReviewNotes?: boolean
    finalApprovedAt?: boolean
    finalApprovedBy?: boolean
    workPhotos?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Maintenance$managerArgs<ExtArgs>
    assignedTo?: boolean | Maintenance$assignedToArgs<ExtArgs>
    schedule?: boolean | Maintenance$scheduleArgs<ExtArgs>
    template?: boolean | Maintenance$templateArgs<ExtArgs>
  }, ExtArgs["result"]["maintenance"]>

  export type MaintenanceSelectScalar = {
    id?: boolean
    assetId?: boolean
    description?: boolean
    cost?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    completedAt?: boolean
    scheduledDate?: boolean
    priority?: boolean
    requesterId?: boolean
    managerId?: boolean
    status?: boolean
    notes?: boolean
    maintenanceType?: boolean
    scheduleId?: boolean
    templateId?: boolean
    assignedToId?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    checklistItems?: boolean
    issueType?: boolean
    urgencyLevel?: boolean
    reportedBy?: boolean
    assetDowntime?: boolean
    impactDescription?: boolean
    photoUrls?: boolean
    workPerformed?: boolean
    partsUsed?: boolean
    laborHours?: boolean
    partsCost?: boolean
    laborCost?: boolean
    totalCost?: boolean
    workStartedAt?: boolean
    workCompletedAt?: boolean
    technicianNotes?: boolean
    managerReviewNotes?: boolean
    finalApprovedAt?: boolean
    finalApprovedBy?: boolean
    workPhotos?: boolean
  }

  export type MaintenanceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "description" | "cost" | "createdAt" | "updatedAt" | "completedAt" | "scheduledDate" | "priority" | "requesterId" | "managerId" | "status" | "notes" | "maintenanceType" | "scheduleId" | "templateId" | "assignedToId" | "estimatedHours" | "actualHours" | "checklistItems" | "issueType" | "urgencyLevel" | "reportedBy" | "assetDowntime" | "impactDescription" | "photoUrls" | "workPerformed" | "partsUsed" | "laborHours" | "partsCost" | "laborCost" | "totalCost" | "workStartedAt" | "workCompletedAt" | "technicianNotes" | "managerReviewNotes" | "finalApprovedAt" | "finalApprovedBy" | "workPhotos", ExtArgs["result"]["maintenance"]>
  export type MaintenanceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Maintenance$managerArgs<ExtArgs>
    assignedTo?: boolean | Maintenance$assignedToArgs<ExtArgs>
    schedule?: boolean | Maintenance$scheduleArgs<ExtArgs>
    template?: boolean | Maintenance$templateArgs<ExtArgs>
  }
  export type MaintenanceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Maintenance$managerArgs<ExtArgs>
    assignedTo?: boolean | Maintenance$assignedToArgs<ExtArgs>
    schedule?: boolean | Maintenance$scheduleArgs<ExtArgs>
    template?: boolean | Maintenance$templateArgs<ExtArgs>
  }
  export type MaintenanceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | Maintenance$managerArgs<ExtArgs>
    assignedTo?: boolean | Maintenance$assignedToArgs<ExtArgs>
    schedule?: boolean | Maintenance$scheduleArgs<ExtArgs>
    template?: boolean | Maintenance$templateArgs<ExtArgs>
  }

  export type $MaintenancePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Maintenance"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      requester: Prisma.$UserPayload<ExtArgs>
      manager: Prisma.$UserPayload<ExtArgs> | null
      assignedTo: Prisma.$UserPayload<ExtArgs> | null
      schedule: Prisma.$MaintenanceSchedulePayload<ExtArgs> | null
      template: Prisma.$MaintenanceTemplatePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      description: string
      cost: number | null
      createdAt: Date
      updatedAt: Date
      completedAt: Date | null
      scheduledDate: Date | null
      priority: $Enums.MaintenancePriority
      requesterId: string
      managerId: string | null
      status: $Enums.MaintenanceStatus
      notes: string | null
      maintenanceType: $Enums.MaintenanceType
      scheduleId: string | null
      templateId: string | null
      assignedToId: string | null
      estimatedHours: number | null
      actualHours: number | null
      checklistItems: string | null
      issueType: string | null
      urgencyLevel: string | null
      reportedBy: string | null
      assetDowntime: boolean
      impactDescription: string | null
      photoUrls: string | null
      workPerformed: string | null
      partsUsed: string | null
      laborHours: number | null
      partsCost: number | null
      laborCost: number | null
      totalCost: number | null
      workStartedAt: Date | null
      workCompletedAt: Date | null
      technicianNotes: string | null
      managerReviewNotes: string | null
      finalApprovedAt: Date | null
      finalApprovedBy: string | null
      workPhotos: string | null
    }, ExtArgs["result"]["maintenance"]>
    composites: {}
  }

  type MaintenanceGetPayload<S extends boolean | null | undefined | MaintenanceDefaultArgs> = $Result.GetResult<Prisma.$MaintenancePayload, S>

  type MaintenanceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MaintenanceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaintenanceCountAggregateInputType | true
    }

  export interface MaintenanceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Maintenance'], meta: { name: 'Maintenance' } }
    /**
     * Find zero or one Maintenance that matches the filter.
     * @param {MaintenanceFindUniqueArgs} args - Arguments to find a Maintenance
     * @example
     * // Get one Maintenance
     * const maintenance = await prisma.maintenance.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaintenanceFindUniqueArgs>(args: SelectSubset<T, MaintenanceFindUniqueArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Maintenance that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MaintenanceFindUniqueOrThrowArgs} args - Arguments to find a Maintenance
     * @example
     * // Get one Maintenance
     * const maintenance = await prisma.maintenance.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaintenanceFindUniqueOrThrowArgs>(args: SelectSubset<T, MaintenanceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Maintenance that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceFindFirstArgs} args - Arguments to find a Maintenance
     * @example
     * // Get one Maintenance
     * const maintenance = await prisma.maintenance.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaintenanceFindFirstArgs>(args?: SelectSubset<T, MaintenanceFindFirstArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Maintenance that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceFindFirstOrThrowArgs} args - Arguments to find a Maintenance
     * @example
     * // Get one Maintenance
     * const maintenance = await prisma.maintenance.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaintenanceFindFirstOrThrowArgs>(args?: SelectSubset<T, MaintenanceFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Maintenances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Maintenances
     * const maintenances = await prisma.maintenance.findMany()
     * 
     * // Get first 10 Maintenances
     * const maintenances = await prisma.maintenance.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const maintenanceWithIdOnly = await prisma.maintenance.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaintenanceFindManyArgs>(args?: SelectSubset<T, MaintenanceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Maintenance.
     * @param {MaintenanceCreateArgs} args - Arguments to create a Maintenance.
     * @example
     * // Create one Maintenance
     * const Maintenance = await prisma.maintenance.create({
     *   data: {
     *     // ... data to create a Maintenance
     *   }
     * })
     * 
     */
    create<T extends MaintenanceCreateArgs>(args: SelectSubset<T, MaintenanceCreateArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Maintenances.
     * @param {MaintenanceCreateManyArgs} args - Arguments to create many Maintenances.
     * @example
     * // Create many Maintenances
     * const maintenance = await prisma.maintenance.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaintenanceCreateManyArgs>(args?: SelectSubset<T, MaintenanceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Maintenances and returns the data saved in the database.
     * @param {MaintenanceCreateManyAndReturnArgs} args - Arguments to create many Maintenances.
     * @example
     * // Create many Maintenances
     * const maintenance = await prisma.maintenance.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Maintenances and only return the `id`
     * const maintenanceWithIdOnly = await prisma.maintenance.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaintenanceCreateManyAndReturnArgs>(args?: SelectSubset<T, MaintenanceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Maintenance.
     * @param {MaintenanceDeleteArgs} args - Arguments to delete one Maintenance.
     * @example
     * // Delete one Maintenance
     * const Maintenance = await prisma.maintenance.delete({
     *   where: {
     *     // ... filter to delete one Maintenance
     *   }
     * })
     * 
     */
    delete<T extends MaintenanceDeleteArgs>(args: SelectSubset<T, MaintenanceDeleteArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Maintenance.
     * @param {MaintenanceUpdateArgs} args - Arguments to update one Maintenance.
     * @example
     * // Update one Maintenance
     * const maintenance = await prisma.maintenance.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaintenanceUpdateArgs>(args: SelectSubset<T, MaintenanceUpdateArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Maintenances.
     * @param {MaintenanceDeleteManyArgs} args - Arguments to filter Maintenances to delete.
     * @example
     * // Delete a few Maintenances
     * const { count } = await prisma.maintenance.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaintenanceDeleteManyArgs>(args?: SelectSubset<T, MaintenanceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Maintenances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Maintenances
     * const maintenance = await prisma.maintenance.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaintenanceUpdateManyArgs>(args: SelectSubset<T, MaintenanceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Maintenances and returns the data updated in the database.
     * @param {MaintenanceUpdateManyAndReturnArgs} args - Arguments to update many Maintenances.
     * @example
     * // Update many Maintenances
     * const maintenance = await prisma.maintenance.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Maintenances and only return the `id`
     * const maintenanceWithIdOnly = await prisma.maintenance.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MaintenanceUpdateManyAndReturnArgs>(args: SelectSubset<T, MaintenanceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Maintenance.
     * @param {MaintenanceUpsertArgs} args - Arguments to update or create a Maintenance.
     * @example
     * // Update or create a Maintenance
     * const maintenance = await prisma.maintenance.upsert({
     *   create: {
     *     // ... data to create a Maintenance
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Maintenance we want to update
     *   }
     * })
     */
    upsert<T extends MaintenanceUpsertArgs>(args: SelectSubset<T, MaintenanceUpsertArgs<ExtArgs>>): Prisma__MaintenanceClient<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Maintenances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceCountArgs} args - Arguments to filter Maintenances to count.
     * @example
     * // Count the number of Maintenances
     * const count = await prisma.maintenance.count({
     *   where: {
     *     // ... the filter for the Maintenances we want to count
     *   }
     * })
    **/
    count<T extends MaintenanceCountArgs>(
      args?: Subset<T, MaintenanceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaintenanceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Maintenance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaintenanceAggregateArgs>(args: Subset<T, MaintenanceAggregateArgs>): Prisma.PrismaPromise<GetMaintenanceAggregateType<T>>

    /**
     * Group by Maintenance.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaintenanceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaintenanceGroupByArgs['orderBy'] }
        : { orderBy?: MaintenanceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaintenanceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaintenanceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Maintenance model
   */
  readonly fields: MaintenanceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Maintenance.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaintenanceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manager<T extends Maintenance$managerArgs<ExtArgs> = {}>(args?: Subset<T, Maintenance$managerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    assignedTo<T extends Maintenance$assignedToArgs<ExtArgs> = {}>(args?: Subset<T, Maintenance$assignedToArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    schedule<T extends Maintenance$scheduleArgs<ExtArgs> = {}>(args?: Subset<T, Maintenance$scheduleArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    template<T extends Maintenance$templateArgs<ExtArgs> = {}>(args?: Subset<T, Maintenance$templateArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Maintenance model
   */
  interface MaintenanceFieldRefs {
    readonly id: FieldRef<"Maintenance", 'String'>
    readonly assetId: FieldRef<"Maintenance", 'String'>
    readonly description: FieldRef<"Maintenance", 'String'>
    readonly cost: FieldRef<"Maintenance", 'Float'>
    readonly createdAt: FieldRef<"Maintenance", 'DateTime'>
    readonly updatedAt: FieldRef<"Maintenance", 'DateTime'>
    readonly completedAt: FieldRef<"Maintenance", 'DateTime'>
    readonly scheduledDate: FieldRef<"Maintenance", 'DateTime'>
    readonly priority: FieldRef<"Maintenance", 'MaintenancePriority'>
    readonly requesterId: FieldRef<"Maintenance", 'String'>
    readonly managerId: FieldRef<"Maintenance", 'String'>
    readonly status: FieldRef<"Maintenance", 'MaintenanceStatus'>
    readonly notes: FieldRef<"Maintenance", 'String'>
    readonly maintenanceType: FieldRef<"Maintenance", 'MaintenanceType'>
    readonly scheduleId: FieldRef<"Maintenance", 'String'>
    readonly templateId: FieldRef<"Maintenance", 'String'>
    readonly assignedToId: FieldRef<"Maintenance", 'String'>
    readonly estimatedHours: FieldRef<"Maintenance", 'Float'>
    readonly actualHours: FieldRef<"Maintenance", 'Float'>
    readonly checklistItems: FieldRef<"Maintenance", 'String'>
    readonly issueType: FieldRef<"Maintenance", 'String'>
    readonly urgencyLevel: FieldRef<"Maintenance", 'String'>
    readonly reportedBy: FieldRef<"Maintenance", 'String'>
    readonly assetDowntime: FieldRef<"Maintenance", 'Boolean'>
    readonly impactDescription: FieldRef<"Maintenance", 'String'>
    readonly photoUrls: FieldRef<"Maintenance", 'String'>
    readonly workPerformed: FieldRef<"Maintenance", 'String'>
    readonly partsUsed: FieldRef<"Maintenance", 'String'>
    readonly laborHours: FieldRef<"Maintenance", 'Float'>
    readonly partsCost: FieldRef<"Maintenance", 'Float'>
    readonly laborCost: FieldRef<"Maintenance", 'Float'>
    readonly totalCost: FieldRef<"Maintenance", 'Float'>
    readonly workStartedAt: FieldRef<"Maintenance", 'DateTime'>
    readonly workCompletedAt: FieldRef<"Maintenance", 'DateTime'>
    readonly technicianNotes: FieldRef<"Maintenance", 'String'>
    readonly managerReviewNotes: FieldRef<"Maintenance", 'String'>
    readonly finalApprovedAt: FieldRef<"Maintenance", 'DateTime'>
    readonly finalApprovedBy: FieldRef<"Maintenance", 'String'>
    readonly workPhotos: FieldRef<"Maintenance", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Maintenance findUnique
   */
  export type MaintenanceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which Maintenance to fetch.
     */
    where: MaintenanceWhereUniqueInput
  }

  /**
   * Maintenance findUniqueOrThrow
   */
  export type MaintenanceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which Maintenance to fetch.
     */
    where: MaintenanceWhereUniqueInput
  }

  /**
   * Maintenance findFirst
   */
  export type MaintenanceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which Maintenance to fetch.
     */
    where?: MaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Maintenances to fetch.
     */
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Maintenances.
     */
    cursor?: MaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Maintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Maintenances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Maintenances.
     */
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * Maintenance findFirstOrThrow
   */
  export type MaintenanceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which Maintenance to fetch.
     */
    where?: MaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Maintenances to fetch.
     */
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Maintenances.
     */
    cursor?: MaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Maintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Maintenances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Maintenances.
     */
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * Maintenance findMany
   */
  export type MaintenanceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * Filter, which Maintenances to fetch.
     */
    where?: MaintenanceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Maintenances to fetch.
     */
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Maintenances.
     */
    cursor?: MaintenanceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Maintenances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Maintenances.
     */
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * Maintenance create
   */
  export type MaintenanceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * The data needed to create a Maintenance.
     */
    data: XOR<MaintenanceCreateInput, MaintenanceUncheckedCreateInput>
  }

  /**
   * Maintenance createMany
   */
  export type MaintenanceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Maintenances.
     */
    data: MaintenanceCreateManyInput | MaintenanceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Maintenance createManyAndReturn
   */
  export type MaintenanceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * The data used to create many Maintenances.
     */
    data: MaintenanceCreateManyInput | MaintenanceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Maintenance update
   */
  export type MaintenanceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * The data needed to update a Maintenance.
     */
    data: XOR<MaintenanceUpdateInput, MaintenanceUncheckedUpdateInput>
    /**
     * Choose, which Maintenance to update.
     */
    where: MaintenanceWhereUniqueInput
  }

  /**
   * Maintenance updateMany
   */
  export type MaintenanceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Maintenances.
     */
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyInput>
    /**
     * Filter which Maintenances to update
     */
    where?: MaintenanceWhereInput
    /**
     * Limit how many Maintenances to update.
     */
    limit?: number
  }

  /**
   * Maintenance updateManyAndReturn
   */
  export type MaintenanceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * The data used to update Maintenances.
     */
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyInput>
    /**
     * Filter which Maintenances to update
     */
    where?: MaintenanceWhereInput
    /**
     * Limit how many Maintenances to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Maintenance upsert
   */
  export type MaintenanceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * The filter to search for the Maintenance to update in case it exists.
     */
    where: MaintenanceWhereUniqueInput
    /**
     * In case the Maintenance found by the `where` argument doesn't exist, create a new Maintenance with this data.
     */
    create: XOR<MaintenanceCreateInput, MaintenanceUncheckedCreateInput>
    /**
     * In case the Maintenance was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaintenanceUpdateInput, MaintenanceUncheckedUpdateInput>
  }

  /**
   * Maintenance delete
   */
  export type MaintenanceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    /**
     * Filter which Maintenance to delete.
     */
    where: MaintenanceWhereUniqueInput
  }

  /**
   * Maintenance deleteMany
   */
  export type MaintenanceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Maintenances to delete
     */
    where?: MaintenanceWhereInput
    /**
     * Limit how many Maintenances to delete.
     */
    limit?: number
  }

  /**
   * Maintenance.manager
   */
  export type Maintenance$managerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Maintenance.assignedTo
   */
  export type Maintenance$assignedToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Maintenance.schedule
   */
  export type Maintenance$scheduleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    where?: MaintenanceScheduleWhereInput
  }

  /**
   * Maintenance.template
   */
  export type Maintenance$templateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    where?: MaintenanceTemplateWhereInput
  }

  /**
   * Maintenance without action
   */
  export type MaintenanceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
  }


  /**
   * Model Disposal
   */

  export type AggregateDisposal = {
    _count: DisposalCountAggregateOutputType | null
    _avg: DisposalAvgAggregateOutputType | null
    _sum: DisposalSumAggregateOutputType | null
    _min: DisposalMinAggregateOutputType | null
    _max: DisposalMaxAggregateOutputType | null
  }

  export type DisposalAvgAggregateOutputType = {
    actualValue: number | null
    expectedValue: number | null
  }

  export type DisposalSumAggregateOutputType = {
    actualValue: number | null
    expectedValue: number | null
  }

  export type DisposalMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    actualValue: number | null
    expectedValue: number | null
    requesterId: string | null
    method: $Enums.DisposalMethod | null
    status: $Enums.DisposalStatus | null
  }

  export type DisposalMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    reason: string | null
    createdAt: Date | null
    updatedAt: Date | null
    actualValue: number | null
    expectedValue: number | null
    requesterId: string | null
    method: $Enums.DisposalMethod | null
    status: $Enums.DisposalStatus | null
  }

  export type DisposalCountAggregateOutputType = {
    id: number
    assetId: number
    reason: number
    createdAt: number
    updatedAt: number
    actualValue: number
    expectedValue: number
    requesterId: number
    method: number
    status: number
    _all: number
  }


  export type DisposalAvgAggregateInputType = {
    actualValue?: true
    expectedValue?: true
  }

  export type DisposalSumAggregateInputType = {
    actualValue?: true
    expectedValue?: true
  }

  export type DisposalMinAggregateInputType = {
    id?: true
    assetId?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    actualValue?: true
    expectedValue?: true
    requesterId?: true
    method?: true
    status?: true
  }

  export type DisposalMaxAggregateInputType = {
    id?: true
    assetId?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    actualValue?: true
    expectedValue?: true
    requesterId?: true
    method?: true
    status?: true
  }

  export type DisposalCountAggregateInputType = {
    id?: true
    assetId?: true
    reason?: true
    createdAt?: true
    updatedAt?: true
    actualValue?: true
    expectedValue?: true
    requesterId?: true
    method?: true
    status?: true
    _all?: true
  }

  export type DisposalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Disposal to aggregate.
     */
    where?: DisposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disposals to fetch.
     */
    orderBy?: DisposalOrderByWithRelationInput | DisposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DisposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Disposals
    **/
    _count?: true | DisposalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DisposalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DisposalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DisposalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DisposalMaxAggregateInputType
  }

  export type GetDisposalAggregateType<T extends DisposalAggregateArgs> = {
        [P in keyof T & keyof AggregateDisposal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDisposal[P]>
      : GetScalarType<T[P], AggregateDisposal[P]>
  }




  export type DisposalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DisposalWhereInput
    orderBy?: DisposalOrderByWithAggregationInput | DisposalOrderByWithAggregationInput[]
    by: DisposalScalarFieldEnum[] | DisposalScalarFieldEnum
    having?: DisposalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DisposalCountAggregateInputType | true
    _avg?: DisposalAvgAggregateInputType
    _sum?: DisposalSumAggregateInputType
    _min?: DisposalMinAggregateInputType
    _max?: DisposalMaxAggregateInputType
  }

  export type DisposalGroupByOutputType = {
    id: string
    assetId: string
    reason: string
    createdAt: Date
    updatedAt: Date
    actualValue: number | null
    expectedValue: number
    requesterId: string
    method: $Enums.DisposalMethod
    status: $Enums.DisposalStatus
    _count: DisposalCountAggregateOutputType | null
    _avg: DisposalAvgAggregateOutputType | null
    _sum: DisposalSumAggregateOutputType | null
    _min: DisposalMinAggregateOutputType | null
    _max: DisposalMaxAggregateOutputType | null
  }

  type GetDisposalGroupByPayload<T extends DisposalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DisposalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DisposalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DisposalGroupByOutputType[P]>
            : GetScalarType<T[P], DisposalGroupByOutputType[P]>
        }
      >
    >


  export type DisposalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    actualValue?: boolean
    expectedValue?: boolean
    requesterId?: boolean
    method?: boolean
    status?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disposal"]>

  export type DisposalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    actualValue?: boolean
    expectedValue?: boolean
    requesterId?: boolean
    method?: boolean
    status?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disposal"]>

  export type DisposalSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    actualValue?: boolean
    expectedValue?: boolean
    requesterId?: boolean
    method?: boolean
    status?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["disposal"]>

  export type DisposalSelectScalar = {
    id?: boolean
    assetId?: boolean
    reason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    actualValue?: boolean
    expectedValue?: boolean
    requesterId?: boolean
    method?: boolean
    status?: boolean
  }

  export type DisposalOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "reason" | "createdAt" | "updatedAt" | "actualValue" | "expectedValue" | "requesterId" | "method" | "status", ExtArgs["result"]["disposal"]>
  export type DisposalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DisposalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DisposalIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DisposalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Disposal"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      requester: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      reason: string
      createdAt: Date
      updatedAt: Date
      actualValue: number | null
      expectedValue: number
      requesterId: string
      method: $Enums.DisposalMethod
      status: $Enums.DisposalStatus
    }, ExtArgs["result"]["disposal"]>
    composites: {}
  }

  type DisposalGetPayload<S extends boolean | null | undefined | DisposalDefaultArgs> = $Result.GetResult<Prisma.$DisposalPayload, S>

  type DisposalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DisposalFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DisposalCountAggregateInputType | true
    }

  export interface DisposalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Disposal'], meta: { name: 'Disposal' } }
    /**
     * Find zero or one Disposal that matches the filter.
     * @param {DisposalFindUniqueArgs} args - Arguments to find a Disposal
     * @example
     * // Get one Disposal
     * const disposal = await prisma.disposal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DisposalFindUniqueArgs>(args: SelectSubset<T, DisposalFindUniqueArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Disposal that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DisposalFindUniqueOrThrowArgs} args - Arguments to find a Disposal
     * @example
     * // Get one Disposal
     * const disposal = await prisma.disposal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DisposalFindUniqueOrThrowArgs>(args: SelectSubset<T, DisposalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disposal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalFindFirstArgs} args - Arguments to find a Disposal
     * @example
     * // Get one Disposal
     * const disposal = await prisma.disposal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DisposalFindFirstArgs>(args?: SelectSubset<T, DisposalFindFirstArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Disposal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalFindFirstOrThrowArgs} args - Arguments to find a Disposal
     * @example
     * // Get one Disposal
     * const disposal = await prisma.disposal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DisposalFindFirstOrThrowArgs>(args?: SelectSubset<T, DisposalFindFirstOrThrowArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Disposals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Disposals
     * const disposals = await prisma.disposal.findMany()
     * 
     * // Get first 10 Disposals
     * const disposals = await prisma.disposal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const disposalWithIdOnly = await prisma.disposal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DisposalFindManyArgs>(args?: SelectSubset<T, DisposalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Disposal.
     * @param {DisposalCreateArgs} args - Arguments to create a Disposal.
     * @example
     * // Create one Disposal
     * const Disposal = await prisma.disposal.create({
     *   data: {
     *     // ... data to create a Disposal
     *   }
     * })
     * 
     */
    create<T extends DisposalCreateArgs>(args: SelectSubset<T, DisposalCreateArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Disposals.
     * @param {DisposalCreateManyArgs} args - Arguments to create many Disposals.
     * @example
     * // Create many Disposals
     * const disposal = await prisma.disposal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DisposalCreateManyArgs>(args?: SelectSubset<T, DisposalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Disposals and returns the data saved in the database.
     * @param {DisposalCreateManyAndReturnArgs} args - Arguments to create many Disposals.
     * @example
     * // Create many Disposals
     * const disposal = await prisma.disposal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Disposals and only return the `id`
     * const disposalWithIdOnly = await prisma.disposal.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DisposalCreateManyAndReturnArgs>(args?: SelectSubset<T, DisposalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Disposal.
     * @param {DisposalDeleteArgs} args - Arguments to delete one Disposal.
     * @example
     * // Delete one Disposal
     * const Disposal = await prisma.disposal.delete({
     *   where: {
     *     // ... filter to delete one Disposal
     *   }
     * })
     * 
     */
    delete<T extends DisposalDeleteArgs>(args: SelectSubset<T, DisposalDeleteArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Disposal.
     * @param {DisposalUpdateArgs} args - Arguments to update one Disposal.
     * @example
     * // Update one Disposal
     * const disposal = await prisma.disposal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DisposalUpdateArgs>(args: SelectSubset<T, DisposalUpdateArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Disposals.
     * @param {DisposalDeleteManyArgs} args - Arguments to filter Disposals to delete.
     * @example
     * // Delete a few Disposals
     * const { count } = await prisma.disposal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DisposalDeleteManyArgs>(args?: SelectSubset<T, DisposalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disposals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Disposals
     * const disposal = await prisma.disposal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DisposalUpdateManyArgs>(args: SelectSubset<T, DisposalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Disposals and returns the data updated in the database.
     * @param {DisposalUpdateManyAndReturnArgs} args - Arguments to update many Disposals.
     * @example
     * // Update many Disposals
     * const disposal = await prisma.disposal.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Disposals and only return the `id`
     * const disposalWithIdOnly = await prisma.disposal.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DisposalUpdateManyAndReturnArgs>(args: SelectSubset<T, DisposalUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Disposal.
     * @param {DisposalUpsertArgs} args - Arguments to update or create a Disposal.
     * @example
     * // Update or create a Disposal
     * const disposal = await prisma.disposal.upsert({
     *   create: {
     *     // ... data to create a Disposal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Disposal we want to update
     *   }
     * })
     */
    upsert<T extends DisposalUpsertArgs>(args: SelectSubset<T, DisposalUpsertArgs<ExtArgs>>): Prisma__DisposalClient<$Result.GetResult<Prisma.$DisposalPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Disposals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalCountArgs} args - Arguments to filter Disposals to count.
     * @example
     * // Count the number of Disposals
     * const count = await prisma.disposal.count({
     *   where: {
     *     // ... the filter for the Disposals we want to count
     *   }
     * })
    **/
    count<T extends DisposalCountArgs>(
      args?: Subset<T, DisposalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DisposalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Disposal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DisposalAggregateArgs>(args: Subset<T, DisposalAggregateArgs>): Prisma.PrismaPromise<GetDisposalAggregateType<T>>

    /**
     * Group by Disposal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DisposalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DisposalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DisposalGroupByArgs['orderBy'] }
        : { orderBy?: DisposalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DisposalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDisposalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Disposal model
   */
  readonly fields: DisposalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Disposal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DisposalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Disposal model
   */
  interface DisposalFieldRefs {
    readonly id: FieldRef<"Disposal", 'String'>
    readonly assetId: FieldRef<"Disposal", 'String'>
    readonly reason: FieldRef<"Disposal", 'String'>
    readonly createdAt: FieldRef<"Disposal", 'DateTime'>
    readonly updatedAt: FieldRef<"Disposal", 'DateTime'>
    readonly actualValue: FieldRef<"Disposal", 'Float'>
    readonly expectedValue: FieldRef<"Disposal", 'Float'>
    readonly requesterId: FieldRef<"Disposal", 'String'>
    readonly method: FieldRef<"Disposal", 'DisposalMethod'>
    readonly status: FieldRef<"Disposal", 'DisposalStatus'>
  }
    

  // Custom InputTypes
  /**
   * Disposal findUnique
   */
  export type DisposalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * Filter, which Disposal to fetch.
     */
    where: DisposalWhereUniqueInput
  }

  /**
   * Disposal findUniqueOrThrow
   */
  export type DisposalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * Filter, which Disposal to fetch.
     */
    where: DisposalWhereUniqueInput
  }

  /**
   * Disposal findFirst
   */
  export type DisposalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * Filter, which Disposal to fetch.
     */
    where?: DisposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disposals to fetch.
     */
    orderBy?: DisposalOrderByWithRelationInput | DisposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Disposals.
     */
    cursor?: DisposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Disposals.
     */
    distinct?: DisposalScalarFieldEnum | DisposalScalarFieldEnum[]
  }

  /**
   * Disposal findFirstOrThrow
   */
  export type DisposalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * Filter, which Disposal to fetch.
     */
    where?: DisposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disposals to fetch.
     */
    orderBy?: DisposalOrderByWithRelationInput | DisposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Disposals.
     */
    cursor?: DisposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disposals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Disposals.
     */
    distinct?: DisposalScalarFieldEnum | DisposalScalarFieldEnum[]
  }

  /**
   * Disposal findMany
   */
  export type DisposalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * Filter, which Disposals to fetch.
     */
    where?: DisposalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Disposals to fetch.
     */
    orderBy?: DisposalOrderByWithRelationInput | DisposalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Disposals.
     */
    cursor?: DisposalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Disposals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Disposals.
     */
    skip?: number
    distinct?: DisposalScalarFieldEnum | DisposalScalarFieldEnum[]
  }

  /**
   * Disposal create
   */
  export type DisposalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * The data needed to create a Disposal.
     */
    data: XOR<DisposalCreateInput, DisposalUncheckedCreateInput>
  }

  /**
   * Disposal createMany
   */
  export type DisposalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Disposals.
     */
    data: DisposalCreateManyInput | DisposalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Disposal createManyAndReturn
   */
  export type DisposalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * The data used to create many Disposals.
     */
    data: DisposalCreateManyInput | DisposalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Disposal update
   */
  export type DisposalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * The data needed to update a Disposal.
     */
    data: XOR<DisposalUpdateInput, DisposalUncheckedUpdateInput>
    /**
     * Choose, which Disposal to update.
     */
    where: DisposalWhereUniqueInput
  }

  /**
   * Disposal updateMany
   */
  export type DisposalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Disposals.
     */
    data: XOR<DisposalUpdateManyMutationInput, DisposalUncheckedUpdateManyInput>
    /**
     * Filter which Disposals to update
     */
    where?: DisposalWhereInput
    /**
     * Limit how many Disposals to update.
     */
    limit?: number
  }

  /**
   * Disposal updateManyAndReturn
   */
  export type DisposalUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * The data used to update Disposals.
     */
    data: XOR<DisposalUpdateManyMutationInput, DisposalUncheckedUpdateManyInput>
    /**
     * Filter which Disposals to update
     */
    where?: DisposalWhereInput
    /**
     * Limit how many Disposals to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Disposal upsert
   */
  export type DisposalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * The filter to search for the Disposal to update in case it exists.
     */
    where: DisposalWhereUniqueInput
    /**
     * In case the Disposal found by the `where` argument doesn't exist, create a new Disposal with this data.
     */
    create: XOR<DisposalCreateInput, DisposalUncheckedCreateInput>
    /**
     * In case the Disposal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DisposalUpdateInput, DisposalUncheckedUpdateInput>
  }

  /**
   * Disposal delete
   */
  export type DisposalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
    /**
     * Filter which Disposal to delete.
     */
    where: DisposalWhereUniqueInput
  }

  /**
   * Disposal deleteMany
   */
  export type DisposalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Disposals to delete
     */
    where?: DisposalWhereInput
    /**
     * Limit how many Disposals to delete.
     */
    limit?: number
  }

  /**
   * Disposal without action
   */
  export type DisposalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Disposal
     */
    select?: DisposalSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Disposal
     */
    omit?: DisposalOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DisposalInclude<ExtArgs> | null
  }


  /**
   * Model Document
   */

  export type AggregateDocument = {
    _count: DocumentCountAggregateOutputType | null
    _avg: DocumentAvgAggregateOutputType | null
    _sum: DocumentSumAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  export type DocumentAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type DocumentSumAggregateOutputType = {
    fileSize: number | null
  }

  export type DocumentMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    type: $Enums.DocumentType | null
    url: string | null
    fileName: string | null
    fileSize: number | null
    filePath: string | null
    mimeType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DocumentMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    type: $Enums.DocumentType | null
    url: string | null
    fileName: string | null
    fileSize: number | null
    filePath: string | null
    mimeType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type DocumentCountAggregateOutputType = {
    id: number
    assetId: number
    type: number
    url: number
    fileName: number
    fileSize: number
    filePath: number
    mimeType: number
    createdAt: number
    updatedAt: number
    meta: number
    _all: number
  }


  export type DocumentAvgAggregateInputType = {
    fileSize?: true
  }

  export type DocumentSumAggregateInputType = {
    fileSize?: true
  }

  export type DocumentMinAggregateInputType = {
    id?: true
    assetId?: true
    type?: true
    url?: true
    fileName?: true
    fileSize?: true
    filePath?: true
    mimeType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DocumentMaxAggregateInputType = {
    id?: true
    assetId?: true
    type?: true
    url?: true
    fileName?: true
    fileSize?: true
    filePath?: true
    mimeType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type DocumentCountAggregateInputType = {
    id?: true
    assetId?: true
    type?: true
    url?: true
    fileName?: true
    fileSize?: true
    filePath?: true
    mimeType?: true
    createdAt?: true
    updatedAt?: true
    meta?: true
    _all?: true
  }

  export type DocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Document to aggregate.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Documents
    **/
    _count?: true | DocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DocumentMaxAggregateInputType
  }

  export type GetDocumentAggregateType<T extends DocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument[P]>
      : GetScalarType<T[P], AggregateDocument[P]>
  }




  export type DocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DocumentWhereInput
    orderBy?: DocumentOrderByWithAggregationInput | DocumentOrderByWithAggregationInput[]
    by: DocumentScalarFieldEnum[] | DocumentScalarFieldEnum
    having?: DocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DocumentCountAggregateInputType | true
    _avg?: DocumentAvgAggregateInputType
    _sum?: DocumentSumAggregateInputType
    _min?: DocumentMinAggregateInputType
    _max?: DocumentMaxAggregateInputType
  }

  export type DocumentGroupByOutputType = {
    id: string
    assetId: string
    type: $Enums.DocumentType
    url: string
    fileName: string | null
    fileSize: number | null
    filePath: string | null
    mimeType: string | null
    createdAt: Date
    updatedAt: Date
    meta: JsonValue | null
    _count: DocumentCountAggregateOutputType | null
    _avg: DocumentAvgAggregateOutputType | null
    _sum: DocumentSumAggregateOutputType | null
    _min: DocumentMinAggregateOutputType | null
    _max: DocumentMaxAggregateOutputType | null
  }

  type GetDocumentGroupByPayload<T extends DocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DocumentGroupByOutputType[P]>
            : GetScalarType<T[P], DocumentGroupByOutputType[P]>
        }
      >
    >


  export type DocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    type?: boolean
    url?: boolean
    fileName?: boolean
    fileSize?: boolean
    filePath?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    meta?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    type?: boolean
    url?: boolean
    fileName?: boolean
    fileSize?: boolean
    filePath?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    meta?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    type?: boolean
    url?: boolean
    fileName?: boolean
    fileSize?: boolean
    filePath?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    meta?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document"]>

  export type DocumentSelectScalar = {
    id?: boolean
    assetId?: boolean
    type?: boolean
    url?: boolean
    fileName?: boolean
    fileSize?: boolean
    filePath?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    meta?: boolean
  }

  export type DocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "type" | "url" | "fileName" | "fileSize" | "filePath" | "mimeType" | "createdAt" | "updatedAt" | "meta", ExtArgs["result"]["document"]>
  export type DocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type DocumentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type DocumentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }

  export type $DocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Document"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      type: $Enums.DocumentType
      url: string
      fileName: string | null
      fileSize: number | null
      filePath: string | null
      mimeType: string | null
      createdAt: Date
      updatedAt: Date
      meta: Prisma.JsonValue | null
    }, ExtArgs["result"]["document"]>
    composites: {}
  }

  type DocumentGetPayload<S extends boolean | null | undefined | DocumentDefaultArgs> = $Result.GetResult<Prisma.$DocumentPayload, S>

  type DocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DocumentCountAggregateInputType | true
    }

  export interface DocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Document'], meta: { name: 'Document' } }
    /**
     * Find zero or one Document that matches the filter.
     * @param {DocumentFindUniqueArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DocumentFindUniqueArgs>(args: SelectSubset<T, DocumentFindUniqueArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Document that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DocumentFindUniqueOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, DocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DocumentFindFirstArgs>(args?: SelectSubset<T, DocumentFindFirstArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindFirstOrThrowArgs} args - Arguments to find a Document
     * @example
     * // Get one Document
     * const document = await prisma.document.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, DocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Documents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Documents
     * const documents = await prisma.document.findMany()
     * 
     * // Get first 10 Documents
     * const documents = await prisma.document.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const documentWithIdOnly = await prisma.document.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DocumentFindManyArgs>(args?: SelectSubset<T, DocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Document.
     * @param {DocumentCreateArgs} args - Arguments to create a Document.
     * @example
     * // Create one Document
     * const Document = await prisma.document.create({
     *   data: {
     *     // ... data to create a Document
     *   }
     * })
     * 
     */
    create<T extends DocumentCreateArgs>(args: SelectSubset<T, DocumentCreateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Documents.
     * @param {DocumentCreateManyArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DocumentCreateManyArgs>(args?: SelectSubset<T, DocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Documents and returns the data saved in the database.
     * @param {DocumentCreateManyAndReturnArgs} args - Arguments to create many Documents.
     * @example
     * // Create many Documents
     * const document = await prisma.document.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Documents and only return the `id`
     * const documentWithIdOnly = await prisma.document.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DocumentCreateManyAndReturnArgs>(args?: SelectSubset<T, DocumentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Document.
     * @param {DocumentDeleteArgs} args - Arguments to delete one Document.
     * @example
     * // Delete one Document
     * const Document = await prisma.document.delete({
     *   where: {
     *     // ... filter to delete one Document
     *   }
     * })
     * 
     */
    delete<T extends DocumentDeleteArgs>(args: SelectSubset<T, DocumentDeleteArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Document.
     * @param {DocumentUpdateArgs} args - Arguments to update one Document.
     * @example
     * // Update one Document
     * const document = await prisma.document.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DocumentUpdateArgs>(args: SelectSubset<T, DocumentUpdateArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Documents.
     * @param {DocumentDeleteManyArgs} args - Arguments to filter Documents to delete.
     * @example
     * // Delete a few Documents
     * const { count } = await prisma.document.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DocumentDeleteManyArgs>(args?: SelectSubset<T, DocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DocumentUpdateManyArgs>(args: SelectSubset<T, DocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Documents and returns the data updated in the database.
     * @param {DocumentUpdateManyAndReturnArgs} args - Arguments to update many Documents.
     * @example
     * // Update many Documents
     * const document = await prisma.document.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Documents and only return the `id`
     * const documentWithIdOnly = await prisma.document.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DocumentUpdateManyAndReturnArgs>(args: SelectSubset<T, DocumentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Document.
     * @param {DocumentUpsertArgs} args - Arguments to update or create a Document.
     * @example
     * // Update or create a Document
     * const document = await prisma.document.upsert({
     *   create: {
     *     // ... data to create a Document
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document we want to update
     *   }
     * })
     */
    upsert<T extends DocumentUpsertArgs>(args: SelectSubset<T, DocumentUpsertArgs<ExtArgs>>): Prisma__DocumentClient<$Result.GetResult<Prisma.$DocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Documents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentCountArgs} args - Arguments to filter Documents to count.
     * @example
     * // Count the number of Documents
     * const count = await prisma.document.count({
     *   where: {
     *     // ... the filter for the Documents we want to count
     *   }
     * })
    **/
    count<T extends DocumentCountArgs>(
      args?: Subset<T, DocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DocumentAggregateArgs>(args: Subset<T, DocumentAggregateArgs>): Prisma.PrismaPromise<GetDocumentAggregateType<T>>

    /**
     * Group by Document.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DocumentGroupByArgs['orderBy'] }
        : { orderBy?: DocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Document model
   */
  readonly fields: DocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Document.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Document model
   */
  interface DocumentFieldRefs {
    readonly id: FieldRef<"Document", 'String'>
    readonly assetId: FieldRef<"Document", 'String'>
    readonly type: FieldRef<"Document", 'DocumentType'>
    readonly url: FieldRef<"Document", 'String'>
    readonly fileName: FieldRef<"Document", 'String'>
    readonly fileSize: FieldRef<"Document", 'Int'>
    readonly filePath: FieldRef<"Document", 'String'>
    readonly mimeType: FieldRef<"Document", 'String'>
    readonly createdAt: FieldRef<"Document", 'DateTime'>
    readonly updatedAt: FieldRef<"Document", 'DateTime'>
    readonly meta: FieldRef<"Document", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * Document findUnique
   */
  export type DocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findUniqueOrThrow
   */
  export type DocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document findFirst
   */
  export type DocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findFirstOrThrow
   */
  export type DocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Document to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Documents.
     */
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document findMany
   */
  export type DocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter, which Documents to fetch.
     */
    where?: DocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Documents to fetch.
     */
    orderBy?: DocumentOrderByWithRelationInput | DocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Documents.
     */
    cursor?: DocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Documents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Documents.
     */
    skip?: number
    distinct?: DocumentScalarFieldEnum | DocumentScalarFieldEnum[]
  }

  /**
   * Document create
   */
  export type DocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a Document.
     */
    data: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
  }

  /**
   * Document createMany
   */
  export type DocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Document createManyAndReturn
   */
  export type DocumentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * The data used to create many Documents.
     */
    data: DocumentCreateManyInput | DocumentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Document update
   */
  export type DocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a Document.
     */
    data: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
    /**
     * Choose, which Document to update.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document updateMany
   */
  export type DocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Documents.
     */
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyInput>
    /**
     * Filter which Documents to update
     */
    where?: DocumentWhereInput
    /**
     * Limit how many Documents to update.
     */
    limit?: number
  }

  /**
   * Document updateManyAndReturn
   */
  export type DocumentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * The data used to update Documents.
     */
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyInput>
    /**
     * Filter which Documents to update
     */
    where?: DocumentWhereInput
    /**
     * Limit how many Documents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Document upsert
   */
  export type DocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the Document to update in case it exists.
     */
    where: DocumentWhereUniqueInput
    /**
     * In case the Document found by the `where` argument doesn't exist, create a new Document with this data.
     */
    create: XOR<DocumentCreateInput, DocumentUncheckedCreateInput>
    /**
     * In case the Document was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DocumentUpdateInput, DocumentUncheckedUpdateInput>
  }

  /**
   * Document delete
   */
  export type DocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
    /**
     * Filter which Document to delete.
     */
    where: DocumentWhereUniqueInput
  }

  /**
   * Document deleteMany
   */
  export type DocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Documents to delete
     */
    where?: DocumentWhereInput
    /**
     * Limit how many Documents to delete.
     */
    limit?: number
  }

  /**
   * Document without action
   */
  export type DocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Document
     */
    select?: DocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Document
     */
    omit?: DocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DocumentInclude<ExtArgs> | null
  }


  /**
   * Model Depreciation
   */

  export type AggregateDepreciation = {
    _count: DepreciationCountAggregateOutputType | null
    _avg: DepreciationAvgAggregateOutputType | null
    _sum: DepreciationSumAggregateOutputType | null
    _min: DepreciationMinAggregateOutputType | null
    _max: DepreciationMaxAggregateOutputType | null
  }

  export type DepreciationAvgAggregateOutputType = {
    amount: number | null
    depreciationRate: number | null
    salvageValue: number | null
    usefulLife: number | null
  }

  export type DepreciationSumAggregateOutputType = {
    amount: number | null
    depreciationRate: number | null
    salvageValue: number | null
    usefulLife: number | null
  }

  export type DepreciationMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    amount: number | null
    date: Date | null
    createdAt: Date | null
    depreciationRate: number | null
    description: string | null
    method: string | null
    salvageValue: number | null
    updatedAt: Date | null
    usefulLife: number | null
  }

  export type DepreciationMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    amount: number | null
    date: Date | null
    createdAt: Date | null
    depreciationRate: number | null
    description: string | null
    method: string | null
    salvageValue: number | null
    updatedAt: Date | null
    usefulLife: number | null
  }

  export type DepreciationCountAggregateOutputType = {
    id: number
    assetId: number
    amount: number
    date: number
    createdAt: number
    depreciationRate: number
    description: number
    method: number
    salvageValue: number
    updatedAt: number
    usefulLife: number
    _all: number
  }


  export type DepreciationAvgAggregateInputType = {
    amount?: true
    depreciationRate?: true
    salvageValue?: true
    usefulLife?: true
  }

  export type DepreciationSumAggregateInputType = {
    amount?: true
    depreciationRate?: true
    salvageValue?: true
    usefulLife?: true
  }

  export type DepreciationMinAggregateInputType = {
    id?: true
    assetId?: true
    amount?: true
    date?: true
    createdAt?: true
    depreciationRate?: true
    description?: true
    method?: true
    salvageValue?: true
    updatedAt?: true
    usefulLife?: true
  }

  export type DepreciationMaxAggregateInputType = {
    id?: true
    assetId?: true
    amount?: true
    date?: true
    createdAt?: true
    depreciationRate?: true
    description?: true
    method?: true
    salvageValue?: true
    updatedAt?: true
    usefulLife?: true
  }

  export type DepreciationCountAggregateInputType = {
    id?: true
    assetId?: true
    amount?: true
    date?: true
    createdAt?: true
    depreciationRate?: true
    description?: true
    method?: true
    salvageValue?: true
    updatedAt?: true
    usefulLife?: true
    _all?: true
  }

  export type DepreciationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Depreciation to aggregate.
     */
    where?: DepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depreciations to fetch.
     */
    orderBy?: DepreciationOrderByWithRelationInput | DepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depreciations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Depreciations
    **/
    _count?: true | DepreciationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DepreciationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DepreciationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DepreciationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DepreciationMaxAggregateInputType
  }

  export type GetDepreciationAggregateType<T extends DepreciationAggregateArgs> = {
        [P in keyof T & keyof AggregateDepreciation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDepreciation[P]>
      : GetScalarType<T[P], AggregateDepreciation[P]>
  }




  export type DepreciationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DepreciationWhereInput
    orderBy?: DepreciationOrderByWithAggregationInput | DepreciationOrderByWithAggregationInput[]
    by: DepreciationScalarFieldEnum[] | DepreciationScalarFieldEnum
    having?: DepreciationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DepreciationCountAggregateInputType | true
    _avg?: DepreciationAvgAggregateInputType
    _sum?: DepreciationSumAggregateInputType
    _min?: DepreciationMinAggregateInputType
    _max?: DepreciationMaxAggregateInputType
  }

  export type DepreciationGroupByOutputType = {
    id: string
    assetId: string
    amount: number
    date: Date
    createdAt: Date
    depreciationRate: number
    description: string | null
    method: string
    salvageValue: number
    updatedAt: Date
    usefulLife: number
    _count: DepreciationCountAggregateOutputType | null
    _avg: DepreciationAvgAggregateOutputType | null
    _sum: DepreciationSumAggregateOutputType | null
    _min: DepreciationMinAggregateOutputType | null
    _max: DepreciationMaxAggregateOutputType | null
  }

  type GetDepreciationGroupByPayload<T extends DepreciationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DepreciationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DepreciationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DepreciationGroupByOutputType[P]>
            : GetScalarType<T[P], DepreciationGroupByOutputType[P]>
        }
      >
    >


  export type DepreciationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    depreciationRate?: boolean
    description?: boolean
    method?: boolean
    salvageValue?: boolean
    updatedAt?: boolean
    usefulLife?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depreciation"]>

  export type DepreciationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    depreciationRate?: boolean
    description?: boolean
    method?: boolean
    salvageValue?: boolean
    updatedAt?: boolean
    usefulLife?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depreciation"]>

  export type DepreciationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    depreciationRate?: boolean
    description?: boolean
    method?: boolean
    salvageValue?: boolean
    updatedAt?: boolean
    usefulLife?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["depreciation"]>

  export type DepreciationSelectScalar = {
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    createdAt?: boolean
    depreciationRate?: boolean
    description?: boolean
    method?: boolean
    salvageValue?: boolean
    updatedAt?: boolean
    usefulLife?: boolean
  }

  export type DepreciationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "amount" | "date" | "createdAt" | "depreciationRate" | "description" | "method" | "salvageValue" | "updatedAt" | "usefulLife", ExtArgs["result"]["depreciation"]>
  export type DepreciationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type DepreciationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type DepreciationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }

  export type $DepreciationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Depreciation"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      amount: number
      date: Date
      createdAt: Date
      depreciationRate: number
      description: string | null
      method: string
      salvageValue: number
      updatedAt: Date
      usefulLife: number
    }, ExtArgs["result"]["depreciation"]>
    composites: {}
  }

  type DepreciationGetPayload<S extends boolean | null | undefined | DepreciationDefaultArgs> = $Result.GetResult<Prisma.$DepreciationPayload, S>

  type DepreciationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DepreciationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DepreciationCountAggregateInputType | true
    }

  export interface DepreciationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Depreciation'], meta: { name: 'Depreciation' } }
    /**
     * Find zero or one Depreciation that matches the filter.
     * @param {DepreciationFindUniqueArgs} args - Arguments to find a Depreciation
     * @example
     * // Get one Depreciation
     * const depreciation = await prisma.depreciation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DepreciationFindUniqueArgs>(args: SelectSubset<T, DepreciationFindUniqueArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Depreciation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DepreciationFindUniqueOrThrowArgs} args - Arguments to find a Depreciation
     * @example
     * // Get one Depreciation
     * const depreciation = await prisma.depreciation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DepreciationFindUniqueOrThrowArgs>(args: SelectSubset<T, DepreciationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Depreciation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationFindFirstArgs} args - Arguments to find a Depreciation
     * @example
     * // Get one Depreciation
     * const depreciation = await prisma.depreciation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DepreciationFindFirstArgs>(args?: SelectSubset<T, DepreciationFindFirstArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Depreciation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationFindFirstOrThrowArgs} args - Arguments to find a Depreciation
     * @example
     * // Get one Depreciation
     * const depreciation = await prisma.depreciation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DepreciationFindFirstOrThrowArgs>(args?: SelectSubset<T, DepreciationFindFirstOrThrowArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Depreciations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Depreciations
     * const depreciations = await prisma.depreciation.findMany()
     * 
     * // Get first 10 Depreciations
     * const depreciations = await prisma.depreciation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const depreciationWithIdOnly = await prisma.depreciation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DepreciationFindManyArgs>(args?: SelectSubset<T, DepreciationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Depreciation.
     * @param {DepreciationCreateArgs} args - Arguments to create a Depreciation.
     * @example
     * // Create one Depreciation
     * const Depreciation = await prisma.depreciation.create({
     *   data: {
     *     // ... data to create a Depreciation
     *   }
     * })
     * 
     */
    create<T extends DepreciationCreateArgs>(args: SelectSubset<T, DepreciationCreateArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Depreciations.
     * @param {DepreciationCreateManyArgs} args - Arguments to create many Depreciations.
     * @example
     * // Create many Depreciations
     * const depreciation = await prisma.depreciation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DepreciationCreateManyArgs>(args?: SelectSubset<T, DepreciationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Depreciations and returns the data saved in the database.
     * @param {DepreciationCreateManyAndReturnArgs} args - Arguments to create many Depreciations.
     * @example
     * // Create many Depreciations
     * const depreciation = await prisma.depreciation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Depreciations and only return the `id`
     * const depreciationWithIdOnly = await prisma.depreciation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DepreciationCreateManyAndReturnArgs>(args?: SelectSubset<T, DepreciationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Depreciation.
     * @param {DepreciationDeleteArgs} args - Arguments to delete one Depreciation.
     * @example
     * // Delete one Depreciation
     * const Depreciation = await prisma.depreciation.delete({
     *   where: {
     *     // ... filter to delete one Depreciation
     *   }
     * })
     * 
     */
    delete<T extends DepreciationDeleteArgs>(args: SelectSubset<T, DepreciationDeleteArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Depreciation.
     * @param {DepreciationUpdateArgs} args - Arguments to update one Depreciation.
     * @example
     * // Update one Depreciation
     * const depreciation = await prisma.depreciation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DepreciationUpdateArgs>(args: SelectSubset<T, DepreciationUpdateArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Depreciations.
     * @param {DepreciationDeleteManyArgs} args - Arguments to filter Depreciations to delete.
     * @example
     * // Delete a few Depreciations
     * const { count } = await prisma.depreciation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DepreciationDeleteManyArgs>(args?: SelectSubset<T, DepreciationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Depreciations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Depreciations
     * const depreciation = await prisma.depreciation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DepreciationUpdateManyArgs>(args: SelectSubset<T, DepreciationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Depreciations and returns the data updated in the database.
     * @param {DepreciationUpdateManyAndReturnArgs} args - Arguments to update many Depreciations.
     * @example
     * // Update many Depreciations
     * const depreciation = await prisma.depreciation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Depreciations and only return the `id`
     * const depreciationWithIdOnly = await prisma.depreciation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DepreciationUpdateManyAndReturnArgs>(args: SelectSubset<T, DepreciationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Depreciation.
     * @param {DepreciationUpsertArgs} args - Arguments to update or create a Depreciation.
     * @example
     * // Update or create a Depreciation
     * const depreciation = await prisma.depreciation.upsert({
     *   create: {
     *     // ... data to create a Depreciation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Depreciation we want to update
     *   }
     * })
     */
    upsert<T extends DepreciationUpsertArgs>(args: SelectSubset<T, DepreciationUpsertArgs<ExtArgs>>): Prisma__DepreciationClient<$Result.GetResult<Prisma.$DepreciationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Depreciations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationCountArgs} args - Arguments to filter Depreciations to count.
     * @example
     * // Count the number of Depreciations
     * const count = await prisma.depreciation.count({
     *   where: {
     *     // ... the filter for the Depreciations we want to count
     *   }
     * })
    **/
    count<T extends DepreciationCountArgs>(
      args?: Subset<T, DepreciationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DepreciationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Depreciation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DepreciationAggregateArgs>(args: Subset<T, DepreciationAggregateArgs>): Prisma.PrismaPromise<GetDepreciationAggregateType<T>>

    /**
     * Group by Depreciation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DepreciationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DepreciationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DepreciationGroupByArgs['orderBy'] }
        : { orderBy?: DepreciationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DepreciationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDepreciationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Depreciation model
   */
  readonly fields: DepreciationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Depreciation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DepreciationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Depreciation model
   */
  interface DepreciationFieldRefs {
    readonly id: FieldRef<"Depreciation", 'String'>
    readonly assetId: FieldRef<"Depreciation", 'String'>
    readonly amount: FieldRef<"Depreciation", 'Float'>
    readonly date: FieldRef<"Depreciation", 'DateTime'>
    readonly createdAt: FieldRef<"Depreciation", 'DateTime'>
    readonly depreciationRate: FieldRef<"Depreciation", 'Float'>
    readonly description: FieldRef<"Depreciation", 'String'>
    readonly method: FieldRef<"Depreciation", 'String'>
    readonly salvageValue: FieldRef<"Depreciation", 'Float'>
    readonly updatedAt: FieldRef<"Depreciation", 'DateTime'>
    readonly usefulLife: FieldRef<"Depreciation", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Depreciation findUnique
   */
  export type DepreciationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * Filter, which Depreciation to fetch.
     */
    where: DepreciationWhereUniqueInput
  }

  /**
   * Depreciation findUniqueOrThrow
   */
  export type DepreciationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * Filter, which Depreciation to fetch.
     */
    where: DepreciationWhereUniqueInput
  }

  /**
   * Depreciation findFirst
   */
  export type DepreciationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * Filter, which Depreciation to fetch.
     */
    where?: DepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depreciations to fetch.
     */
    orderBy?: DepreciationOrderByWithRelationInput | DepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Depreciations.
     */
    cursor?: DepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depreciations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Depreciations.
     */
    distinct?: DepreciationScalarFieldEnum | DepreciationScalarFieldEnum[]
  }

  /**
   * Depreciation findFirstOrThrow
   */
  export type DepreciationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * Filter, which Depreciation to fetch.
     */
    where?: DepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depreciations to fetch.
     */
    orderBy?: DepreciationOrderByWithRelationInput | DepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Depreciations.
     */
    cursor?: DepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depreciations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Depreciations.
     */
    distinct?: DepreciationScalarFieldEnum | DepreciationScalarFieldEnum[]
  }

  /**
   * Depreciation findMany
   */
  export type DepreciationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * Filter, which Depreciations to fetch.
     */
    where?: DepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Depreciations to fetch.
     */
    orderBy?: DepreciationOrderByWithRelationInput | DepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Depreciations.
     */
    cursor?: DepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Depreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Depreciations.
     */
    skip?: number
    distinct?: DepreciationScalarFieldEnum | DepreciationScalarFieldEnum[]
  }

  /**
   * Depreciation create
   */
  export type DepreciationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * The data needed to create a Depreciation.
     */
    data: XOR<DepreciationCreateInput, DepreciationUncheckedCreateInput>
  }

  /**
   * Depreciation createMany
   */
  export type DepreciationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Depreciations.
     */
    data: DepreciationCreateManyInput | DepreciationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Depreciation createManyAndReturn
   */
  export type DepreciationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * The data used to create many Depreciations.
     */
    data: DepreciationCreateManyInput | DepreciationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Depreciation update
   */
  export type DepreciationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * The data needed to update a Depreciation.
     */
    data: XOR<DepreciationUpdateInput, DepreciationUncheckedUpdateInput>
    /**
     * Choose, which Depreciation to update.
     */
    where: DepreciationWhereUniqueInput
  }

  /**
   * Depreciation updateMany
   */
  export type DepreciationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Depreciations.
     */
    data: XOR<DepreciationUpdateManyMutationInput, DepreciationUncheckedUpdateManyInput>
    /**
     * Filter which Depreciations to update
     */
    where?: DepreciationWhereInput
    /**
     * Limit how many Depreciations to update.
     */
    limit?: number
  }

  /**
   * Depreciation updateManyAndReturn
   */
  export type DepreciationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * The data used to update Depreciations.
     */
    data: XOR<DepreciationUpdateManyMutationInput, DepreciationUncheckedUpdateManyInput>
    /**
     * Filter which Depreciations to update
     */
    where?: DepreciationWhereInput
    /**
     * Limit how many Depreciations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Depreciation upsert
   */
  export type DepreciationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * The filter to search for the Depreciation to update in case it exists.
     */
    where: DepreciationWhereUniqueInput
    /**
     * In case the Depreciation found by the `where` argument doesn't exist, create a new Depreciation with this data.
     */
    create: XOR<DepreciationCreateInput, DepreciationUncheckedCreateInput>
    /**
     * In case the Depreciation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DepreciationUpdateInput, DepreciationUncheckedUpdateInput>
  }

  /**
   * Depreciation delete
   */
  export type DepreciationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
    /**
     * Filter which Depreciation to delete.
     */
    where: DepreciationWhereUniqueInput
  }

  /**
   * Depreciation deleteMany
   */
  export type DepreciationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Depreciations to delete
     */
    where?: DepreciationWhereInput
    /**
     * Limit how many Depreciations to delete.
     */
    limit?: number
  }

  /**
   * Depreciation without action
   */
  export type DepreciationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Depreciation
     */
    select?: DepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Depreciation
     */
    omit?: DepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DepreciationInclude<ExtArgs> | null
  }


  /**
   * Model AssetDepreciation
   */

  export type AggregateAssetDepreciation = {
    _count: AssetDepreciationCountAggregateOutputType | null
    _avg: AssetDepreciationAvgAggregateOutputType | null
    _sum: AssetDepreciationSumAggregateOutputType | null
    _min: AssetDepreciationMinAggregateOutputType | null
    _max: AssetDepreciationMaxAggregateOutputType | null
  }

  export type AssetDepreciationAvgAggregateOutputType = {
    amount: number | null
    usefulLife: number | null
    salvageValue: number | null
    depreciationRate: number | null
  }

  export type AssetDepreciationSumAggregateOutputType = {
    amount: number | null
    usefulLife: number | null
    salvageValue: number | null
    depreciationRate: number | null
  }

  export type AssetDepreciationMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    amount: number | null
    date: Date | null
    method: string | null
    usefulLife: number | null
    salvageValue: number | null
    depreciationRate: number | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AssetDepreciationMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    amount: number | null
    date: Date | null
    method: string | null
    usefulLife: number | null
    salvageValue: number | null
    depreciationRate: number | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AssetDepreciationCountAggregateOutputType = {
    id: number
    assetId: number
    amount: number
    date: number
    method: number
    usefulLife: number
    salvageValue: number
    depreciationRate: number
    description: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AssetDepreciationAvgAggregateInputType = {
    amount?: true
    usefulLife?: true
    salvageValue?: true
    depreciationRate?: true
  }

  export type AssetDepreciationSumAggregateInputType = {
    amount?: true
    usefulLife?: true
    salvageValue?: true
    depreciationRate?: true
  }

  export type AssetDepreciationMinAggregateInputType = {
    id?: true
    assetId?: true
    amount?: true
    date?: true
    method?: true
    usefulLife?: true
    salvageValue?: true
    depreciationRate?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AssetDepreciationMaxAggregateInputType = {
    id?: true
    assetId?: true
    amount?: true
    date?: true
    method?: true
    usefulLife?: true
    salvageValue?: true
    depreciationRate?: true
    description?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AssetDepreciationCountAggregateInputType = {
    id?: true
    assetId?: true
    amount?: true
    date?: true
    method?: true
    usefulLife?: true
    salvageValue?: true
    depreciationRate?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AssetDepreciationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssetDepreciation to aggregate.
     */
    where?: AssetDepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetDepreciations to fetch.
     */
    orderBy?: AssetDepreciationOrderByWithRelationInput | AssetDepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssetDepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetDepreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetDepreciations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AssetDepreciations
    **/
    _count?: true | AssetDepreciationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AssetDepreciationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AssetDepreciationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssetDepreciationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssetDepreciationMaxAggregateInputType
  }

  export type GetAssetDepreciationAggregateType<T extends AssetDepreciationAggregateArgs> = {
        [P in keyof T & keyof AggregateAssetDepreciation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssetDepreciation[P]>
      : GetScalarType<T[P], AggregateAssetDepreciation[P]>
  }




  export type AssetDepreciationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetDepreciationWhereInput
    orderBy?: AssetDepreciationOrderByWithAggregationInput | AssetDepreciationOrderByWithAggregationInput[]
    by: AssetDepreciationScalarFieldEnum[] | AssetDepreciationScalarFieldEnum
    having?: AssetDepreciationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssetDepreciationCountAggregateInputType | true
    _avg?: AssetDepreciationAvgAggregateInputType
    _sum?: AssetDepreciationSumAggregateInputType
    _min?: AssetDepreciationMinAggregateInputType
    _max?: AssetDepreciationMaxAggregateInputType
  }

  export type AssetDepreciationGroupByOutputType = {
    id: string
    assetId: string
    amount: number
    date: Date
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate: number | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    _count: AssetDepreciationCountAggregateOutputType | null
    _avg: AssetDepreciationAvgAggregateOutputType | null
    _sum: AssetDepreciationSumAggregateOutputType | null
    _min: AssetDepreciationMinAggregateOutputType | null
    _max: AssetDepreciationMaxAggregateOutputType | null
  }

  type GetAssetDepreciationGroupByPayload<T extends AssetDepreciationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssetDepreciationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssetDepreciationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssetDepreciationGroupByOutputType[P]>
            : GetScalarType<T[P], AssetDepreciationGroupByOutputType[P]>
        }
      >
    >


  export type AssetDepreciationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    usefulLife?: boolean
    salvageValue?: boolean
    depreciationRate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assetDepreciation"]>

  export type AssetDepreciationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    usefulLife?: boolean
    salvageValue?: boolean
    depreciationRate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assetDepreciation"]>

  export type AssetDepreciationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    usefulLife?: boolean
    salvageValue?: boolean
    depreciationRate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assetDepreciation"]>

  export type AssetDepreciationSelectScalar = {
    id?: boolean
    assetId?: boolean
    amount?: boolean
    date?: boolean
    method?: boolean
    usefulLife?: boolean
    salvageValue?: boolean
    depreciationRate?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AssetDepreciationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "amount" | "date" | "method" | "usefulLife" | "salvageValue" | "depreciationRate" | "description" | "createdAt" | "updatedAt", ExtArgs["result"]["assetDepreciation"]>
  export type AssetDepreciationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type AssetDepreciationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type AssetDepreciationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }

  export type $AssetDepreciationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AssetDepreciation"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      amount: number
      date: Date
      method: string
      usefulLife: number
      salvageValue: number
      depreciationRate: number | null
      description: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["assetDepreciation"]>
    composites: {}
  }

  type AssetDepreciationGetPayload<S extends boolean | null | undefined | AssetDepreciationDefaultArgs> = $Result.GetResult<Prisma.$AssetDepreciationPayload, S>

  type AssetDepreciationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssetDepreciationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssetDepreciationCountAggregateInputType | true
    }

  export interface AssetDepreciationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AssetDepreciation'], meta: { name: 'AssetDepreciation' } }
    /**
     * Find zero or one AssetDepreciation that matches the filter.
     * @param {AssetDepreciationFindUniqueArgs} args - Arguments to find a AssetDepreciation
     * @example
     * // Get one AssetDepreciation
     * const assetDepreciation = await prisma.assetDepreciation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssetDepreciationFindUniqueArgs>(args: SelectSubset<T, AssetDepreciationFindUniqueArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AssetDepreciation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssetDepreciationFindUniqueOrThrowArgs} args - Arguments to find a AssetDepreciation
     * @example
     * // Get one AssetDepreciation
     * const assetDepreciation = await prisma.assetDepreciation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssetDepreciationFindUniqueOrThrowArgs>(args: SelectSubset<T, AssetDepreciationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssetDepreciation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationFindFirstArgs} args - Arguments to find a AssetDepreciation
     * @example
     * // Get one AssetDepreciation
     * const assetDepreciation = await prisma.assetDepreciation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssetDepreciationFindFirstArgs>(args?: SelectSubset<T, AssetDepreciationFindFirstArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssetDepreciation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationFindFirstOrThrowArgs} args - Arguments to find a AssetDepreciation
     * @example
     * // Get one AssetDepreciation
     * const assetDepreciation = await prisma.assetDepreciation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssetDepreciationFindFirstOrThrowArgs>(args?: SelectSubset<T, AssetDepreciationFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AssetDepreciations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AssetDepreciations
     * const assetDepreciations = await prisma.assetDepreciation.findMany()
     * 
     * // Get first 10 AssetDepreciations
     * const assetDepreciations = await prisma.assetDepreciation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assetDepreciationWithIdOnly = await prisma.assetDepreciation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssetDepreciationFindManyArgs>(args?: SelectSubset<T, AssetDepreciationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AssetDepreciation.
     * @param {AssetDepreciationCreateArgs} args - Arguments to create a AssetDepreciation.
     * @example
     * // Create one AssetDepreciation
     * const AssetDepreciation = await prisma.assetDepreciation.create({
     *   data: {
     *     // ... data to create a AssetDepreciation
     *   }
     * })
     * 
     */
    create<T extends AssetDepreciationCreateArgs>(args: SelectSubset<T, AssetDepreciationCreateArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AssetDepreciations.
     * @param {AssetDepreciationCreateManyArgs} args - Arguments to create many AssetDepreciations.
     * @example
     * // Create many AssetDepreciations
     * const assetDepreciation = await prisma.assetDepreciation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssetDepreciationCreateManyArgs>(args?: SelectSubset<T, AssetDepreciationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AssetDepreciations and returns the data saved in the database.
     * @param {AssetDepreciationCreateManyAndReturnArgs} args - Arguments to create many AssetDepreciations.
     * @example
     * // Create many AssetDepreciations
     * const assetDepreciation = await prisma.assetDepreciation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AssetDepreciations and only return the `id`
     * const assetDepreciationWithIdOnly = await prisma.assetDepreciation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssetDepreciationCreateManyAndReturnArgs>(args?: SelectSubset<T, AssetDepreciationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AssetDepreciation.
     * @param {AssetDepreciationDeleteArgs} args - Arguments to delete one AssetDepreciation.
     * @example
     * // Delete one AssetDepreciation
     * const AssetDepreciation = await prisma.assetDepreciation.delete({
     *   where: {
     *     // ... filter to delete one AssetDepreciation
     *   }
     * })
     * 
     */
    delete<T extends AssetDepreciationDeleteArgs>(args: SelectSubset<T, AssetDepreciationDeleteArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AssetDepreciation.
     * @param {AssetDepreciationUpdateArgs} args - Arguments to update one AssetDepreciation.
     * @example
     * // Update one AssetDepreciation
     * const assetDepreciation = await prisma.assetDepreciation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssetDepreciationUpdateArgs>(args: SelectSubset<T, AssetDepreciationUpdateArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AssetDepreciations.
     * @param {AssetDepreciationDeleteManyArgs} args - Arguments to filter AssetDepreciations to delete.
     * @example
     * // Delete a few AssetDepreciations
     * const { count } = await prisma.assetDepreciation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssetDepreciationDeleteManyArgs>(args?: SelectSubset<T, AssetDepreciationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssetDepreciations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AssetDepreciations
     * const assetDepreciation = await prisma.assetDepreciation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssetDepreciationUpdateManyArgs>(args: SelectSubset<T, AssetDepreciationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssetDepreciations and returns the data updated in the database.
     * @param {AssetDepreciationUpdateManyAndReturnArgs} args - Arguments to update many AssetDepreciations.
     * @example
     * // Update many AssetDepreciations
     * const assetDepreciation = await prisma.assetDepreciation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AssetDepreciations and only return the `id`
     * const assetDepreciationWithIdOnly = await prisma.assetDepreciation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssetDepreciationUpdateManyAndReturnArgs>(args: SelectSubset<T, AssetDepreciationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AssetDepreciation.
     * @param {AssetDepreciationUpsertArgs} args - Arguments to update or create a AssetDepreciation.
     * @example
     * // Update or create a AssetDepreciation
     * const assetDepreciation = await prisma.assetDepreciation.upsert({
     *   create: {
     *     // ... data to create a AssetDepreciation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AssetDepreciation we want to update
     *   }
     * })
     */
    upsert<T extends AssetDepreciationUpsertArgs>(args: SelectSubset<T, AssetDepreciationUpsertArgs<ExtArgs>>): Prisma__AssetDepreciationClient<$Result.GetResult<Prisma.$AssetDepreciationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AssetDepreciations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationCountArgs} args - Arguments to filter AssetDepreciations to count.
     * @example
     * // Count the number of AssetDepreciations
     * const count = await prisma.assetDepreciation.count({
     *   where: {
     *     // ... the filter for the AssetDepreciations we want to count
     *   }
     * })
    **/
    count<T extends AssetDepreciationCountArgs>(
      args?: Subset<T, AssetDepreciationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssetDepreciationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AssetDepreciation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssetDepreciationAggregateArgs>(args: Subset<T, AssetDepreciationAggregateArgs>): Prisma.PrismaPromise<GetAssetDepreciationAggregateType<T>>

    /**
     * Group by AssetDepreciation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetDepreciationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssetDepreciationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssetDepreciationGroupByArgs['orderBy'] }
        : { orderBy?: AssetDepreciationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssetDepreciationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssetDepreciationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AssetDepreciation model
   */
  readonly fields: AssetDepreciationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AssetDepreciation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssetDepreciationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AssetDepreciation model
   */
  interface AssetDepreciationFieldRefs {
    readonly id: FieldRef<"AssetDepreciation", 'String'>
    readonly assetId: FieldRef<"AssetDepreciation", 'String'>
    readonly amount: FieldRef<"AssetDepreciation", 'Float'>
    readonly date: FieldRef<"AssetDepreciation", 'DateTime'>
    readonly method: FieldRef<"AssetDepreciation", 'String'>
    readonly usefulLife: FieldRef<"AssetDepreciation", 'Int'>
    readonly salvageValue: FieldRef<"AssetDepreciation", 'Float'>
    readonly depreciationRate: FieldRef<"AssetDepreciation", 'Float'>
    readonly description: FieldRef<"AssetDepreciation", 'String'>
    readonly createdAt: FieldRef<"AssetDepreciation", 'DateTime'>
    readonly updatedAt: FieldRef<"AssetDepreciation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AssetDepreciation findUnique
   */
  export type AssetDepreciationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * Filter, which AssetDepreciation to fetch.
     */
    where: AssetDepreciationWhereUniqueInput
  }

  /**
   * AssetDepreciation findUniqueOrThrow
   */
  export type AssetDepreciationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * Filter, which AssetDepreciation to fetch.
     */
    where: AssetDepreciationWhereUniqueInput
  }

  /**
   * AssetDepreciation findFirst
   */
  export type AssetDepreciationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * Filter, which AssetDepreciation to fetch.
     */
    where?: AssetDepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetDepreciations to fetch.
     */
    orderBy?: AssetDepreciationOrderByWithRelationInput | AssetDepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssetDepreciations.
     */
    cursor?: AssetDepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetDepreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetDepreciations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssetDepreciations.
     */
    distinct?: AssetDepreciationScalarFieldEnum | AssetDepreciationScalarFieldEnum[]
  }

  /**
   * AssetDepreciation findFirstOrThrow
   */
  export type AssetDepreciationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * Filter, which AssetDepreciation to fetch.
     */
    where?: AssetDepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetDepreciations to fetch.
     */
    orderBy?: AssetDepreciationOrderByWithRelationInput | AssetDepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssetDepreciations.
     */
    cursor?: AssetDepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetDepreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetDepreciations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssetDepreciations.
     */
    distinct?: AssetDepreciationScalarFieldEnum | AssetDepreciationScalarFieldEnum[]
  }

  /**
   * AssetDepreciation findMany
   */
  export type AssetDepreciationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * Filter, which AssetDepreciations to fetch.
     */
    where?: AssetDepreciationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetDepreciations to fetch.
     */
    orderBy?: AssetDepreciationOrderByWithRelationInput | AssetDepreciationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AssetDepreciations.
     */
    cursor?: AssetDepreciationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetDepreciations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetDepreciations.
     */
    skip?: number
    distinct?: AssetDepreciationScalarFieldEnum | AssetDepreciationScalarFieldEnum[]
  }

  /**
   * AssetDepreciation create
   */
  export type AssetDepreciationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * The data needed to create a AssetDepreciation.
     */
    data: XOR<AssetDepreciationCreateInput, AssetDepreciationUncheckedCreateInput>
  }

  /**
   * AssetDepreciation createMany
   */
  export type AssetDepreciationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AssetDepreciations.
     */
    data: AssetDepreciationCreateManyInput | AssetDepreciationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssetDepreciation createManyAndReturn
   */
  export type AssetDepreciationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * The data used to create many AssetDepreciations.
     */
    data: AssetDepreciationCreateManyInput | AssetDepreciationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssetDepreciation update
   */
  export type AssetDepreciationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * The data needed to update a AssetDepreciation.
     */
    data: XOR<AssetDepreciationUpdateInput, AssetDepreciationUncheckedUpdateInput>
    /**
     * Choose, which AssetDepreciation to update.
     */
    where: AssetDepreciationWhereUniqueInput
  }

  /**
   * AssetDepreciation updateMany
   */
  export type AssetDepreciationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AssetDepreciations.
     */
    data: XOR<AssetDepreciationUpdateManyMutationInput, AssetDepreciationUncheckedUpdateManyInput>
    /**
     * Filter which AssetDepreciations to update
     */
    where?: AssetDepreciationWhereInput
    /**
     * Limit how many AssetDepreciations to update.
     */
    limit?: number
  }

  /**
   * AssetDepreciation updateManyAndReturn
   */
  export type AssetDepreciationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * The data used to update AssetDepreciations.
     */
    data: XOR<AssetDepreciationUpdateManyMutationInput, AssetDepreciationUncheckedUpdateManyInput>
    /**
     * Filter which AssetDepreciations to update
     */
    where?: AssetDepreciationWhereInput
    /**
     * Limit how many AssetDepreciations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssetDepreciation upsert
   */
  export type AssetDepreciationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * The filter to search for the AssetDepreciation to update in case it exists.
     */
    where: AssetDepreciationWhereUniqueInput
    /**
     * In case the AssetDepreciation found by the `where` argument doesn't exist, create a new AssetDepreciation with this data.
     */
    create: XOR<AssetDepreciationCreateInput, AssetDepreciationUncheckedCreateInput>
    /**
     * In case the AssetDepreciation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssetDepreciationUpdateInput, AssetDepreciationUncheckedUpdateInput>
  }

  /**
   * AssetDepreciation delete
   */
  export type AssetDepreciationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
    /**
     * Filter which AssetDepreciation to delete.
     */
    where: AssetDepreciationWhereUniqueInput
  }

  /**
   * AssetDepreciation deleteMany
   */
  export type AssetDepreciationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssetDepreciations to delete
     */
    where?: AssetDepreciationWhereInput
    /**
     * Limit how many AssetDepreciations to delete.
     */
    limit?: number
  }

  /**
   * AssetDepreciation without action
   */
  export type AssetDepreciationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetDepreciation
     */
    select?: AssetDepreciationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetDepreciation
     */
    omit?: AssetDepreciationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetDepreciationInclude<ExtArgs> | null
  }


  /**
   * Model AssetHistory
   */

  export type AggregateAssetHistory = {
    _count: AssetHistoryCountAggregateOutputType | null
    _min: AssetHistoryMinAggregateOutputType | null
    _max: AssetHistoryMaxAggregateOutputType | null
  }

  export type AssetHistoryMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    field: string | null
    oldValue: string | null
    newValue: string | null
    changedAt: Date | null
    changedBy: string | null
  }

  export type AssetHistoryMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    field: string | null
    oldValue: string | null
    newValue: string | null
    changedAt: Date | null
    changedBy: string | null
  }

  export type AssetHistoryCountAggregateOutputType = {
    id: number
    assetId: number
    field: number
    oldValue: number
    newValue: number
    changedAt: number
    changedBy: number
    _all: number
  }


  export type AssetHistoryMinAggregateInputType = {
    id?: true
    assetId?: true
    field?: true
    oldValue?: true
    newValue?: true
    changedAt?: true
    changedBy?: true
  }

  export type AssetHistoryMaxAggregateInputType = {
    id?: true
    assetId?: true
    field?: true
    oldValue?: true
    newValue?: true
    changedAt?: true
    changedBy?: true
  }

  export type AssetHistoryCountAggregateInputType = {
    id?: true
    assetId?: true
    field?: true
    oldValue?: true
    newValue?: true
    changedAt?: true
    changedBy?: true
    _all?: true
  }

  export type AssetHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssetHistory to aggregate.
     */
    where?: AssetHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetHistories to fetch.
     */
    orderBy?: AssetHistoryOrderByWithRelationInput | AssetHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssetHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AssetHistories
    **/
    _count?: true | AssetHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssetHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssetHistoryMaxAggregateInputType
  }

  export type GetAssetHistoryAggregateType<T extends AssetHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateAssetHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssetHistory[P]>
      : GetScalarType<T[P], AggregateAssetHistory[P]>
  }




  export type AssetHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetHistoryWhereInput
    orderBy?: AssetHistoryOrderByWithAggregationInput | AssetHistoryOrderByWithAggregationInput[]
    by: AssetHistoryScalarFieldEnum[] | AssetHistoryScalarFieldEnum
    having?: AssetHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssetHistoryCountAggregateInputType | true
    _min?: AssetHistoryMinAggregateInputType
    _max?: AssetHistoryMaxAggregateInputType
  }

  export type AssetHistoryGroupByOutputType = {
    id: string
    assetId: string
    field: string
    oldValue: string | null
    newValue: string | null
    changedAt: Date
    changedBy: string | null
    _count: AssetHistoryCountAggregateOutputType | null
    _min: AssetHistoryMinAggregateOutputType | null
    _max: AssetHistoryMaxAggregateOutputType | null
  }

  type GetAssetHistoryGroupByPayload<T extends AssetHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssetHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssetHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssetHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], AssetHistoryGroupByOutputType[P]>
        }
      >
    >


  export type AssetHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    field?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedAt?: boolean
    changedBy?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assetHistory"]>

  export type AssetHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    field?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedAt?: boolean
    changedBy?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assetHistory"]>

  export type AssetHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    field?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedAt?: boolean
    changedBy?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["assetHistory"]>

  export type AssetHistorySelectScalar = {
    id?: boolean
    assetId?: boolean
    field?: boolean
    oldValue?: boolean
    newValue?: boolean
    changedAt?: boolean
    changedBy?: boolean
  }

  export type AssetHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "field" | "oldValue" | "newValue" | "changedAt" | "changedBy", ExtArgs["result"]["assetHistory"]>
  export type AssetHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type AssetHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type AssetHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }

  export type $AssetHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AssetHistory"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      field: string
      oldValue: string | null
      newValue: string | null
      changedAt: Date
      changedBy: string | null
    }, ExtArgs["result"]["assetHistory"]>
    composites: {}
  }

  type AssetHistoryGetPayload<S extends boolean | null | undefined | AssetHistoryDefaultArgs> = $Result.GetResult<Prisma.$AssetHistoryPayload, S>

  type AssetHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssetHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssetHistoryCountAggregateInputType | true
    }

  export interface AssetHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AssetHistory'], meta: { name: 'AssetHistory' } }
    /**
     * Find zero or one AssetHistory that matches the filter.
     * @param {AssetHistoryFindUniqueArgs} args - Arguments to find a AssetHistory
     * @example
     * // Get one AssetHistory
     * const assetHistory = await prisma.assetHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssetHistoryFindUniqueArgs>(args: SelectSubset<T, AssetHistoryFindUniqueArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AssetHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssetHistoryFindUniqueOrThrowArgs} args - Arguments to find a AssetHistory
     * @example
     * // Get one AssetHistory
     * const assetHistory = await prisma.assetHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssetHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, AssetHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssetHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryFindFirstArgs} args - Arguments to find a AssetHistory
     * @example
     * // Get one AssetHistory
     * const assetHistory = await prisma.assetHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssetHistoryFindFirstArgs>(args?: SelectSubset<T, AssetHistoryFindFirstArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssetHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryFindFirstOrThrowArgs} args - Arguments to find a AssetHistory
     * @example
     * // Get one AssetHistory
     * const assetHistory = await prisma.assetHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssetHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, AssetHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AssetHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AssetHistories
     * const assetHistories = await prisma.assetHistory.findMany()
     * 
     * // Get first 10 AssetHistories
     * const assetHistories = await prisma.assetHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assetHistoryWithIdOnly = await prisma.assetHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssetHistoryFindManyArgs>(args?: SelectSubset<T, AssetHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AssetHistory.
     * @param {AssetHistoryCreateArgs} args - Arguments to create a AssetHistory.
     * @example
     * // Create one AssetHistory
     * const AssetHistory = await prisma.assetHistory.create({
     *   data: {
     *     // ... data to create a AssetHistory
     *   }
     * })
     * 
     */
    create<T extends AssetHistoryCreateArgs>(args: SelectSubset<T, AssetHistoryCreateArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AssetHistories.
     * @param {AssetHistoryCreateManyArgs} args - Arguments to create many AssetHistories.
     * @example
     * // Create many AssetHistories
     * const assetHistory = await prisma.assetHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssetHistoryCreateManyArgs>(args?: SelectSubset<T, AssetHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AssetHistories and returns the data saved in the database.
     * @param {AssetHistoryCreateManyAndReturnArgs} args - Arguments to create many AssetHistories.
     * @example
     * // Create many AssetHistories
     * const assetHistory = await prisma.assetHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AssetHistories and only return the `id`
     * const assetHistoryWithIdOnly = await prisma.assetHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssetHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, AssetHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AssetHistory.
     * @param {AssetHistoryDeleteArgs} args - Arguments to delete one AssetHistory.
     * @example
     * // Delete one AssetHistory
     * const AssetHistory = await prisma.assetHistory.delete({
     *   where: {
     *     // ... filter to delete one AssetHistory
     *   }
     * })
     * 
     */
    delete<T extends AssetHistoryDeleteArgs>(args: SelectSubset<T, AssetHistoryDeleteArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AssetHistory.
     * @param {AssetHistoryUpdateArgs} args - Arguments to update one AssetHistory.
     * @example
     * // Update one AssetHistory
     * const assetHistory = await prisma.assetHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssetHistoryUpdateArgs>(args: SelectSubset<T, AssetHistoryUpdateArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AssetHistories.
     * @param {AssetHistoryDeleteManyArgs} args - Arguments to filter AssetHistories to delete.
     * @example
     * // Delete a few AssetHistories
     * const { count } = await prisma.assetHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssetHistoryDeleteManyArgs>(args?: SelectSubset<T, AssetHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssetHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AssetHistories
     * const assetHistory = await prisma.assetHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssetHistoryUpdateManyArgs>(args: SelectSubset<T, AssetHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssetHistories and returns the data updated in the database.
     * @param {AssetHistoryUpdateManyAndReturnArgs} args - Arguments to update many AssetHistories.
     * @example
     * // Update many AssetHistories
     * const assetHistory = await prisma.assetHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AssetHistories and only return the `id`
     * const assetHistoryWithIdOnly = await prisma.assetHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssetHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, AssetHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AssetHistory.
     * @param {AssetHistoryUpsertArgs} args - Arguments to update or create a AssetHistory.
     * @example
     * // Update or create a AssetHistory
     * const assetHistory = await prisma.assetHistory.upsert({
     *   create: {
     *     // ... data to create a AssetHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AssetHistory we want to update
     *   }
     * })
     */
    upsert<T extends AssetHistoryUpsertArgs>(args: SelectSubset<T, AssetHistoryUpsertArgs<ExtArgs>>): Prisma__AssetHistoryClient<$Result.GetResult<Prisma.$AssetHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AssetHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryCountArgs} args - Arguments to filter AssetHistories to count.
     * @example
     * // Count the number of AssetHistories
     * const count = await prisma.assetHistory.count({
     *   where: {
     *     // ... the filter for the AssetHistories we want to count
     *   }
     * })
    **/
    count<T extends AssetHistoryCountArgs>(
      args?: Subset<T, AssetHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssetHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AssetHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssetHistoryAggregateArgs>(args: Subset<T, AssetHistoryAggregateArgs>): Prisma.PrismaPromise<GetAssetHistoryAggregateType<T>>

    /**
     * Group by AssetHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssetHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssetHistoryGroupByArgs['orderBy'] }
        : { orderBy?: AssetHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssetHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssetHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AssetHistory model
   */
  readonly fields: AssetHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AssetHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssetHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AssetHistory model
   */
  interface AssetHistoryFieldRefs {
    readonly id: FieldRef<"AssetHistory", 'String'>
    readonly assetId: FieldRef<"AssetHistory", 'String'>
    readonly field: FieldRef<"AssetHistory", 'String'>
    readonly oldValue: FieldRef<"AssetHistory", 'String'>
    readonly newValue: FieldRef<"AssetHistory", 'String'>
    readonly changedAt: FieldRef<"AssetHistory", 'DateTime'>
    readonly changedBy: FieldRef<"AssetHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * AssetHistory findUnique
   */
  export type AssetHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * Filter, which AssetHistory to fetch.
     */
    where: AssetHistoryWhereUniqueInput
  }

  /**
   * AssetHistory findUniqueOrThrow
   */
  export type AssetHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * Filter, which AssetHistory to fetch.
     */
    where: AssetHistoryWhereUniqueInput
  }

  /**
   * AssetHistory findFirst
   */
  export type AssetHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * Filter, which AssetHistory to fetch.
     */
    where?: AssetHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetHistories to fetch.
     */
    orderBy?: AssetHistoryOrderByWithRelationInput | AssetHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssetHistories.
     */
    cursor?: AssetHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssetHistories.
     */
    distinct?: AssetHistoryScalarFieldEnum | AssetHistoryScalarFieldEnum[]
  }

  /**
   * AssetHistory findFirstOrThrow
   */
  export type AssetHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * Filter, which AssetHistory to fetch.
     */
    where?: AssetHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetHistories to fetch.
     */
    orderBy?: AssetHistoryOrderByWithRelationInput | AssetHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssetHistories.
     */
    cursor?: AssetHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssetHistories.
     */
    distinct?: AssetHistoryScalarFieldEnum | AssetHistoryScalarFieldEnum[]
  }

  /**
   * AssetHistory findMany
   */
  export type AssetHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * Filter, which AssetHistories to fetch.
     */
    where?: AssetHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetHistories to fetch.
     */
    orderBy?: AssetHistoryOrderByWithRelationInput | AssetHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AssetHistories.
     */
    cursor?: AssetHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetHistories.
     */
    skip?: number
    distinct?: AssetHistoryScalarFieldEnum | AssetHistoryScalarFieldEnum[]
  }

  /**
   * AssetHistory create
   */
  export type AssetHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a AssetHistory.
     */
    data: XOR<AssetHistoryCreateInput, AssetHistoryUncheckedCreateInput>
  }

  /**
   * AssetHistory createMany
   */
  export type AssetHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AssetHistories.
     */
    data: AssetHistoryCreateManyInput | AssetHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssetHistory createManyAndReturn
   */
  export type AssetHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many AssetHistories.
     */
    data: AssetHistoryCreateManyInput | AssetHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssetHistory update
   */
  export type AssetHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a AssetHistory.
     */
    data: XOR<AssetHistoryUpdateInput, AssetHistoryUncheckedUpdateInput>
    /**
     * Choose, which AssetHistory to update.
     */
    where: AssetHistoryWhereUniqueInput
  }

  /**
   * AssetHistory updateMany
   */
  export type AssetHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AssetHistories.
     */
    data: XOR<AssetHistoryUpdateManyMutationInput, AssetHistoryUncheckedUpdateManyInput>
    /**
     * Filter which AssetHistories to update
     */
    where?: AssetHistoryWhereInput
    /**
     * Limit how many AssetHistories to update.
     */
    limit?: number
  }

  /**
   * AssetHistory updateManyAndReturn
   */
  export type AssetHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * The data used to update AssetHistories.
     */
    data: XOR<AssetHistoryUpdateManyMutationInput, AssetHistoryUncheckedUpdateManyInput>
    /**
     * Filter which AssetHistories to update
     */
    where?: AssetHistoryWhereInput
    /**
     * Limit how many AssetHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssetHistory upsert
   */
  export type AssetHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the AssetHistory to update in case it exists.
     */
    where: AssetHistoryWhereUniqueInput
    /**
     * In case the AssetHistory found by the `where` argument doesn't exist, create a new AssetHistory with this data.
     */
    create: XOR<AssetHistoryCreateInput, AssetHistoryUncheckedCreateInput>
    /**
     * In case the AssetHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssetHistoryUpdateInput, AssetHistoryUncheckedUpdateInput>
  }

  /**
   * AssetHistory delete
   */
  export type AssetHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
    /**
     * Filter which AssetHistory to delete.
     */
    where: AssetHistoryWhereUniqueInput
  }

  /**
   * AssetHistory deleteMany
   */
  export type AssetHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssetHistories to delete
     */
    where?: AssetHistoryWhereInput
    /**
     * Limit how many AssetHistories to delete.
     */
    limit?: number
  }

  /**
   * AssetHistory without action
   */
  export type AssetHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetHistory
     */
    select?: AssetHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetHistory
     */
    omit?: AssetHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetHistoryInclude<ExtArgs> | null
  }


  /**
   * Model LinkedAsset
   */

  export type AggregateLinkedAsset = {
    _count: LinkedAssetCountAggregateOutputType | null
    _min: LinkedAssetMinAggregateOutputType | null
    _max: LinkedAssetMaxAggregateOutputType | null
  }

  export type LinkedAssetMinAggregateOutputType = {
    id: string | null
    fromAssetId: string | null
    toAssetId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LinkedAssetMaxAggregateOutputType = {
    id: string | null
    fromAssetId: string | null
    toAssetId: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LinkedAssetCountAggregateOutputType = {
    id: number
    fromAssetId: number
    toAssetId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type LinkedAssetMinAggregateInputType = {
    id?: true
    fromAssetId?: true
    toAssetId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LinkedAssetMaxAggregateInputType = {
    id?: true
    fromAssetId?: true
    toAssetId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LinkedAssetCountAggregateInputType = {
    id?: true
    fromAssetId?: true
    toAssetId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type LinkedAssetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LinkedAsset to aggregate.
     */
    where?: LinkedAssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LinkedAssets to fetch.
     */
    orderBy?: LinkedAssetOrderByWithRelationInput | LinkedAssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LinkedAssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LinkedAssets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LinkedAssets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LinkedAssets
    **/
    _count?: true | LinkedAssetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LinkedAssetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LinkedAssetMaxAggregateInputType
  }

  export type GetLinkedAssetAggregateType<T extends LinkedAssetAggregateArgs> = {
        [P in keyof T & keyof AggregateLinkedAsset]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLinkedAsset[P]>
      : GetScalarType<T[P], AggregateLinkedAsset[P]>
  }




  export type LinkedAssetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LinkedAssetWhereInput
    orderBy?: LinkedAssetOrderByWithAggregationInput | LinkedAssetOrderByWithAggregationInput[]
    by: LinkedAssetScalarFieldEnum[] | LinkedAssetScalarFieldEnum
    having?: LinkedAssetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LinkedAssetCountAggregateInputType | true
    _min?: LinkedAssetMinAggregateInputType
    _max?: LinkedAssetMaxAggregateInputType
  }

  export type LinkedAssetGroupByOutputType = {
    id: string
    fromAssetId: string
    toAssetId: string
    createdAt: Date
    updatedAt: Date
    _count: LinkedAssetCountAggregateOutputType | null
    _min: LinkedAssetMinAggregateOutputType | null
    _max: LinkedAssetMaxAggregateOutputType | null
  }

  type GetLinkedAssetGroupByPayload<T extends LinkedAssetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LinkedAssetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LinkedAssetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LinkedAssetGroupByOutputType[P]>
            : GetScalarType<T[P], LinkedAssetGroupByOutputType[P]>
        }
      >
    >


  export type LinkedAssetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fromAssetId?: boolean
    toAssetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromAsset?: boolean | AssetDefaultArgs<ExtArgs>
    toAsset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["linkedAsset"]>

  export type LinkedAssetSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fromAssetId?: boolean
    toAssetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromAsset?: boolean | AssetDefaultArgs<ExtArgs>
    toAsset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["linkedAsset"]>

  export type LinkedAssetSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fromAssetId?: boolean
    toAssetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    fromAsset?: boolean | AssetDefaultArgs<ExtArgs>
    toAsset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["linkedAsset"]>

  export type LinkedAssetSelectScalar = {
    id?: boolean
    fromAssetId?: boolean
    toAssetId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type LinkedAssetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fromAssetId" | "toAssetId" | "createdAt" | "updatedAt", ExtArgs["result"]["linkedAsset"]>
  export type LinkedAssetInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromAsset?: boolean | AssetDefaultArgs<ExtArgs>
    toAsset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type LinkedAssetIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromAsset?: boolean | AssetDefaultArgs<ExtArgs>
    toAsset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type LinkedAssetIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromAsset?: boolean | AssetDefaultArgs<ExtArgs>
    toAsset?: boolean | AssetDefaultArgs<ExtArgs>
  }

  export type $LinkedAssetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LinkedAsset"
    objects: {
      fromAsset: Prisma.$AssetPayload<ExtArgs>
      toAsset: Prisma.$AssetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fromAssetId: string
      toAssetId: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["linkedAsset"]>
    composites: {}
  }

  type LinkedAssetGetPayload<S extends boolean | null | undefined | LinkedAssetDefaultArgs> = $Result.GetResult<Prisma.$LinkedAssetPayload, S>

  type LinkedAssetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LinkedAssetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LinkedAssetCountAggregateInputType | true
    }

  export interface LinkedAssetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LinkedAsset'], meta: { name: 'LinkedAsset' } }
    /**
     * Find zero or one LinkedAsset that matches the filter.
     * @param {LinkedAssetFindUniqueArgs} args - Arguments to find a LinkedAsset
     * @example
     * // Get one LinkedAsset
     * const linkedAsset = await prisma.linkedAsset.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LinkedAssetFindUniqueArgs>(args: SelectSubset<T, LinkedAssetFindUniqueArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LinkedAsset that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LinkedAssetFindUniqueOrThrowArgs} args - Arguments to find a LinkedAsset
     * @example
     * // Get one LinkedAsset
     * const linkedAsset = await prisma.linkedAsset.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LinkedAssetFindUniqueOrThrowArgs>(args: SelectSubset<T, LinkedAssetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LinkedAsset that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetFindFirstArgs} args - Arguments to find a LinkedAsset
     * @example
     * // Get one LinkedAsset
     * const linkedAsset = await prisma.linkedAsset.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LinkedAssetFindFirstArgs>(args?: SelectSubset<T, LinkedAssetFindFirstArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LinkedAsset that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetFindFirstOrThrowArgs} args - Arguments to find a LinkedAsset
     * @example
     * // Get one LinkedAsset
     * const linkedAsset = await prisma.linkedAsset.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LinkedAssetFindFirstOrThrowArgs>(args?: SelectSubset<T, LinkedAssetFindFirstOrThrowArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LinkedAssets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LinkedAssets
     * const linkedAssets = await prisma.linkedAsset.findMany()
     * 
     * // Get first 10 LinkedAssets
     * const linkedAssets = await prisma.linkedAsset.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const linkedAssetWithIdOnly = await prisma.linkedAsset.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LinkedAssetFindManyArgs>(args?: SelectSubset<T, LinkedAssetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LinkedAsset.
     * @param {LinkedAssetCreateArgs} args - Arguments to create a LinkedAsset.
     * @example
     * // Create one LinkedAsset
     * const LinkedAsset = await prisma.linkedAsset.create({
     *   data: {
     *     // ... data to create a LinkedAsset
     *   }
     * })
     * 
     */
    create<T extends LinkedAssetCreateArgs>(args: SelectSubset<T, LinkedAssetCreateArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LinkedAssets.
     * @param {LinkedAssetCreateManyArgs} args - Arguments to create many LinkedAssets.
     * @example
     * // Create many LinkedAssets
     * const linkedAsset = await prisma.linkedAsset.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LinkedAssetCreateManyArgs>(args?: SelectSubset<T, LinkedAssetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LinkedAssets and returns the data saved in the database.
     * @param {LinkedAssetCreateManyAndReturnArgs} args - Arguments to create many LinkedAssets.
     * @example
     * // Create many LinkedAssets
     * const linkedAsset = await prisma.linkedAsset.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LinkedAssets and only return the `id`
     * const linkedAssetWithIdOnly = await prisma.linkedAsset.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LinkedAssetCreateManyAndReturnArgs>(args?: SelectSubset<T, LinkedAssetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LinkedAsset.
     * @param {LinkedAssetDeleteArgs} args - Arguments to delete one LinkedAsset.
     * @example
     * // Delete one LinkedAsset
     * const LinkedAsset = await prisma.linkedAsset.delete({
     *   where: {
     *     // ... filter to delete one LinkedAsset
     *   }
     * })
     * 
     */
    delete<T extends LinkedAssetDeleteArgs>(args: SelectSubset<T, LinkedAssetDeleteArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LinkedAsset.
     * @param {LinkedAssetUpdateArgs} args - Arguments to update one LinkedAsset.
     * @example
     * // Update one LinkedAsset
     * const linkedAsset = await prisma.linkedAsset.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LinkedAssetUpdateArgs>(args: SelectSubset<T, LinkedAssetUpdateArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LinkedAssets.
     * @param {LinkedAssetDeleteManyArgs} args - Arguments to filter LinkedAssets to delete.
     * @example
     * // Delete a few LinkedAssets
     * const { count } = await prisma.linkedAsset.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LinkedAssetDeleteManyArgs>(args?: SelectSubset<T, LinkedAssetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LinkedAssets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LinkedAssets
     * const linkedAsset = await prisma.linkedAsset.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LinkedAssetUpdateManyArgs>(args: SelectSubset<T, LinkedAssetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LinkedAssets and returns the data updated in the database.
     * @param {LinkedAssetUpdateManyAndReturnArgs} args - Arguments to update many LinkedAssets.
     * @example
     * // Update many LinkedAssets
     * const linkedAsset = await prisma.linkedAsset.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LinkedAssets and only return the `id`
     * const linkedAssetWithIdOnly = await prisma.linkedAsset.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LinkedAssetUpdateManyAndReturnArgs>(args: SelectSubset<T, LinkedAssetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LinkedAsset.
     * @param {LinkedAssetUpsertArgs} args - Arguments to update or create a LinkedAsset.
     * @example
     * // Update or create a LinkedAsset
     * const linkedAsset = await prisma.linkedAsset.upsert({
     *   create: {
     *     // ... data to create a LinkedAsset
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LinkedAsset we want to update
     *   }
     * })
     */
    upsert<T extends LinkedAssetUpsertArgs>(args: SelectSubset<T, LinkedAssetUpsertArgs<ExtArgs>>): Prisma__LinkedAssetClient<$Result.GetResult<Prisma.$LinkedAssetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LinkedAssets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetCountArgs} args - Arguments to filter LinkedAssets to count.
     * @example
     * // Count the number of LinkedAssets
     * const count = await prisma.linkedAsset.count({
     *   where: {
     *     // ... the filter for the LinkedAssets we want to count
     *   }
     * })
    **/
    count<T extends LinkedAssetCountArgs>(
      args?: Subset<T, LinkedAssetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LinkedAssetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LinkedAsset.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LinkedAssetAggregateArgs>(args: Subset<T, LinkedAssetAggregateArgs>): Prisma.PrismaPromise<GetLinkedAssetAggregateType<T>>

    /**
     * Group by LinkedAsset.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkedAssetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LinkedAssetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LinkedAssetGroupByArgs['orderBy'] }
        : { orderBy?: LinkedAssetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LinkedAssetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLinkedAssetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LinkedAsset model
   */
  readonly fields: LinkedAssetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LinkedAsset.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LinkedAssetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    fromAsset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    toAsset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LinkedAsset model
   */
  interface LinkedAssetFieldRefs {
    readonly id: FieldRef<"LinkedAsset", 'String'>
    readonly fromAssetId: FieldRef<"LinkedAsset", 'String'>
    readonly toAssetId: FieldRef<"LinkedAsset", 'String'>
    readonly createdAt: FieldRef<"LinkedAsset", 'DateTime'>
    readonly updatedAt: FieldRef<"LinkedAsset", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LinkedAsset findUnique
   */
  export type LinkedAssetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * Filter, which LinkedAsset to fetch.
     */
    where: LinkedAssetWhereUniqueInput
  }

  /**
   * LinkedAsset findUniqueOrThrow
   */
  export type LinkedAssetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * Filter, which LinkedAsset to fetch.
     */
    where: LinkedAssetWhereUniqueInput
  }

  /**
   * LinkedAsset findFirst
   */
  export type LinkedAssetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * Filter, which LinkedAsset to fetch.
     */
    where?: LinkedAssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LinkedAssets to fetch.
     */
    orderBy?: LinkedAssetOrderByWithRelationInput | LinkedAssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LinkedAssets.
     */
    cursor?: LinkedAssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LinkedAssets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LinkedAssets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LinkedAssets.
     */
    distinct?: LinkedAssetScalarFieldEnum | LinkedAssetScalarFieldEnum[]
  }

  /**
   * LinkedAsset findFirstOrThrow
   */
  export type LinkedAssetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * Filter, which LinkedAsset to fetch.
     */
    where?: LinkedAssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LinkedAssets to fetch.
     */
    orderBy?: LinkedAssetOrderByWithRelationInput | LinkedAssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LinkedAssets.
     */
    cursor?: LinkedAssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LinkedAssets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LinkedAssets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LinkedAssets.
     */
    distinct?: LinkedAssetScalarFieldEnum | LinkedAssetScalarFieldEnum[]
  }

  /**
   * LinkedAsset findMany
   */
  export type LinkedAssetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * Filter, which LinkedAssets to fetch.
     */
    where?: LinkedAssetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LinkedAssets to fetch.
     */
    orderBy?: LinkedAssetOrderByWithRelationInput | LinkedAssetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LinkedAssets.
     */
    cursor?: LinkedAssetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LinkedAssets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LinkedAssets.
     */
    skip?: number
    distinct?: LinkedAssetScalarFieldEnum | LinkedAssetScalarFieldEnum[]
  }

  /**
   * LinkedAsset create
   */
  export type LinkedAssetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * The data needed to create a LinkedAsset.
     */
    data: XOR<LinkedAssetCreateInput, LinkedAssetUncheckedCreateInput>
  }

  /**
   * LinkedAsset createMany
   */
  export type LinkedAssetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LinkedAssets.
     */
    data: LinkedAssetCreateManyInput | LinkedAssetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LinkedAsset createManyAndReturn
   */
  export type LinkedAssetCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * The data used to create many LinkedAssets.
     */
    data: LinkedAssetCreateManyInput | LinkedAssetCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LinkedAsset update
   */
  export type LinkedAssetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * The data needed to update a LinkedAsset.
     */
    data: XOR<LinkedAssetUpdateInput, LinkedAssetUncheckedUpdateInput>
    /**
     * Choose, which LinkedAsset to update.
     */
    where: LinkedAssetWhereUniqueInput
  }

  /**
   * LinkedAsset updateMany
   */
  export type LinkedAssetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LinkedAssets.
     */
    data: XOR<LinkedAssetUpdateManyMutationInput, LinkedAssetUncheckedUpdateManyInput>
    /**
     * Filter which LinkedAssets to update
     */
    where?: LinkedAssetWhereInput
    /**
     * Limit how many LinkedAssets to update.
     */
    limit?: number
  }

  /**
   * LinkedAsset updateManyAndReturn
   */
  export type LinkedAssetUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * The data used to update LinkedAssets.
     */
    data: XOR<LinkedAssetUpdateManyMutationInput, LinkedAssetUncheckedUpdateManyInput>
    /**
     * Filter which LinkedAssets to update
     */
    where?: LinkedAssetWhereInput
    /**
     * Limit how many LinkedAssets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LinkedAsset upsert
   */
  export type LinkedAssetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * The filter to search for the LinkedAsset to update in case it exists.
     */
    where: LinkedAssetWhereUniqueInput
    /**
     * In case the LinkedAsset found by the `where` argument doesn't exist, create a new LinkedAsset with this data.
     */
    create: XOR<LinkedAssetCreateInput, LinkedAssetUncheckedCreateInput>
    /**
     * In case the LinkedAsset was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LinkedAssetUpdateInput, LinkedAssetUncheckedUpdateInput>
  }

  /**
   * LinkedAsset delete
   */
  export type LinkedAssetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
    /**
     * Filter which LinkedAsset to delete.
     */
    where: LinkedAssetWhereUniqueInput
  }

  /**
   * LinkedAsset deleteMany
   */
  export type LinkedAssetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LinkedAssets to delete
     */
    where?: LinkedAssetWhereInput
    /**
     * Limit how many LinkedAssets to delete.
     */
    limit?: number
  }

  /**
   * LinkedAsset without action
   */
  export type LinkedAssetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LinkedAsset
     */
    select?: LinkedAssetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LinkedAsset
     */
    omit?: LinkedAssetOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkedAssetInclude<ExtArgs> | null
  }


  /**
   * Model Permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    name: number
    description: number
    _all: number
  }


  export type PermissionMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permission to aggregate.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type PermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithAggregationInput | PermissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: PermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: string
    name: string
    description: string | null
    _count: PermissionCountAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends PermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type PermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    userPermissions?: boolean | Permission$userPermissionsArgs<ExtArgs>
    rolePermissions?: boolean | Permission$rolePermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
  }

  export type PermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description", ExtArgs["result"]["permission"]>
  export type PermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userPermissions?: boolean | Permission$userPermissionsArgs<ExtArgs>
    rolePermissions?: boolean | Permission$rolePermissionsArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permission"
    objects: {
      userPermissions: Prisma.$UserPermissionPayload<ExtArgs>[]
      rolePermissions: Prisma.$RolePermissionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type PermissionGetPayload<S extends boolean | null | undefined | PermissionDefaultArgs> = $Result.GetResult<Prisma.$PermissionPayload, S>

  type PermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface PermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permission'], meta: { name: 'Permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {PermissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissionFindUniqueArgs>(args: SelectSubset<T, PermissionFindUniqueArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissionFindFirstArgs>(args?: SelectSubset<T, PermissionFindFirstArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissionFindManyArgs>(args?: SelectSubset<T, PermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {PermissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends PermissionCreateArgs>(args: SelectSubset<T, PermissionCreateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {PermissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissionCreateManyArgs>(args?: SelectSubset<T, PermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {PermissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permission.
     * @param {PermissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends PermissionDeleteArgs>(args: SelectSubset<T, PermissionDeleteArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {PermissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissionUpdateArgs>(args: SelectSubset<T, PermissionUpdateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {PermissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissionDeleteManyArgs>(args?: SelectSubset<T, PermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissionUpdateManyArgs>(args: SelectSubset<T, PermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {PermissionUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permission.
     * @param {PermissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends PermissionUpsertArgs>(args: SelectSubset<T, PermissionUpsertArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends PermissionCountArgs>(
      args?: Subset<T, PermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionGroupByArgs['orderBy'] }
        : { orderBy?: PermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permission model
   */
  readonly fields: PermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userPermissions<T extends Permission$userPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Permission$userPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    rolePermissions<T extends Permission$rolePermissionsArgs<ExtArgs> = {}>(args?: Subset<T, Permission$rolePermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permission model
   */
  interface PermissionFieldRefs {
    readonly id: FieldRef<"Permission", 'String'>
    readonly name: FieldRef<"Permission", 'String'>
    readonly description: FieldRef<"Permission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Permission findUnique
   */
  export type PermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findUniqueOrThrow
   */
  export type PermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findFirst
   */
  export type PermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findFirstOrThrow
   */
  export type PermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findMany
   */
  export type PermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permissions to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission create
   */
  export type PermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Permission.
     */
    data: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
  }

  /**
   * Permission createMany
   */
  export type PermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission createManyAndReturn
   */
  export type PermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission update
   */
  export type PermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Permission.
     */
    data: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
    /**
     * Choose, which Permission to update.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission updateMany
   */
  export type PermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission updateManyAndReturn
   */
  export type PermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission upsert
   */
  export type PermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Permission to update in case it exists.
     */
    where: PermissionWhereUniqueInput
    /**
     * In case the Permission found by the `where` argument doesn't exist, create a new Permission with this data.
     */
    create: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
    /**
     * In case the Permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
  }

  /**
   * Permission delete
   */
  export type PermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter which Permission to delete.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission deleteMany
   */
  export type PermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissions to delete
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to delete.
     */
    limit?: number
  }

  /**
   * Permission.userPermissions
   */
  export type Permission$userPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    where?: UserPermissionWhereInput
    orderBy?: UserPermissionOrderByWithRelationInput | UserPermissionOrderByWithRelationInput[]
    cursor?: UserPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserPermissionScalarFieldEnum | UserPermissionScalarFieldEnum[]
  }

  /**
   * Permission.rolePermissions
   */
  export type Permission$rolePermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    cursor?: RolePermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * Permission without action
   */
  export type PermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
  }


  /**
   * Model UserPermission
   */

  export type AggregateUserPermission = {
    _count: UserPermissionCountAggregateOutputType | null
    _min: UserPermissionMinAggregateOutputType | null
    _max: UserPermissionMaxAggregateOutputType | null
  }

  export type UserPermissionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    permissionId: string | null
    granted: boolean | null
    createdAt: Date | null
  }

  export type UserPermissionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    permissionId: string | null
    granted: boolean | null
    createdAt: Date | null
  }

  export type UserPermissionCountAggregateOutputType = {
    id: number
    userId: number
    permissionId: number
    granted: number
    createdAt: number
    _all: number
  }


  export type UserPermissionMinAggregateInputType = {
    id?: true
    userId?: true
    permissionId?: true
    granted?: true
    createdAt?: true
  }

  export type UserPermissionMaxAggregateInputType = {
    id?: true
    userId?: true
    permissionId?: true
    granted?: true
    createdAt?: true
  }

  export type UserPermissionCountAggregateInputType = {
    id?: true
    userId?: true
    permissionId?: true
    granted?: true
    createdAt?: true
    _all?: true
  }

  export type UserPermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserPermission to aggregate.
     */
    where?: UserPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPermissions to fetch.
     */
    orderBy?: UserPermissionOrderByWithRelationInput | UserPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserPermissions
    **/
    _count?: true | UserPermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserPermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserPermissionMaxAggregateInputType
  }

  export type GetUserPermissionAggregateType<T extends UserPermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserPermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserPermission[P]>
      : GetScalarType<T[P], AggregateUserPermission[P]>
  }




  export type UserPermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserPermissionWhereInput
    orderBy?: UserPermissionOrderByWithAggregationInput | UserPermissionOrderByWithAggregationInput[]
    by: UserPermissionScalarFieldEnum[] | UserPermissionScalarFieldEnum
    having?: UserPermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserPermissionCountAggregateInputType | true
    _min?: UserPermissionMinAggregateInputType
    _max?: UserPermissionMaxAggregateInputType
  }

  export type UserPermissionGroupByOutputType = {
    id: string
    userId: string
    permissionId: string
    granted: boolean
    createdAt: Date
    _count: UserPermissionCountAggregateOutputType | null
    _min: UserPermissionMinAggregateOutputType | null
    _max: UserPermissionMaxAggregateOutputType | null
  }

  type GetUserPermissionGroupByPayload<T extends UserPermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserPermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserPermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserPermissionGroupByOutputType[P]>
            : GetScalarType<T[P], UserPermissionGroupByOutputType[P]>
        }
      >
    >


  export type UserPermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    permissionId?: boolean
    granted?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPermission"]>

  export type UserPermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    permissionId?: boolean
    granted?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPermission"]>

  export type UserPermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    permissionId?: boolean
    granted?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userPermission"]>

  export type UserPermissionSelectScalar = {
    id?: boolean
    userId?: boolean
    permissionId?: boolean
    granted?: boolean
    createdAt?: boolean
  }

  export type UserPermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "permissionId" | "granted" | "createdAt", ExtArgs["result"]["userPermission"]>
  export type UserPermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }
  export type UserPermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }
  export type UserPermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }

  export type $UserPermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserPermission"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      permission: Prisma.$PermissionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      permissionId: string
      granted: boolean
      createdAt: Date
    }, ExtArgs["result"]["userPermission"]>
    composites: {}
  }

  type UserPermissionGetPayload<S extends boolean | null | undefined | UserPermissionDefaultArgs> = $Result.GetResult<Prisma.$UserPermissionPayload, S>

  type UserPermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserPermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserPermissionCountAggregateInputType | true
    }

  export interface UserPermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserPermission'], meta: { name: 'UserPermission' } }
    /**
     * Find zero or one UserPermission that matches the filter.
     * @param {UserPermissionFindUniqueArgs} args - Arguments to find a UserPermission
     * @example
     * // Get one UserPermission
     * const userPermission = await prisma.userPermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserPermissionFindUniqueArgs>(args: SelectSubset<T, UserPermissionFindUniqueArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserPermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserPermissionFindUniqueOrThrowArgs} args - Arguments to find a UserPermission
     * @example
     * // Get one UserPermission
     * const userPermission = await prisma.userPermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserPermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserPermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserPermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionFindFirstArgs} args - Arguments to find a UserPermission
     * @example
     * // Get one UserPermission
     * const userPermission = await prisma.userPermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserPermissionFindFirstArgs>(args?: SelectSubset<T, UserPermissionFindFirstArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserPermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionFindFirstOrThrowArgs} args - Arguments to find a UserPermission
     * @example
     * // Get one UserPermission
     * const userPermission = await prisma.userPermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserPermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserPermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserPermissions
     * const userPermissions = await prisma.userPermission.findMany()
     * 
     * // Get first 10 UserPermissions
     * const userPermissions = await prisma.userPermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userPermissionWithIdOnly = await prisma.userPermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserPermissionFindManyArgs>(args?: SelectSubset<T, UserPermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserPermission.
     * @param {UserPermissionCreateArgs} args - Arguments to create a UserPermission.
     * @example
     * // Create one UserPermission
     * const UserPermission = await prisma.userPermission.create({
     *   data: {
     *     // ... data to create a UserPermission
     *   }
     * })
     * 
     */
    create<T extends UserPermissionCreateArgs>(args: SelectSubset<T, UserPermissionCreateArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserPermissions.
     * @param {UserPermissionCreateManyArgs} args - Arguments to create many UserPermissions.
     * @example
     * // Create many UserPermissions
     * const userPermission = await prisma.userPermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserPermissionCreateManyArgs>(args?: SelectSubset<T, UserPermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserPermissions and returns the data saved in the database.
     * @param {UserPermissionCreateManyAndReturnArgs} args - Arguments to create many UserPermissions.
     * @example
     * // Create many UserPermissions
     * const userPermission = await prisma.userPermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserPermissions and only return the `id`
     * const userPermissionWithIdOnly = await prisma.userPermission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserPermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserPermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserPermission.
     * @param {UserPermissionDeleteArgs} args - Arguments to delete one UserPermission.
     * @example
     * // Delete one UserPermission
     * const UserPermission = await prisma.userPermission.delete({
     *   where: {
     *     // ... filter to delete one UserPermission
     *   }
     * })
     * 
     */
    delete<T extends UserPermissionDeleteArgs>(args: SelectSubset<T, UserPermissionDeleteArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserPermission.
     * @param {UserPermissionUpdateArgs} args - Arguments to update one UserPermission.
     * @example
     * // Update one UserPermission
     * const userPermission = await prisma.userPermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserPermissionUpdateArgs>(args: SelectSubset<T, UserPermissionUpdateArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserPermissions.
     * @param {UserPermissionDeleteManyArgs} args - Arguments to filter UserPermissions to delete.
     * @example
     * // Delete a few UserPermissions
     * const { count } = await prisma.userPermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserPermissionDeleteManyArgs>(args?: SelectSubset<T, UserPermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserPermissions
     * const userPermission = await prisma.userPermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserPermissionUpdateManyArgs>(args: SelectSubset<T, UserPermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserPermissions and returns the data updated in the database.
     * @param {UserPermissionUpdateManyAndReturnArgs} args - Arguments to update many UserPermissions.
     * @example
     * // Update many UserPermissions
     * const userPermission = await prisma.userPermission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserPermissions and only return the `id`
     * const userPermissionWithIdOnly = await prisma.userPermission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserPermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, UserPermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserPermission.
     * @param {UserPermissionUpsertArgs} args - Arguments to update or create a UserPermission.
     * @example
     * // Update or create a UserPermission
     * const userPermission = await prisma.userPermission.upsert({
     *   create: {
     *     // ... data to create a UserPermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserPermission we want to update
     *   }
     * })
     */
    upsert<T extends UserPermissionUpsertArgs>(args: SelectSubset<T, UserPermissionUpsertArgs<ExtArgs>>): Prisma__UserPermissionClient<$Result.GetResult<Prisma.$UserPermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionCountArgs} args - Arguments to filter UserPermissions to count.
     * @example
     * // Count the number of UserPermissions
     * const count = await prisma.userPermission.count({
     *   where: {
     *     // ... the filter for the UserPermissions we want to count
     *   }
     * })
    **/
    count<T extends UserPermissionCountArgs>(
      args?: Subset<T, UserPermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserPermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserPermissionAggregateArgs>(args: Subset<T, UserPermissionAggregateArgs>): Prisma.PrismaPromise<GetUserPermissionAggregateType<T>>

    /**
     * Group by UserPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserPermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserPermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserPermissionGroupByArgs['orderBy'] }
        : { orderBy?: UserPermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserPermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserPermission model
   */
  readonly fields: UserPermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserPermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserPermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    permission<T extends PermissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissionDefaultArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserPermission model
   */
  interface UserPermissionFieldRefs {
    readonly id: FieldRef<"UserPermission", 'String'>
    readonly userId: FieldRef<"UserPermission", 'String'>
    readonly permissionId: FieldRef<"UserPermission", 'String'>
    readonly granted: FieldRef<"UserPermission", 'Boolean'>
    readonly createdAt: FieldRef<"UserPermission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserPermission findUnique
   */
  export type UserPermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * Filter, which UserPermission to fetch.
     */
    where: UserPermissionWhereUniqueInput
  }

  /**
   * UserPermission findUniqueOrThrow
   */
  export type UserPermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * Filter, which UserPermission to fetch.
     */
    where: UserPermissionWhereUniqueInput
  }

  /**
   * UserPermission findFirst
   */
  export type UserPermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * Filter, which UserPermission to fetch.
     */
    where?: UserPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPermissions to fetch.
     */
    orderBy?: UserPermissionOrderByWithRelationInput | UserPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserPermissions.
     */
    cursor?: UserPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserPermissions.
     */
    distinct?: UserPermissionScalarFieldEnum | UserPermissionScalarFieldEnum[]
  }

  /**
   * UserPermission findFirstOrThrow
   */
  export type UserPermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * Filter, which UserPermission to fetch.
     */
    where?: UserPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPermissions to fetch.
     */
    orderBy?: UserPermissionOrderByWithRelationInput | UserPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserPermissions.
     */
    cursor?: UserPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserPermissions.
     */
    distinct?: UserPermissionScalarFieldEnum | UserPermissionScalarFieldEnum[]
  }

  /**
   * UserPermission findMany
   */
  export type UserPermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * Filter, which UserPermissions to fetch.
     */
    where?: UserPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserPermissions to fetch.
     */
    orderBy?: UserPermissionOrderByWithRelationInput | UserPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserPermissions.
     */
    cursor?: UserPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserPermissions.
     */
    skip?: number
    distinct?: UserPermissionScalarFieldEnum | UserPermissionScalarFieldEnum[]
  }

  /**
   * UserPermission create
   */
  export type UserPermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserPermission.
     */
    data: XOR<UserPermissionCreateInput, UserPermissionUncheckedCreateInput>
  }

  /**
   * UserPermission createMany
   */
  export type UserPermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserPermissions.
     */
    data: UserPermissionCreateManyInput | UserPermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserPermission createManyAndReturn
   */
  export type UserPermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * The data used to create many UserPermissions.
     */
    data: UserPermissionCreateManyInput | UserPermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserPermission update
   */
  export type UserPermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserPermission.
     */
    data: XOR<UserPermissionUpdateInput, UserPermissionUncheckedUpdateInput>
    /**
     * Choose, which UserPermission to update.
     */
    where: UserPermissionWhereUniqueInput
  }

  /**
   * UserPermission updateMany
   */
  export type UserPermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserPermissions.
     */
    data: XOR<UserPermissionUpdateManyMutationInput, UserPermissionUncheckedUpdateManyInput>
    /**
     * Filter which UserPermissions to update
     */
    where?: UserPermissionWhereInput
    /**
     * Limit how many UserPermissions to update.
     */
    limit?: number
  }

  /**
   * UserPermission updateManyAndReturn
   */
  export type UserPermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * The data used to update UserPermissions.
     */
    data: XOR<UserPermissionUpdateManyMutationInput, UserPermissionUncheckedUpdateManyInput>
    /**
     * Filter which UserPermissions to update
     */
    where?: UserPermissionWhereInput
    /**
     * Limit how many UserPermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserPermission upsert
   */
  export type UserPermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserPermission to update in case it exists.
     */
    where: UserPermissionWhereUniqueInput
    /**
     * In case the UserPermission found by the `where` argument doesn't exist, create a new UserPermission with this data.
     */
    create: XOR<UserPermissionCreateInput, UserPermissionUncheckedCreateInput>
    /**
     * In case the UserPermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserPermissionUpdateInput, UserPermissionUncheckedUpdateInput>
  }

  /**
   * UserPermission delete
   */
  export type UserPermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
    /**
     * Filter which UserPermission to delete.
     */
    where: UserPermissionWhereUniqueInput
  }

  /**
   * UserPermission deleteMany
   */
  export type UserPermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserPermissions to delete
     */
    where?: UserPermissionWhereInput
    /**
     * Limit how many UserPermissions to delete.
     */
    limit?: number
  }

  /**
   * UserPermission without action
   */
  export type UserPermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserPermission
     */
    select?: UserPermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserPermission
     */
    omit?: UserPermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserPermissionInclude<ExtArgs> | null
  }


  /**
   * Model RolePermission
   */

  export type AggregateRolePermission = {
    _count: RolePermissionCountAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  export type RolePermissionMinAggregateOutputType = {
    id: string | null
    role: $Enums.Role | null
    permissionId: string | null
  }

  export type RolePermissionMaxAggregateOutputType = {
    id: string | null
    role: $Enums.Role | null
    permissionId: string | null
  }

  export type RolePermissionCountAggregateOutputType = {
    id: number
    role: number
    permissionId: number
    _all: number
  }


  export type RolePermissionMinAggregateInputType = {
    id?: true
    role?: true
    permissionId?: true
  }

  export type RolePermissionMaxAggregateInputType = {
    id?: true
    role?: true
    permissionId?: true
  }

  export type RolePermissionCountAggregateInputType = {
    id?: true
    role?: true
    permissionId?: true
    _all?: true
  }

  export type RolePermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermission to aggregate.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RolePermissions
    **/
    _count?: true | RolePermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolePermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolePermissionMaxAggregateInputType
  }

  export type GetRolePermissionAggregateType<T extends RolePermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateRolePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRolePermission[P]>
      : GetScalarType<T[P], AggregateRolePermission[P]>
  }




  export type RolePermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RolePermissionWhereInput
    orderBy?: RolePermissionOrderByWithAggregationInput | RolePermissionOrderByWithAggregationInput[]
    by: RolePermissionScalarFieldEnum[] | RolePermissionScalarFieldEnum
    having?: RolePermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolePermissionCountAggregateInputType | true
    _min?: RolePermissionMinAggregateInputType
    _max?: RolePermissionMaxAggregateInputType
  }

  export type RolePermissionGroupByOutputType = {
    id: string
    role: $Enums.Role
    permissionId: string
    _count: RolePermissionCountAggregateOutputType | null
    _min: RolePermissionMinAggregateOutputType | null
    _max: RolePermissionMaxAggregateOutputType | null
  }

  type GetRolePermissionGroupByPayload<T extends RolePermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolePermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolePermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
            : GetScalarType<T[P], RolePermissionGroupByOutputType[P]>
        }
      >
    >


  export type RolePermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    permissionId?: boolean
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    permissionId?: boolean
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    permissionId?: boolean
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rolePermission"]>

  export type RolePermissionSelectScalar = {
    id?: boolean
    role?: boolean
    permissionId?: boolean
  }

  export type RolePermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "role" | "permissionId", ExtArgs["result"]["rolePermission"]>
  export type RolePermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }
  export type RolePermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }
  export type RolePermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permission?: boolean | PermissionDefaultArgs<ExtArgs>
  }

  export type $RolePermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RolePermission"
    objects: {
      permission: Prisma.$PermissionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      role: $Enums.Role
      permissionId: string
    }, ExtArgs["result"]["rolePermission"]>
    composites: {}
  }

  type RolePermissionGetPayload<S extends boolean | null | undefined | RolePermissionDefaultArgs> = $Result.GetResult<Prisma.$RolePermissionPayload, S>

  type RolePermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RolePermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolePermissionCountAggregateInputType | true
    }

  export interface RolePermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RolePermission'], meta: { name: 'RolePermission' } }
    /**
     * Find zero or one RolePermission that matches the filter.
     * @param {RolePermissionFindUniqueArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RolePermissionFindUniqueArgs>(args: SelectSubset<T, RolePermissionFindUniqueArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RolePermission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RolePermissionFindUniqueOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RolePermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, RolePermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolePermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RolePermissionFindFirstArgs>(args?: SelectSubset<T, RolePermissionFindFirstArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RolePermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindFirstOrThrowArgs} args - Arguments to find a RolePermission
     * @example
     * // Get one RolePermission
     * const rolePermission = await prisma.rolePermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RolePermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, RolePermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RolePermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany()
     * 
     * // Get first 10 RolePermissions
     * const rolePermissions = await prisma.rolePermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RolePermissionFindManyArgs>(args?: SelectSubset<T, RolePermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RolePermission.
     * @param {RolePermissionCreateArgs} args - Arguments to create a RolePermission.
     * @example
     * // Create one RolePermission
     * const RolePermission = await prisma.rolePermission.create({
     *   data: {
     *     // ... data to create a RolePermission
     *   }
     * })
     * 
     */
    create<T extends RolePermissionCreateArgs>(args: SelectSubset<T, RolePermissionCreateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RolePermissions.
     * @param {RolePermissionCreateManyArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RolePermissionCreateManyArgs>(args?: SelectSubset<T, RolePermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RolePermissions and returns the data saved in the database.
     * @param {RolePermissionCreateManyAndReturnArgs} args - Arguments to create many RolePermissions.
     * @example
     * // Create many RolePermissions
     * const rolePermission = await prisma.rolePermission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RolePermissions and only return the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RolePermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, RolePermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RolePermission.
     * @param {RolePermissionDeleteArgs} args - Arguments to delete one RolePermission.
     * @example
     * // Delete one RolePermission
     * const RolePermission = await prisma.rolePermission.delete({
     *   where: {
     *     // ... filter to delete one RolePermission
     *   }
     * })
     * 
     */
    delete<T extends RolePermissionDeleteArgs>(args: SelectSubset<T, RolePermissionDeleteArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RolePermission.
     * @param {RolePermissionUpdateArgs} args - Arguments to update one RolePermission.
     * @example
     * // Update one RolePermission
     * const rolePermission = await prisma.rolePermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RolePermissionUpdateArgs>(args: SelectSubset<T, RolePermissionUpdateArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RolePermissions.
     * @param {RolePermissionDeleteManyArgs} args - Arguments to filter RolePermissions to delete.
     * @example
     * // Delete a few RolePermissions
     * const { count } = await prisma.rolePermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RolePermissionDeleteManyArgs>(args?: SelectSubset<T, RolePermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RolePermissionUpdateManyArgs>(args: SelectSubset<T, RolePermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RolePermissions and returns the data updated in the database.
     * @param {RolePermissionUpdateManyAndReturnArgs} args - Arguments to update many RolePermissions.
     * @example
     * // Update many RolePermissions
     * const rolePermission = await prisma.rolePermission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RolePermissions and only return the `id`
     * const rolePermissionWithIdOnly = await prisma.rolePermission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RolePermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, RolePermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RolePermission.
     * @param {RolePermissionUpsertArgs} args - Arguments to update or create a RolePermission.
     * @example
     * // Update or create a RolePermission
     * const rolePermission = await prisma.rolePermission.upsert({
     *   create: {
     *     // ... data to create a RolePermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RolePermission we want to update
     *   }
     * })
     */
    upsert<T extends RolePermissionUpsertArgs>(args: SelectSubset<T, RolePermissionUpsertArgs<ExtArgs>>): Prisma__RolePermissionClient<$Result.GetResult<Prisma.$RolePermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RolePermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionCountArgs} args - Arguments to filter RolePermissions to count.
     * @example
     * // Count the number of RolePermissions
     * const count = await prisma.rolePermission.count({
     *   where: {
     *     // ... the filter for the RolePermissions we want to count
     *   }
     * })
    **/
    count<T extends RolePermissionCountArgs>(
      args?: Subset<T, RolePermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolePermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolePermissionAggregateArgs>(args: Subset<T, RolePermissionAggregateArgs>): Prisma.PrismaPromise<GetRolePermissionAggregateType<T>>

    /**
     * Group by RolePermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolePermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RolePermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RolePermissionGroupByArgs['orderBy'] }
        : { orderBy?: RolePermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RolePermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolePermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RolePermission model
   */
  readonly fields: RolePermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RolePermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RolePermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permission<T extends PermissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PermissionDefaultArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RolePermission model
   */
  interface RolePermissionFieldRefs {
    readonly id: FieldRef<"RolePermission", 'String'>
    readonly role: FieldRef<"RolePermission", 'Role'>
    readonly permissionId: FieldRef<"RolePermission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * RolePermission findUnique
   */
  export type RolePermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findUniqueOrThrow
   */
  export type RolePermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission findFirst
   */
  export type RolePermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findFirstOrThrow
   */
  export type RolePermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermission to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RolePermissions.
     */
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission findMany
   */
  export type RolePermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter, which RolePermissions to fetch.
     */
    where?: RolePermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RolePermissions to fetch.
     */
    orderBy?: RolePermissionOrderByWithRelationInput | RolePermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RolePermissions.
     */
    cursor?: RolePermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RolePermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RolePermissions.
     */
    skip?: number
    distinct?: RolePermissionScalarFieldEnum | RolePermissionScalarFieldEnum[]
  }

  /**
   * RolePermission create
   */
  export type RolePermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a RolePermission.
     */
    data: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
  }

  /**
   * RolePermission createMany
   */
  export type RolePermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RolePermission createManyAndReturn
   */
  export type RolePermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * The data used to create many RolePermissions.
     */
    data: RolePermissionCreateManyInput | RolePermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolePermission update
   */
  export type RolePermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a RolePermission.
     */
    data: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
    /**
     * Choose, which RolePermission to update.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission updateMany
   */
  export type RolePermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RolePermissions.
     */
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to update.
     */
    limit?: number
  }

  /**
   * RolePermission updateManyAndReturn
   */
  export type RolePermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * The data used to update RolePermissions.
     */
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyInput>
    /**
     * Filter which RolePermissions to update
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RolePermission upsert
   */
  export type RolePermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the RolePermission to update in case it exists.
     */
    where: RolePermissionWhereUniqueInput
    /**
     * In case the RolePermission found by the `where` argument doesn't exist, create a new RolePermission with this data.
     */
    create: XOR<RolePermissionCreateInput, RolePermissionUncheckedCreateInput>
    /**
     * In case the RolePermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RolePermissionUpdateInput, RolePermissionUncheckedUpdateInput>
  }

  /**
   * RolePermission delete
   */
  export type RolePermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
    /**
     * Filter which RolePermission to delete.
     */
    where: RolePermissionWhereUniqueInput
  }

  /**
   * RolePermission deleteMany
   */
  export type RolePermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RolePermissions to delete
     */
    where?: RolePermissionWhereInput
    /**
     * Limit how many RolePermissions to delete.
     */
    limit?: number
  }

  /**
   * RolePermission without action
   */
  export type RolePermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolePermission
     */
    select?: RolePermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RolePermission
     */
    omit?: RolePermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RolePermissionInclude<ExtArgs> | null
  }


  /**
   * Model CapitalImprovement
   */

  export type AggregateCapitalImprovement = {
    _count: CapitalImprovementCountAggregateOutputType | null
    _avg: CapitalImprovementAvgAggregateOutputType | null
    _sum: CapitalImprovementSumAggregateOutputType | null
    _min: CapitalImprovementMinAggregateOutputType | null
    _max: CapitalImprovementMaxAggregateOutputType | null
  }

  export type CapitalImprovementAvgAggregateOutputType = {
    cost: number | null
    usefulLifeMonths: number | null
  }

  export type CapitalImprovementSumAggregateOutputType = {
    cost: number | null
    usefulLifeMonths: number | null
  }

  export type CapitalImprovementMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    description: string | null
    improvementDate: Date | null
    cost: number | null
    usefulLifeMonths: number | null
    depreciationMethod: $Enums.DepreciationMethodEnum | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CapitalImprovementMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    description: string | null
    improvementDate: Date | null
    cost: number | null
    usefulLifeMonths: number | null
    depreciationMethod: $Enums.DepreciationMethodEnum | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CapitalImprovementCountAggregateOutputType = {
    id: number
    assetId: number
    description: number
    improvementDate: number
    cost: number
    usefulLifeMonths: number
    depreciationMethod: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CapitalImprovementAvgAggregateInputType = {
    cost?: true
    usefulLifeMonths?: true
  }

  export type CapitalImprovementSumAggregateInputType = {
    cost?: true
    usefulLifeMonths?: true
  }

  export type CapitalImprovementMinAggregateInputType = {
    id?: true
    assetId?: true
    description?: true
    improvementDate?: true
    cost?: true
    usefulLifeMonths?: true
    depreciationMethod?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CapitalImprovementMaxAggregateInputType = {
    id?: true
    assetId?: true
    description?: true
    improvementDate?: true
    cost?: true
    usefulLifeMonths?: true
    depreciationMethod?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CapitalImprovementCountAggregateInputType = {
    id?: true
    assetId?: true
    description?: true
    improvementDate?: true
    cost?: true
    usefulLifeMonths?: true
    depreciationMethod?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CapitalImprovementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CapitalImprovement to aggregate.
     */
    where?: CapitalImprovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapitalImprovements to fetch.
     */
    orderBy?: CapitalImprovementOrderByWithRelationInput | CapitalImprovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CapitalImprovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapitalImprovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapitalImprovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CapitalImprovements
    **/
    _count?: true | CapitalImprovementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CapitalImprovementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CapitalImprovementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CapitalImprovementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CapitalImprovementMaxAggregateInputType
  }

  export type GetCapitalImprovementAggregateType<T extends CapitalImprovementAggregateArgs> = {
        [P in keyof T & keyof AggregateCapitalImprovement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCapitalImprovement[P]>
      : GetScalarType<T[P], AggregateCapitalImprovement[P]>
  }




  export type CapitalImprovementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CapitalImprovementWhereInput
    orderBy?: CapitalImprovementOrderByWithAggregationInput | CapitalImprovementOrderByWithAggregationInput[]
    by: CapitalImprovementScalarFieldEnum[] | CapitalImprovementScalarFieldEnum
    having?: CapitalImprovementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CapitalImprovementCountAggregateInputType | true
    _avg?: CapitalImprovementAvgAggregateInputType
    _sum?: CapitalImprovementSumAggregateInputType
    _min?: CapitalImprovementMinAggregateInputType
    _max?: CapitalImprovementMaxAggregateInputType
  }

  export type CapitalImprovementGroupByOutputType = {
    id: string
    assetId: string
    description: string
    improvementDate: Date
    cost: number
    usefulLifeMonths: number | null
    depreciationMethod: $Enums.DepreciationMethodEnum | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: CapitalImprovementCountAggregateOutputType | null
    _avg: CapitalImprovementAvgAggregateOutputType | null
    _sum: CapitalImprovementSumAggregateOutputType | null
    _min: CapitalImprovementMinAggregateOutputType | null
    _max: CapitalImprovementMaxAggregateOutputType | null
  }

  type GetCapitalImprovementGroupByPayload<T extends CapitalImprovementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CapitalImprovementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CapitalImprovementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CapitalImprovementGroupByOutputType[P]>
            : GetScalarType<T[P], CapitalImprovementGroupByOutputType[P]>
        }
      >
    >


  export type CapitalImprovementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    description?: boolean
    improvementDate?: boolean
    cost?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["capitalImprovement"]>

  export type CapitalImprovementSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    description?: boolean
    improvementDate?: boolean
    cost?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["capitalImprovement"]>

  export type CapitalImprovementSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    description?: boolean
    improvementDate?: boolean
    cost?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["capitalImprovement"]>

  export type CapitalImprovementSelectScalar = {
    id?: boolean
    assetId?: boolean
    description?: boolean
    improvementDate?: boolean
    cost?: boolean
    usefulLifeMonths?: boolean
    depreciationMethod?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CapitalImprovementOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "description" | "improvementDate" | "cost" | "usefulLifeMonths" | "depreciationMethod" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["capitalImprovement"]>
  export type CapitalImprovementInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type CapitalImprovementIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }
  export type CapitalImprovementIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
  }

  export type $CapitalImprovementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CapitalImprovement"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      description: string
      improvementDate: Date
      cost: number
      usefulLifeMonths: number | null
      depreciationMethod: $Enums.DepreciationMethodEnum | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["capitalImprovement"]>
    composites: {}
  }

  type CapitalImprovementGetPayload<S extends boolean | null | undefined | CapitalImprovementDefaultArgs> = $Result.GetResult<Prisma.$CapitalImprovementPayload, S>

  type CapitalImprovementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CapitalImprovementFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CapitalImprovementCountAggregateInputType | true
    }

  export interface CapitalImprovementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CapitalImprovement'], meta: { name: 'CapitalImprovement' } }
    /**
     * Find zero or one CapitalImprovement that matches the filter.
     * @param {CapitalImprovementFindUniqueArgs} args - Arguments to find a CapitalImprovement
     * @example
     * // Get one CapitalImprovement
     * const capitalImprovement = await prisma.capitalImprovement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CapitalImprovementFindUniqueArgs>(args: SelectSubset<T, CapitalImprovementFindUniqueArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CapitalImprovement that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CapitalImprovementFindUniqueOrThrowArgs} args - Arguments to find a CapitalImprovement
     * @example
     * // Get one CapitalImprovement
     * const capitalImprovement = await prisma.capitalImprovement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CapitalImprovementFindUniqueOrThrowArgs>(args: SelectSubset<T, CapitalImprovementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CapitalImprovement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementFindFirstArgs} args - Arguments to find a CapitalImprovement
     * @example
     * // Get one CapitalImprovement
     * const capitalImprovement = await prisma.capitalImprovement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CapitalImprovementFindFirstArgs>(args?: SelectSubset<T, CapitalImprovementFindFirstArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CapitalImprovement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementFindFirstOrThrowArgs} args - Arguments to find a CapitalImprovement
     * @example
     * // Get one CapitalImprovement
     * const capitalImprovement = await prisma.capitalImprovement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CapitalImprovementFindFirstOrThrowArgs>(args?: SelectSubset<T, CapitalImprovementFindFirstOrThrowArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CapitalImprovements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CapitalImprovements
     * const capitalImprovements = await prisma.capitalImprovement.findMany()
     * 
     * // Get first 10 CapitalImprovements
     * const capitalImprovements = await prisma.capitalImprovement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const capitalImprovementWithIdOnly = await prisma.capitalImprovement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CapitalImprovementFindManyArgs>(args?: SelectSubset<T, CapitalImprovementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CapitalImprovement.
     * @param {CapitalImprovementCreateArgs} args - Arguments to create a CapitalImprovement.
     * @example
     * // Create one CapitalImprovement
     * const CapitalImprovement = await prisma.capitalImprovement.create({
     *   data: {
     *     // ... data to create a CapitalImprovement
     *   }
     * })
     * 
     */
    create<T extends CapitalImprovementCreateArgs>(args: SelectSubset<T, CapitalImprovementCreateArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CapitalImprovements.
     * @param {CapitalImprovementCreateManyArgs} args - Arguments to create many CapitalImprovements.
     * @example
     * // Create many CapitalImprovements
     * const capitalImprovement = await prisma.capitalImprovement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CapitalImprovementCreateManyArgs>(args?: SelectSubset<T, CapitalImprovementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CapitalImprovements and returns the data saved in the database.
     * @param {CapitalImprovementCreateManyAndReturnArgs} args - Arguments to create many CapitalImprovements.
     * @example
     * // Create many CapitalImprovements
     * const capitalImprovement = await prisma.capitalImprovement.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CapitalImprovements and only return the `id`
     * const capitalImprovementWithIdOnly = await prisma.capitalImprovement.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CapitalImprovementCreateManyAndReturnArgs>(args?: SelectSubset<T, CapitalImprovementCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CapitalImprovement.
     * @param {CapitalImprovementDeleteArgs} args - Arguments to delete one CapitalImprovement.
     * @example
     * // Delete one CapitalImprovement
     * const CapitalImprovement = await prisma.capitalImprovement.delete({
     *   where: {
     *     // ... filter to delete one CapitalImprovement
     *   }
     * })
     * 
     */
    delete<T extends CapitalImprovementDeleteArgs>(args: SelectSubset<T, CapitalImprovementDeleteArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CapitalImprovement.
     * @param {CapitalImprovementUpdateArgs} args - Arguments to update one CapitalImprovement.
     * @example
     * // Update one CapitalImprovement
     * const capitalImprovement = await prisma.capitalImprovement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CapitalImprovementUpdateArgs>(args: SelectSubset<T, CapitalImprovementUpdateArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CapitalImprovements.
     * @param {CapitalImprovementDeleteManyArgs} args - Arguments to filter CapitalImprovements to delete.
     * @example
     * // Delete a few CapitalImprovements
     * const { count } = await prisma.capitalImprovement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CapitalImprovementDeleteManyArgs>(args?: SelectSubset<T, CapitalImprovementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CapitalImprovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CapitalImprovements
     * const capitalImprovement = await prisma.capitalImprovement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CapitalImprovementUpdateManyArgs>(args: SelectSubset<T, CapitalImprovementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CapitalImprovements and returns the data updated in the database.
     * @param {CapitalImprovementUpdateManyAndReturnArgs} args - Arguments to update many CapitalImprovements.
     * @example
     * // Update many CapitalImprovements
     * const capitalImprovement = await prisma.capitalImprovement.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CapitalImprovements and only return the `id`
     * const capitalImprovementWithIdOnly = await prisma.capitalImprovement.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CapitalImprovementUpdateManyAndReturnArgs>(args: SelectSubset<T, CapitalImprovementUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CapitalImprovement.
     * @param {CapitalImprovementUpsertArgs} args - Arguments to update or create a CapitalImprovement.
     * @example
     * // Update or create a CapitalImprovement
     * const capitalImprovement = await prisma.capitalImprovement.upsert({
     *   create: {
     *     // ... data to create a CapitalImprovement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CapitalImprovement we want to update
     *   }
     * })
     */
    upsert<T extends CapitalImprovementUpsertArgs>(args: SelectSubset<T, CapitalImprovementUpsertArgs<ExtArgs>>): Prisma__CapitalImprovementClient<$Result.GetResult<Prisma.$CapitalImprovementPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CapitalImprovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementCountArgs} args - Arguments to filter CapitalImprovements to count.
     * @example
     * // Count the number of CapitalImprovements
     * const count = await prisma.capitalImprovement.count({
     *   where: {
     *     // ... the filter for the CapitalImprovements we want to count
     *   }
     * })
    **/
    count<T extends CapitalImprovementCountArgs>(
      args?: Subset<T, CapitalImprovementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CapitalImprovementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CapitalImprovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CapitalImprovementAggregateArgs>(args: Subset<T, CapitalImprovementAggregateArgs>): Prisma.PrismaPromise<GetCapitalImprovementAggregateType<T>>

    /**
     * Group by CapitalImprovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CapitalImprovementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CapitalImprovementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CapitalImprovementGroupByArgs['orderBy'] }
        : { orderBy?: CapitalImprovementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CapitalImprovementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCapitalImprovementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CapitalImprovement model
   */
  readonly fields: CapitalImprovementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CapitalImprovement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CapitalImprovementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CapitalImprovement model
   */
  interface CapitalImprovementFieldRefs {
    readonly id: FieldRef<"CapitalImprovement", 'String'>
    readonly assetId: FieldRef<"CapitalImprovement", 'String'>
    readonly description: FieldRef<"CapitalImprovement", 'String'>
    readonly improvementDate: FieldRef<"CapitalImprovement", 'DateTime'>
    readonly cost: FieldRef<"CapitalImprovement", 'Float'>
    readonly usefulLifeMonths: FieldRef<"CapitalImprovement", 'Int'>
    readonly depreciationMethod: FieldRef<"CapitalImprovement", 'DepreciationMethodEnum'>
    readonly notes: FieldRef<"CapitalImprovement", 'String'>
    readonly createdAt: FieldRef<"CapitalImprovement", 'DateTime'>
    readonly updatedAt: FieldRef<"CapitalImprovement", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CapitalImprovement findUnique
   */
  export type CapitalImprovementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * Filter, which CapitalImprovement to fetch.
     */
    where: CapitalImprovementWhereUniqueInput
  }

  /**
   * CapitalImprovement findUniqueOrThrow
   */
  export type CapitalImprovementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * Filter, which CapitalImprovement to fetch.
     */
    where: CapitalImprovementWhereUniqueInput
  }

  /**
   * CapitalImprovement findFirst
   */
  export type CapitalImprovementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * Filter, which CapitalImprovement to fetch.
     */
    where?: CapitalImprovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapitalImprovements to fetch.
     */
    orderBy?: CapitalImprovementOrderByWithRelationInput | CapitalImprovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CapitalImprovements.
     */
    cursor?: CapitalImprovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapitalImprovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapitalImprovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CapitalImprovements.
     */
    distinct?: CapitalImprovementScalarFieldEnum | CapitalImprovementScalarFieldEnum[]
  }

  /**
   * CapitalImprovement findFirstOrThrow
   */
  export type CapitalImprovementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * Filter, which CapitalImprovement to fetch.
     */
    where?: CapitalImprovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapitalImprovements to fetch.
     */
    orderBy?: CapitalImprovementOrderByWithRelationInput | CapitalImprovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CapitalImprovements.
     */
    cursor?: CapitalImprovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapitalImprovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapitalImprovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CapitalImprovements.
     */
    distinct?: CapitalImprovementScalarFieldEnum | CapitalImprovementScalarFieldEnum[]
  }

  /**
   * CapitalImprovement findMany
   */
  export type CapitalImprovementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * Filter, which CapitalImprovements to fetch.
     */
    where?: CapitalImprovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CapitalImprovements to fetch.
     */
    orderBy?: CapitalImprovementOrderByWithRelationInput | CapitalImprovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CapitalImprovements.
     */
    cursor?: CapitalImprovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CapitalImprovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CapitalImprovements.
     */
    skip?: number
    distinct?: CapitalImprovementScalarFieldEnum | CapitalImprovementScalarFieldEnum[]
  }

  /**
   * CapitalImprovement create
   */
  export type CapitalImprovementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * The data needed to create a CapitalImprovement.
     */
    data: XOR<CapitalImprovementCreateInput, CapitalImprovementUncheckedCreateInput>
  }

  /**
   * CapitalImprovement createMany
   */
  export type CapitalImprovementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CapitalImprovements.
     */
    data: CapitalImprovementCreateManyInput | CapitalImprovementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CapitalImprovement createManyAndReturn
   */
  export type CapitalImprovementCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * The data used to create many CapitalImprovements.
     */
    data: CapitalImprovementCreateManyInput | CapitalImprovementCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CapitalImprovement update
   */
  export type CapitalImprovementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * The data needed to update a CapitalImprovement.
     */
    data: XOR<CapitalImprovementUpdateInput, CapitalImprovementUncheckedUpdateInput>
    /**
     * Choose, which CapitalImprovement to update.
     */
    where: CapitalImprovementWhereUniqueInput
  }

  /**
   * CapitalImprovement updateMany
   */
  export type CapitalImprovementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CapitalImprovements.
     */
    data: XOR<CapitalImprovementUpdateManyMutationInput, CapitalImprovementUncheckedUpdateManyInput>
    /**
     * Filter which CapitalImprovements to update
     */
    where?: CapitalImprovementWhereInput
    /**
     * Limit how many CapitalImprovements to update.
     */
    limit?: number
  }

  /**
   * CapitalImprovement updateManyAndReturn
   */
  export type CapitalImprovementUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * The data used to update CapitalImprovements.
     */
    data: XOR<CapitalImprovementUpdateManyMutationInput, CapitalImprovementUncheckedUpdateManyInput>
    /**
     * Filter which CapitalImprovements to update
     */
    where?: CapitalImprovementWhereInput
    /**
     * Limit how many CapitalImprovements to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CapitalImprovement upsert
   */
  export type CapitalImprovementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * The filter to search for the CapitalImprovement to update in case it exists.
     */
    where: CapitalImprovementWhereUniqueInput
    /**
     * In case the CapitalImprovement found by the `where` argument doesn't exist, create a new CapitalImprovement with this data.
     */
    create: XOR<CapitalImprovementCreateInput, CapitalImprovementUncheckedCreateInput>
    /**
     * In case the CapitalImprovement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CapitalImprovementUpdateInput, CapitalImprovementUncheckedUpdateInput>
  }

  /**
   * CapitalImprovement delete
   */
  export type CapitalImprovementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
    /**
     * Filter which CapitalImprovement to delete.
     */
    where: CapitalImprovementWhereUniqueInput
  }

  /**
   * CapitalImprovement deleteMany
   */
  export type CapitalImprovementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CapitalImprovements to delete
     */
    where?: CapitalImprovementWhereInput
    /**
     * Limit how many CapitalImprovements to delete.
     */
    limit?: number
  }

  /**
   * CapitalImprovement without action
   */
  export type CapitalImprovementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CapitalImprovement
     */
    select?: CapitalImprovementSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CapitalImprovement
     */
    omit?: CapitalImprovementOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CapitalImprovementInclude<ExtArgs> | null
  }


  /**
   * Model MaintenanceSchedule
   */

  export type AggregateMaintenanceSchedule = {
    _count: MaintenanceScheduleCountAggregateOutputType | null
    _avg: MaintenanceScheduleAvgAggregateOutputType | null
    _sum: MaintenanceScheduleSumAggregateOutputType | null
    _min: MaintenanceScheduleMinAggregateOutputType | null
    _max: MaintenanceScheduleMaxAggregateOutputType | null
  }

  export type MaintenanceScheduleAvgAggregateOutputType = {
    customInterval: number | null
    estimatedHours: number | null
    leadTimeDays: number | null
  }

  export type MaintenanceScheduleSumAggregateOutputType = {
    customInterval: number | null
    estimatedHours: number | null
    leadTimeDays: number | null
  }

  export type MaintenanceScheduleMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    title: string | null
    description: string | null
    frequency: $Enums.ScheduleFrequency | null
    customInterval: number | null
    priority: $Enums.MaintenancePriority | null
    estimatedHours: number | null
    status: $Enums.ScheduleStatus | null
    createdById: string | null
    assignedToId: string | null
    templateId: string | null
    startDate: Date | null
    endDate: Date | null
    lastGenerated: Date | null
    nextDue: Date | null
    leadTimeDays: number | null
    autoAssign: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MaintenanceScheduleMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    title: string | null
    description: string | null
    frequency: $Enums.ScheduleFrequency | null
    customInterval: number | null
    priority: $Enums.MaintenancePriority | null
    estimatedHours: number | null
    status: $Enums.ScheduleStatus | null
    createdById: string | null
    assignedToId: string | null
    templateId: string | null
    startDate: Date | null
    endDate: Date | null
    lastGenerated: Date | null
    nextDue: Date | null
    leadTimeDays: number | null
    autoAssign: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MaintenanceScheduleCountAggregateOutputType = {
    id: number
    assetId: number
    title: number
    description: number
    frequency: number
    customInterval: number
    priority: number
    estimatedHours: number
    status: number
    createdById: number
    assignedToId: number
    templateId: number
    startDate: number
    endDate: number
    lastGenerated: number
    nextDue: number
    leadTimeDays: number
    autoAssign: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MaintenanceScheduleAvgAggregateInputType = {
    customInterval?: true
    estimatedHours?: true
    leadTimeDays?: true
  }

  export type MaintenanceScheduleSumAggregateInputType = {
    customInterval?: true
    estimatedHours?: true
    leadTimeDays?: true
  }

  export type MaintenanceScheduleMinAggregateInputType = {
    id?: true
    assetId?: true
    title?: true
    description?: true
    frequency?: true
    customInterval?: true
    priority?: true
    estimatedHours?: true
    status?: true
    createdById?: true
    assignedToId?: true
    templateId?: true
    startDate?: true
    endDate?: true
    lastGenerated?: true
    nextDue?: true
    leadTimeDays?: true
    autoAssign?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MaintenanceScheduleMaxAggregateInputType = {
    id?: true
    assetId?: true
    title?: true
    description?: true
    frequency?: true
    customInterval?: true
    priority?: true
    estimatedHours?: true
    status?: true
    createdById?: true
    assignedToId?: true
    templateId?: true
    startDate?: true
    endDate?: true
    lastGenerated?: true
    nextDue?: true
    leadTimeDays?: true
    autoAssign?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MaintenanceScheduleCountAggregateInputType = {
    id?: true
    assetId?: true
    title?: true
    description?: true
    frequency?: true
    customInterval?: true
    priority?: true
    estimatedHours?: true
    status?: true
    createdById?: true
    assignedToId?: true
    templateId?: true
    startDate?: true
    endDate?: true
    lastGenerated?: true
    nextDue?: true
    leadTimeDays?: true
    autoAssign?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MaintenanceScheduleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaintenanceSchedule to aggregate.
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceSchedules to fetch.
     */
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaintenanceScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceSchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaintenanceSchedules
    **/
    _count?: true | MaintenanceScheduleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaintenanceScheduleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaintenanceScheduleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaintenanceScheduleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaintenanceScheduleMaxAggregateInputType
  }

  export type GetMaintenanceScheduleAggregateType<T extends MaintenanceScheduleAggregateArgs> = {
        [P in keyof T & keyof AggregateMaintenanceSchedule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaintenanceSchedule[P]>
      : GetScalarType<T[P], AggregateMaintenanceSchedule[P]>
  }




  export type MaintenanceScheduleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceScheduleWhereInput
    orderBy?: MaintenanceScheduleOrderByWithAggregationInput | MaintenanceScheduleOrderByWithAggregationInput[]
    by: MaintenanceScheduleScalarFieldEnum[] | MaintenanceScheduleScalarFieldEnum
    having?: MaintenanceScheduleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaintenanceScheduleCountAggregateInputType | true
    _avg?: MaintenanceScheduleAvgAggregateInputType
    _sum?: MaintenanceScheduleSumAggregateInputType
    _min?: MaintenanceScheduleMinAggregateInputType
    _max?: MaintenanceScheduleMaxAggregateInputType
  }

  export type MaintenanceScheduleGroupByOutputType = {
    id: string
    assetId: string
    title: string
    description: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval: number | null
    priority: $Enums.MaintenancePriority
    estimatedHours: number | null
    status: $Enums.ScheduleStatus
    createdById: string
    assignedToId: string | null
    templateId: string | null
    startDate: Date
    endDate: Date | null
    lastGenerated: Date | null
    nextDue: Date | null
    leadTimeDays: number
    autoAssign: boolean
    createdAt: Date
    updatedAt: Date
    _count: MaintenanceScheduleCountAggregateOutputType | null
    _avg: MaintenanceScheduleAvgAggregateOutputType | null
    _sum: MaintenanceScheduleSumAggregateOutputType | null
    _min: MaintenanceScheduleMinAggregateOutputType | null
    _max: MaintenanceScheduleMaxAggregateOutputType | null
  }

  type GetMaintenanceScheduleGroupByPayload<T extends MaintenanceScheduleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaintenanceScheduleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaintenanceScheduleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaintenanceScheduleGroupByOutputType[P]>
            : GetScalarType<T[P], MaintenanceScheduleGroupByOutputType[P]>
        }
      >
    >


  export type MaintenanceScheduleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    title?: boolean
    description?: boolean
    frequency?: boolean
    customInterval?: boolean
    priority?: boolean
    estimatedHours?: boolean
    status?: boolean
    createdById?: boolean
    assignedToId?: boolean
    templateId?: boolean
    startDate?: boolean
    endDate?: boolean
    lastGenerated?: boolean
    nextDue?: boolean
    leadTimeDays?: boolean
    autoAssign?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | MaintenanceSchedule$assignedToArgs<ExtArgs>
    template?: boolean | MaintenanceSchedule$templateArgs<ExtArgs>
    maintenanceTasks?: boolean | MaintenanceSchedule$maintenanceTasksArgs<ExtArgs>
    _count?: boolean | MaintenanceScheduleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["maintenanceSchedule"]>

  export type MaintenanceScheduleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    title?: boolean
    description?: boolean
    frequency?: boolean
    customInterval?: boolean
    priority?: boolean
    estimatedHours?: boolean
    status?: boolean
    createdById?: boolean
    assignedToId?: boolean
    templateId?: boolean
    startDate?: boolean
    endDate?: boolean
    lastGenerated?: boolean
    nextDue?: boolean
    leadTimeDays?: boolean
    autoAssign?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | MaintenanceSchedule$assignedToArgs<ExtArgs>
    template?: boolean | MaintenanceSchedule$templateArgs<ExtArgs>
  }, ExtArgs["result"]["maintenanceSchedule"]>

  export type MaintenanceScheduleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    title?: boolean
    description?: boolean
    frequency?: boolean
    customInterval?: boolean
    priority?: boolean
    estimatedHours?: boolean
    status?: boolean
    createdById?: boolean
    assignedToId?: boolean
    templateId?: boolean
    startDate?: boolean
    endDate?: boolean
    lastGenerated?: boolean
    nextDue?: boolean
    leadTimeDays?: boolean
    autoAssign?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | MaintenanceSchedule$assignedToArgs<ExtArgs>
    template?: boolean | MaintenanceSchedule$templateArgs<ExtArgs>
  }, ExtArgs["result"]["maintenanceSchedule"]>

  export type MaintenanceScheduleSelectScalar = {
    id?: boolean
    assetId?: boolean
    title?: boolean
    description?: boolean
    frequency?: boolean
    customInterval?: boolean
    priority?: boolean
    estimatedHours?: boolean
    status?: boolean
    createdById?: boolean
    assignedToId?: boolean
    templateId?: boolean
    startDate?: boolean
    endDate?: boolean
    lastGenerated?: boolean
    nextDue?: boolean
    leadTimeDays?: boolean
    autoAssign?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MaintenanceScheduleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "title" | "description" | "frequency" | "customInterval" | "priority" | "estimatedHours" | "status" | "createdById" | "assignedToId" | "templateId" | "startDate" | "endDate" | "lastGenerated" | "nextDue" | "leadTimeDays" | "autoAssign" | "createdAt" | "updatedAt", ExtArgs["result"]["maintenanceSchedule"]>
  export type MaintenanceScheduleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | MaintenanceSchedule$assignedToArgs<ExtArgs>
    template?: boolean | MaintenanceSchedule$templateArgs<ExtArgs>
    maintenanceTasks?: boolean | MaintenanceSchedule$maintenanceTasksArgs<ExtArgs>
    _count?: boolean | MaintenanceScheduleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MaintenanceScheduleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | MaintenanceSchedule$assignedToArgs<ExtArgs>
    template?: boolean | MaintenanceSchedule$templateArgs<ExtArgs>
  }
  export type MaintenanceScheduleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    assignedTo?: boolean | MaintenanceSchedule$assignedToArgs<ExtArgs>
    template?: boolean | MaintenanceSchedule$templateArgs<ExtArgs>
  }

  export type $MaintenanceSchedulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaintenanceSchedule"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs>
      assignedTo: Prisma.$UserPayload<ExtArgs> | null
      template: Prisma.$MaintenanceTemplatePayload<ExtArgs> | null
      maintenanceTasks: Prisma.$MaintenancePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      title: string
      description: string | null
      frequency: $Enums.ScheduleFrequency
      customInterval: number | null
      priority: $Enums.MaintenancePriority
      estimatedHours: number | null
      status: $Enums.ScheduleStatus
      createdById: string
      assignedToId: string | null
      templateId: string | null
      startDate: Date
      endDate: Date | null
      lastGenerated: Date | null
      nextDue: Date | null
      leadTimeDays: number
      autoAssign: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["maintenanceSchedule"]>
    composites: {}
  }

  type MaintenanceScheduleGetPayload<S extends boolean | null | undefined | MaintenanceScheduleDefaultArgs> = $Result.GetResult<Prisma.$MaintenanceSchedulePayload, S>

  type MaintenanceScheduleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MaintenanceScheduleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaintenanceScheduleCountAggregateInputType | true
    }

  export interface MaintenanceScheduleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaintenanceSchedule'], meta: { name: 'MaintenanceSchedule' } }
    /**
     * Find zero or one MaintenanceSchedule that matches the filter.
     * @param {MaintenanceScheduleFindUniqueArgs} args - Arguments to find a MaintenanceSchedule
     * @example
     * // Get one MaintenanceSchedule
     * const maintenanceSchedule = await prisma.maintenanceSchedule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaintenanceScheduleFindUniqueArgs>(args: SelectSubset<T, MaintenanceScheduleFindUniqueArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MaintenanceSchedule that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MaintenanceScheduleFindUniqueOrThrowArgs} args - Arguments to find a MaintenanceSchedule
     * @example
     * // Get one MaintenanceSchedule
     * const maintenanceSchedule = await prisma.maintenanceSchedule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaintenanceScheduleFindUniqueOrThrowArgs>(args: SelectSubset<T, MaintenanceScheduleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MaintenanceSchedule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleFindFirstArgs} args - Arguments to find a MaintenanceSchedule
     * @example
     * // Get one MaintenanceSchedule
     * const maintenanceSchedule = await prisma.maintenanceSchedule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaintenanceScheduleFindFirstArgs>(args?: SelectSubset<T, MaintenanceScheduleFindFirstArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MaintenanceSchedule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleFindFirstOrThrowArgs} args - Arguments to find a MaintenanceSchedule
     * @example
     * // Get one MaintenanceSchedule
     * const maintenanceSchedule = await prisma.maintenanceSchedule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaintenanceScheduleFindFirstOrThrowArgs>(args?: SelectSubset<T, MaintenanceScheduleFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MaintenanceSchedules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaintenanceSchedules
     * const maintenanceSchedules = await prisma.maintenanceSchedule.findMany()
     * 
     * // Get first 10 MaintenanceSchedules
     * const maintenanceSchedules = await prisma.maintenanceSchedule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const maintenanceScheduleWithIdOnly = await prisma.maintenanceSchedule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaintenanceScheduleFindManyArgs>(args?: SelectSubset<T, MaintenanceScheduleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MaintenanceSchedule.
     * @param {MaintenanceScheduleCreateArgs} args - Arguments to create a MaintenanceSchedule.
     * @example
     * // Create one MaintenanceSchedule
     * const MaintenanceSchedule = await prisma.maintenanceSchedule.create({
     *   data: {
     *     // ... data to create a MaintenanceSchedule
     *   }
     * })
     * 
     */
    create<T extends MaintenanceScheduleCreateArgs>(args: SelectSubset<T, MaintenanceScheduleCreateArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MaintenanceSchedules.
     * @param {MaintenanceScheduleCreateManyArgs} args - Arguments to create many MaintenanceSchedules.
     * @example
     * // Create many MaintenanceSchedules
     * const maintenanceSchedule = await prisma.maintenanceSchedule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaintenanceScheduleCreateManyArgs>(args?: SelectSubset<T, MaintenanceScheduleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MaintenanceSchedules and returns the data saved in the database.
     * @param {MaintenanceScheduleCreateManyAndReturnArgs} args - Arguments to create many MaintenanceSchedules.
     * @example
     * // Create many MaintenanceSchedules
     * const maintenanceSchedule = await prisma.maintenanceSchedule.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MaintenanceSchedules and only return the `id`
     * const maintenanceScheduleWithIdOnly = await prisma.maintenanceSchedule.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaintenanceScheduleCreateManyAndReturnArgs>(args?: SelectSubset<T, MaintenanceScheduleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MaintenanceSchedule.
     * @param {MaintenanceScheduleDeleteArgs} args - Arguments to delete one MaintenanceSchedule.
     * @example
     * // Delete one MaintenanceSchedule
     * const MaintenanceSchedule = await prisma.maintenanceSchedule.delete({
     *   where: {
     *     // ... filter to delete one MaintenanceSchedule
     *   }
     * })
     * 
     */
    delete<T extends MaintenanceScheduleDeleteArgs>(args: SelectSubset<T, MaintenanceScheduleDeleteArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MaintenanceSchedule.
     * @param {MaintenanceScheduleUpdateArgs} args - Arguments to update one MaintenanceSchedule.
     * @example
     * // Update one MaintenanceSchedule
     * const maintenanceSchedule = await prisma.maintenanceSchedule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaintenanceScheduleUpdateArgs>(args: SelectSubset<T, MaintenanceScheduleUpdateArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MaintenanceSchedules.
     * @param {MaintenanceScheduleDeleteManyArgs} args - Arguments to filter MaintenanceSchedules to delete.
     * @example
     * // Delete a few MaintenanceSchedules
     * const { count } = await prisma.maintenanceSchedule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaintenanceScheduleDeleteManyArgs>(args?: SelectSubset<T, MaintenanceScheduleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaintenanceSchedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaintenanceSchedules
     * const maintenanceSchedule = await prisma.maintenanceSchedule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaintenanceScheduleUpdateManyArgs>(args: SelectSubset<T, MaintenanceScheduleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaintenanceSchedules and returns the data updated in the database.
     * @param {MaintenanceScheduleUpdateManyAndReturnArgs} args - Arguments to update many MaintenanceSchedules.
     * @example
     * // Update many MaintenanceSchedules
     * const maintenanceSchedule = await prisma.maintenanceSchedule.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MaintenanceSchedules and only return the `id`
     * const maintenanceScheduleWithIdOnly = await prisma.maintenanceSchedule.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MaintenanceScheduleUpdateManyAndReturnArgs>(args: SelectSubset<T, MaintenanceScheduleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MaintenanceSchedule.
     * @param {MaintenanceScheduleUpsertArgs} args - Arguments to update or create a MaintenanceSchedule.
     * @example
     * // Update or create a MaintenanceSchedule
     * const maintenanceSchedule = await prisma.maintenanceSchedule.upsert({
     *   create: {
     *     // ... data to create a MaintenanceSchedule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaintenanceSchedule we want to update
     *   }
     * })
     */
    upsert<T extends MaintenanceScheduleUpsertArgs>(args: SelectSubset<T, MaintenanceScheduleUpsertArgs<ExtArgs>>): Prisma__MaintenanceScheduleClient<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MaintenanceSchedules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleCountArgs} args - Arguments to filter MaintenanceSchedules to count.
     * @example
     * // Count the number of MaintenanceSchedules
     * const count = await prisma.maintenanceSchedule.count({
     *   where: {
     *     // ... the filter for the MaintenanceSchedules we want to count
     *   }
     * })
    **/
    count<T extends MaintenanceScheduleCountArgs>(
      args?: Subset<T, MaintenanceScheduleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaintenanceScheduleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaintenanceSchedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaintenanceScheduleAggregateArgs>(args: Subset<T, MaintenanceScheduleAggregateArgs>): Prisma.PrismaPromise<GetMaintenanceScheduleAggregateType<T>>

    /**
     * Group by MaintenanceSchedule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceScheduleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaintenanceScheduleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaintenanceScheduleGroupByArgs['orderBy'] }
        : { orderBy?: MaintenanceScheduleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaintenanceScheduleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaintenanceScheduleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaintenanceSchedule model
   */
  readonly fields: MaintenanceScheduleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaintenanceSchedule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaintenanceScheduleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    assignedTo<T extends MaintenanceSchedule$assignedToArgs<ExtArgs> = {}>(args?: Subset<T, MaintenanceSchedule$assignedToArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    template<T extends MaintenanceSchedule$templateArgs<ExtArgs> = {}>(args?: Subset<T, MaintenanceSchedule$templateArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    maintenanceTasks<T extends MaintenanceSchedule$maintenanceTasksArgs<ExtArgs> = {}>(args?: Subset<T, MaintenanceSchedule$maintenanceTasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaintenanceSchedule model
   */
  interface MaintenanceScheduleFieldRefs {
    readonly id: FieldRef<"MaintenanceSchedule", 'String'>
    readonly assetId: FieldRef<"MaintenanceSchedule", 'String'>
    readonly title: FieldRef<"MaintenanceSchedule", 'String'>
    readonly description: FieldRef<"MaintenanceSchedule", 'String'>
    readonly frequency: FieldRef<"MaintenanceSchedule", 'ScheduleFrequency'>
    readonly customInterval: FieldRef<"MaintenanceSchedule", 'Int'>
    readonly priority: FieldRef<"MaintenanceSchedule", 'MaintenancePriority'>
    readonly estimatedHours: FieldRef<"MaintenanceSchedule", 'Float'>
    readonly status: FieldRef<"MaintenanceSchedule", 'ScheduleStatus'>
    readonly createdById: FieldRef<"MaintenanceSchedule", 'String'>
    readonly assignedToId: FieldRef<"MaintenanceSchedule", 'String'>
    readonly templateId: FieldRef<"MaintenanceSchedule", 'String'>
    readonly startDate: FieldRef<"MaintenanceSchedule", 'DateTime'>
    readonly endDate: FieldRef<"MaintenanceSchedule", 'DateTime'>
    readonly lastGenerated: FieldRef<"MaintenanceSchedule", 'DateTime'>
    readonly nextDue: FieldRef<"MaintenanceSchedule", 'DateTime'>
    readonly leadTimeDays: FieldRef<"MaintenanceSchedule", 'Int'>
    readonly autoAssign: FieldRef<"MaintenanceSchedule", 'Boolean'>
    readonly createdAt: FieldRef<"MaintenanceSchedule", 'DateTime'>
    readonly updatedAt: FieldRef<"MaintenanceSchedule", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MaintenanceSchedule findUnique
   */
  export type MaintenanceScheduleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceSchedule to fetch.
     */
    where: MaintenanceScheduleWhereUniqueInput
  }

  /**
   * MaintenanceSchedule findUniqueOrThrow
   */
  export type MaintenanceScheduleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceSchedule to fetch.
     */
    where: MaintenanceScheduleWhereUniqueInput
  }

  /**
   * MaintenanceSchedule findFirst
   */
  export type MaintenanceScheduleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceSchedule to fetch.
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceSchedules to fetch.
     */
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaintenanceSchedules.
     */
    cursor?: MaintenanceScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceSchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaintenanceSchedules.
     */
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * MaintenanceSchedule findFirstOrThrow
   */
  export type MaintenanceScheduleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceSchedule to fetch.
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceSchedules to fetch.
     */
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaintenanceSchedules.
     */
    cursor?: MaintenanceScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceSchedules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaintenanceSchedules.
     */
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * MaintenanceSchedule findMany
   */
  export type MaintenanceScheduleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceSchedules to fetch.
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceSchedules to fetch.
     */
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaintenanceSchedules.
     */
    cursor?: MaintenanceScheduleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceSchedules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceSchedules.
     */
    skip?: number
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * MaintenanceSchedule create
   */
  export type MaintenanceScheduleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * The data needed to create a MaintenanceSchedule.
     */
    data: XOR<MaintenanceScheduleCreateInput, MaintenanceScheduleUncheckedCreateInput>
  }

  /**
   * MaintenanceSchedule createMany
   */
  export type MaintenanceScheduleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaintenanceSchedules.
     */
    data: MaintenanceScheduleCreateManyInput | MaintenanceScheduleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MaintenanceSchedule createManyAndReturn
   */
  export type MaintenanceScheduleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * The data used to create many MaintenanceSchedules.
     */
    data: MaintenanceScheduleCreateManyInput | MaintenanceScheduleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaintenanceSchedule update
   */
  export type MaintenanceScheduleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * The data needed to update a MaintenanceSchedule.
     */
    data: XOR<MaintenanceScheduleUpdateInput, MaintenanceScheduleUncheckedUpdateInput>
    /**
     * Choose, which MaintenanceSchedule to update.
     */
    where: MaintenanceScheduleWhereUniqueInput
  }

  /**
   * MaintenanceSchedule updateMany
   */
  export type MaintenanceScheduleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaintenanceSchedules.
     */
    data: XOR<MaintenanceScheduleUpdateManyMutationInput, MaintenanceScheduleUncheckedUpdateManyInput>
    /**
     * Filter which MaintenanceSchedules to update
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * Limit how many MaintenanceSchedules to update.
     */
    limit?: number
  }

  /**
   * MaintenanceSchedule updateManyAndReturn
   */
  export type MaintenanceScheduleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * The data used to update MaintenanceSchedules.
     */
    data: XOR<MaintenanceScheduleUpdateManyMutationInput, MaintenanceScheduleUncheckedUpdateManyInput>
    /**
     * Filter which MaintenanceSchedules to update
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * Limit how many MaintenanceSchedules to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaintenanceSchedule upsert
   */
  export type MaintenanceScheduleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * The filter to search for the MaintenanceSchedule to update in case it exists.
     */
    where: MaintenanceScheduleWhereUniqueInput
    /**
     * In case the MaintenanceSchedule found by the `where` argument doesn't exist, create a new MaintenanceSchedule with this data.
     */
    create: XOR<MaintenanceScheduleCreateInput, MaintenanceScheduleUncheckedCreateInput>
    /**
     * In case the MaintenanceSchedule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaintenanceScheduleUpdateInput, MaintenanceScheduleUncheckedUpdateInput>
  }

  /**
   * MaintenanceSchedule delete
   */
  export type MaintenanceScheduleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    /**
     * Filter which MaintenanceSchedule to delete.
     */
    where: MaintenanceScheduleWhereUniqueInput
  }

  /**
   * MaintenanceSchedule deleteMany
   */
  export type MaintenanceScheduleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaintenanceSchedules to delete
     */
    where?: MaintenanceScheduleWhereInput
    /**
     * Limit how many MaintenanceSchedules to delete.
     */
    limit?: number
  }

  /**
   * MaintenanceSchedule.assignedTo
   */
  export type MaintenanceSchedule$assignedToArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * MaintenanceSchedule.template
   */
  export type MaintenanceSchedule$templateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    where?: MaintenanceTemplateWhereInput
  }

  /**
   * MaintenanceSchedule.maintenanceTasks
   */
  export type MaintenanceSchedule$maintenanceTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    cursor?: MaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * MaintenanceSchedule without action
   */
  export type MaintenanceScheduleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
  }


  /**
   * Model MaintenanceTemplate
   */

  export type AggregateMaintenanceTemplate = {
    _count: MaintenanceTemplateCountAggregateOutputType | null
    _avg: MaintenanceTemplateAvgAggregateOutputType | null
    _sum: MaintenanceTemplateSumAggregateOutputType | null
    _min: MaintenanceTemplateMinAggregateOutputType | null
    _max: MaintenanceTemplateMaxAggregateOutputType | null
  }

  export type MaintenanceTemplateAvgAggregateOutputType = {
    estimatedHours: number | null
  }

  export type MaintenanceTemplateSumAggregateOutputType = {
    estimatedHours: number | null
  }

  export type MaintenanceTemplateMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    maintenanceType: $Enums.MaintenanceType | null
    priority: $Enums.MaintenancePriority | null
    estimatedHours: number | null
    instructions: string | null
    checklistItems: string | null
    requiredSkills: string | null
    safetyNotes: string | null
    toolsRequired: string | null
    partsRequired: string | null
    isActive: boolean | null
    createdById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MaintenanceTemplateMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    maintenanceType: $Enums.MaintenanceType | null
    priority: $Enums.MaintenancePriority | null
    estimatedHours: number | null
    instructions: string | null
    checklistItems: string | null
    requiredSkills: string | null
    safetyNotes: string | null
    toolsRequired: string | null
    partsRequired: string | null
    isActive: boolean | null
    createdById: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MaintenanceTemplateCountAggregateOutputType = {
    id: number
    name: number
    description: number
    maintenanceType: number
    priority: number
    estimatedHours: number
    instructions: number
    checklistItems: number
    requiredSkills: number
    safetyNotes: number
    toolsRequired: number
    partsRequired: number
    isActive: number
    createdById: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MaintenanceTemplateAvgAggregateInputType = {
    estimatedHours?: true
  }

  export type MaintenanceTemplateSumAggregateInputType = {
    estimatedHours?: true
  }

  export type MaintenanceTemplateMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    maintenanceType?: true
    priority?: true
    estimatedHours?: true
    instructions?: true
    checklistItems?: true
    requiredSkills?: true
    safetyNotes?: true
    toolsRequired?: true
    partsRequired?: true
    isActive?: true
    createdById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MaintenanceTemplateMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    maintenanceType?: true
    priority?: true
    estimatedHours?: true
    instructions?: true
    checklistItems?: true
    requiredSkills?: true
    safetyNotes?: true
    toolsRequired?: true
    partsRequired?: true
    isActive?: true
    createdById?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MaintenanceTemplateCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    maintenanceType?: true
    priority?: true
    estimatedHours?: true
    instructions?: true
    checklistItems?: true
    requiredSkills?: true
    safetyNotes?: true
    toolsRequired?: true
    partsRequired?: true
    isActive?: true
    createdById?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MaintenanceTemplateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaintenanceTemplate to aggregate.
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceTemplates to fetch.
     */
    orderBy?: MaintenanceTemplateOrderByWithRelationInput | MaintenanceTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MaintenanceTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MaintenanceTemplates
    **/
    _count?: true | MaintenanceTemplateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MaintenanceTemplateAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MaintenanceTemplateSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MaintenanceTemplateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MaintenanceTemplateMaxAggregateInputType
  }

  export type GetMaintenanceTemplateAggregateType<T extends MaintenanceTemplateAggregateArgs> = {
        [P in keyof T & keyof AggregateMaintenanceTemplate]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMaintenanceTemplate[P]>
      : GetScalarType<T[P], AggregateMaintenanceTemplate[P]>
  }




  export type MaintenanceTemplateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MaintenanceTemplateWhereInput
    orderBy?: MaintenanceTemplateOrderByWithAggregationInput | MaintenanceTemplateOrderByWithAggregationInput[]
    by: MaintenanceTemplateScalarFieldEnum[] | MaintenanceTemplateScalarFieldEnum
    having?: MaintenanceTemplateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MaintenanceTemplateCountAggregateInputType | true
    _avg?: MaintenanceTemplateAvgAggregateInputType
    _sum?: MaintenanceTemplateSumAggregateInputType
    _min?: MaintenanceTemplateMinAggregateInputType
    _max?: MaintenanceTemplateMaxAggregateInputType
  }

  export type MaintenanceTemplateGroupByOutputType = {
    id: string
    name: string
    description: string | null
    maintenanceType: $Enums.MaintenanceType
    priority: $Enums.MaintenancePriority
    estimatedHours: number | null
    instructions: string | null
    checklistItems: string | null
    requiredSkills: string | null
    safetyNotes: string | null
    toolsRequired: string | null
    partsRequired: string | null
    isActive: boolean
    createdById: string
    createdAt: Date
    updatedAt: Date
    _count: MaintenanceTemplateCountAggregateOutputType | null
    _avg: MaintenanceTemplateAvgAggregateOutputType | null
    _sum: MaintenanceTemplateSumAggregateOutputType | null
    _min: MaintenanceTemplateMinAggregateOutputType | null
    _max: MaintenanceTemplateMaxAggregateOutputType | null
  }

  type GetMaintenanceTemplateGroupByPayload<T extends MaintenanceTemplateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MaintenanceTemplateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MaintenanceTemplateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MaintenanceTemplateGroupByOutputType[P]>
            : GetScalarType<T[P], MaintenanceTemplateGroupByOutputType[P]>
        }
      >
    >


  export type MaintenanceTemplateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    maintenanceType?: boolean
    priority?: boolean
    estimatedHours?: boolean
    instructions?: boolean
    checklistItems?: boolean
    requiredSkills?: boolean
    safetyNotes?: boolean
    toolsRequired?: boolean
    partsRequired?: boolean
    isActive?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    schedules?: boolean | MaintenanceTemplate$schedulesArgs<ExtArgs>
    maintenanceTasks?: boolean | MaintenanceTemplate$maintenanceTasksArgs<ExtArgs>
    _count?: boolean | MaintenanceTemplateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["maintenanceTemplate"]>

  export type MaintenanceTemplateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    maintenanceType?: boolean
    priority?: boolean
    estimatedHours?: boolean
    instructions?: boolean
    checklistItems?: boolean
    requiredSkills?: boolean
    safetyNotes?: boolean
    toolsRequired?: boolean
    partsRequired?: boolean
    isActive?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["maintenanceTemplate"]>

  export type MaintenanceTemplateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    maintenanceType?: boolean
    priority?: boolean
    estimatedHours?: boolean
    instructions?: boolean
    checklistItems?: boolean
    requiredSkills?: boolean
    safetyNotes?: boolean
    toolsRequired?: boolean
    partsRequired?: boolean
    isActive?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["maintenanceTemplate"]>

  export type MaintenanceTemplateSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    maintenanceType?: boolean
    priority?: boolean
    estimatedHours?: boolean
    instructions?: boolean
    checklistItems?: boolean
    requiredSkills?: boolean
    safetyNotes?: boolean
    toolsRequired?: boolean
    partsRequired?: boolean
    isActive?: boolean
    createdById?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MaintenanceTemplateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "maintenanceType" | "priority" | "estimatedHours" | "instructions" | "checklistItems" | "requiredSkills" | "safetyNotes" | "toolsRequired" | "partsRequired" | "isActive" | "createdById" | "createdAt" | "updatedAt", ExtArgs["result"]["maintenanceTemplate"]>
  export type MaintenanceTemplateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
    schedules?: boolean | MaintenanceTemplate$schedulesArgs<ExtArgs>
    maintenanceTasks?: boolean | MaintenanceTemplate$maintenanceTasksArgs<ExtArgs>
    _count?: boolean | MaintenanceTemplateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MaintenanceTemplateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MaintenanceTemplateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MaintenanceTemplatePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MaintenanceTemplate"
    objects: {
      createdBy: Prisma.$UserPayload<ExtArgs>
      schedules: Prisma.$MaintenanceSchedulePayload<ExtArgs>[]
      maintenanceTasks: Prisma.$MaintenancePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      maintenanceType: $Enums.MaintenanceType
      priority: $Enums.MaintenancePriority
      estimatedHours: number | null
      instructions: string | null
      checklistItems: string | null
      requiredSkills: string | null
      safetyNotes: string | null
      toolsRequired: string | null
      partsRequired: string | null
      isActive: boolean
      createdById: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["maintenanceTemplate"]>
    composites: {}
  }

  type MaintenanceTemplateGetPayload<S extends boolean | null | undefined | MaintenanceTemplateDefaultArgs> = $Result.GetResult<Prisma.$MaintenanceTemplatePayload, S>

  type MaintenanceTemplateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MaintenanceTemplateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MaintenanceTemplateCountAggregateInputType | true
    }

  export interface MaintenanceTemplateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MaintenanceTemplate'], meta: { name: 'MaintenanceTemplate' } }
    /**
     * Find zero or one MaintenanceTemplate that matches the filter.
     * @param {MaintenanceTemplateFindUniqueArgs} args - Arguments to find a MaintenanceTemplate
     * @example
     * // Get one MaintenanceTemplate
     * const maintenanceTemplate = await prisma.maintenanceTemplate.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MaintenanceTemplateFindUniqueArgs>(args: SelectSubset<T, MaintenanceTemplateFindUniqueArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one MaintenanceTemplate that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MaintenanceTemplateFindUniqueOrThrowArgs} args - Arguments to find a MaintenanceTemplate
     * @example
     * // Get one MaintenanceTemplate
     * const maintenanceTemplate = await prisma.maintenanceTemplate.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MaintenanceTemplateFindUniqueOrThrowArgs>(args: SelectSubset<T, MaintenanceTemplateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MaintenanceTemplate that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateFindFirstArgs} args - Arguments to find a MaintenanceTemplate
     * @example
     * // Get one MaintenanceTemplate
     * const maintenanceTemplate = await prisma.maintenanceTemplate.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MaintenanceTemplateFindFirstArgs>(args?: SelectSubset<T, MaintenanceTemplateFindFirstArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first MaintenanceTemplate that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateFindFirstOrThrowArgs} args - Arguments to find a MaintenanceTemplate
     * @example
     * // Get one MaintenanceTemplate
     * const maintenanceTemplate = await prisma.maintenanceTemplate.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MaintenanceTemplateFindFirstOrThrowArgs>(args?: SelectSubset<T, MaintenanceTemplateFindFirstOrThrowArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more MaintenanceTemplates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MaintenanceTemplates
     * const maintenanceTemplates = await prisma.maintenanceTemplate.findMany()
     * 
     * // Get first 10 MaintenanceTemplates
     * const maintenanceTemplates = await prisma.maintenanceTemplate.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const maintenanceTemplateWithIdOnly = await prisma.maintenanceTemplate.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MaintenanceTemplateFindManyArgs>(args?: SelectSubset<T, MaintenanceTemplateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a MaintenanceTemplate.
     * @param {MaintenanceTemplateCreateArgs} args - Arguments to create a MaintenanceTemplate.
     * @example
     * // Create one MaintenanceTemplate
     * const MaintenanceTemplate = await prisma.maintenanceTemplate.create({
     *   data: {
     *     // ... data to create a MaintenanceTemplate
     *   }
     * })
     * 
     */
    create<T extends MaintenanceTemplateCreateArgs>(args: SelectSubset<T, MaintenanceTemplateCreateArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many MaintenanceTemplates.
     * @param {MaintenanceTemplateCreateManyArgs} args - Arguments to create many MaintenanceTemplates.
     * @example
     * // Create many MaintenanceTemplates
     * const maintenanceTemplate = await prisma.maintenanceTemplate.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MaintenanceTemplateCreateManyArgs>(args?: SelectSubset<T, MaintenanceTemplateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MaintenanceTemplates and returns the data saved in the database.
     * @param {MaintenanceTemplateCreateManyAndReturnArgs} args - Arguments to create many MaintenanceTemplates.
     * @example
     * // Create many MaintenanceTemplates
     * const maintenanceTemplate = await prisma.maintenanceTemplate.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MaintenanceTemplates and only return the `id`
     * const maintenanceTemplateWithIdOnly = await prisma.maintenanceTemplate.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MaintenanceTemplateCreateManyAndReturnArgs>(args?: SelectSubset<T, MaintenanceTemplateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a MaintenanceTemplate.
     * @param {MaintenanceTemplateDeleteArgs} args - Arguments to delete one MaintenanceTemplate.
     * @example
     * // Delete one MaintenanceTemplate
     * const MaintenanceTemplate = await prisma.maintenanceTemplate.delete({
     *   where: {
     *     // ... filter to delete one MaintenanceTemplate
     *   }
     * })
     * 
     */
    delete<T extends MaintenanceTemplateDeleteArgs>(args: SelectSubset<T, MaintenanceTemplateDeleteArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one MaintenanceTemplate.
     * @param {MaintenanceTemplateUpdateArgs} args - Arguments to update one MaintenanceTemplate.
     * @example
     * // Update one MaintenanceTemplate
     * const maintenanceTemplate = await prisma.maintenanceTemplate.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MaintenanceTemplateUpdateArgs>(args: SelectSubset<T, MaintenanceTemplateUpdateArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more MaintenanceTemplates.
     * @param {MaintenanceTemplateDeleteManyArgs} args - Arguments to filter MaintenanceTemplates to delete.
     * @example
     * // Delete a few MaintenanceTemplates
     * const { count } = await prisma.maintenanceTemplate.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MaintenanceTemplateDeleteManyArgs>(args?: SelectSubset<T, MaintenanceTemplateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaintenanceTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MaintenanceTemplates
     * const maintenanceTemplate = await prisma.maintenanceTemplate.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MaintenanceTemplateUpdateManyArgs>(args: SelectSubset<T, MaintenanceTemplateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MaintenanceTemplates and returns the data updated in the database.
     * @param {MaintenanceTemplateUpdateManyAndReturnArgs} args - Arguments to update many MaintenanceTemplates.
     * @example
     * // Update many MaintenanceTemplates
     * const maintenanceTemplate = await prisma.maintenanceTemplate.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more MaintenanceTemplates and only return the `id`
     * const maintenanceTemplateWithIdOnly = await prisma.maintenanceTemplate.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MaintenanceTemplateUpdateManyAndReturnArgs>(args: SelectSubset<T, MaintenanceTemplateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one MaintenanceTemplate.
     * @param {MaintenanceTemplateUpsertArgs} args - Arguments to update or create a MaintenanceTemplate.
     * @example
     * // Update or create a MaintenanceTemplate
     * const maintenanceTemplate = await prisma.maintenanceTemplate.upsert({
     *   create: {
     *     // ... data to create a MaintenanceTemplate
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MaintenanceTemplate we want to update
     *   }
     * })
     */
    upsert<T extends MaintenanceTemplateUpsertArgs>(args: SelectSubset<T, MaintenanceTemplateUpsertArgs<ExtArgs>>): Prisma__MaintenanceTemplateClient<$Result.GetResult<Prisma.$MaintenanceTemplatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of MaintenanceTemplates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateCountArgs} args - Arguments to filter MaintenanceTemplates to count.
     * @example
     * // Count the number of MaintenanceTemplates
     * const count = await prisma.maintenanceTemplate.count({
     *   where: {
     *     // ... the filter for the MaintenanceTemplates we want to count
     *   }
     * })
    **/
    count<T extends MaintenanceTemplateCountArgs>(
      args?: Subset<T, MaintenanceTemplateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MaintenanceTemplateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MaintenanceTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MaintenanceTemplateAggregateArgs>(args: Subset<T, MaintenanceTemplateAggregateArgs>): Prisma.PrismaPromise<GetMaintenanceTemplateAggregateType<T>>

    /**
     * Group by MaintenanceTemplate.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MaintenanceTemplateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MaintenanceTemplateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MaintenanceTemplateGroupByArgs['orderBy'] }
        : { orderBy?: MaintenanceTemplateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MaintenanceTemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMaintenanceTemplateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MaintenanceTemplate model
   */
  readonly fields: MaintenanceTemplateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MaintenanceTemplate.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MaintenanceTemplateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    schedules<T extends MaintenanceTemplate$schedulesArgs<ExtArgs> = {}>(args?: Subset<T, MaintenanceTemplate$schedulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenanceSchedulePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    maintenanceTasks<T extends MaintenanceTemplate$maintenanceTasksArgs<ExtArgs> = {}>(args?: Subset<T, MaintenanceTemplate$maintenanceTasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MaintenancePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MaintenanceTemplate model
   */
  interface MaintenanceTemplateFieldRefs {
    readonly id: FieldRef<"MaintenanceTemplate", 'String'>
    readonly name: FieldRef<"MaintenanceTemplate", 'String'>
    readonly description: FieldRef<"MaintenanceTemplate", 'String'>
    readonly maintenanceType: FieldRef<"MaintenanceTemplate", 'MaintenanceType'>
    readonly priority: FieldRef<"MaintenanceTemplate", 'MaintenancePriority'>
    readonly estimatedHours: FieldRef<"MaintenanceTemplate", 'Float'>
    readonly instructions: FieldRef<"MaintenanceTemplate", 'String'>
    readonly checklistItems: FieldRef<"MaintenanceTemplate", 'String'>
    readonly requiredSkills: FieldRef<"MaintenanceTemplate", 'String'>
    readonly safetyNotes: FieldRef<"MaintenanceTemplate", 'String'>
    readonly toolsRequired: FieldRef<"MaintenanceTemplate", 'String'>
    readonly partsRequired: FieldRef<"MaintenanceTemplate", 'String'>
    readonly isActive: FieldRef<"MaintenanceTemplate", 'Boolean'>
    readonly createdById: FieldRef<"MaintenanceTemplate", 'String'>
    readonly createdAt: FieldRef<"MaintenanceTemplate", 'DateTime'>
    readonly updatedAt: FieldRef<"MaintenanceTemplate", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * MaintenanceTemplate findUnique
   */
  export type MaintenanceTemplateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceTemplate to fetch.
     */
    where: MaintenanceTemplateWhereUniqueInput
  }

  /**
   * MaintenanceTemplate findUniqueOrThrow
   */
  export type MaintenanceTemplateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceTemplate to fetch.
     */
    where: MaintenanceTemplateWhereUniqueInput
  }

  /**
   * MaintenanceTemplate findFirst
   */
  export type MaintenanceTemplateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceTemplate to fetch.
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceTemplates to fetch.
     */
    orderBy?: MaintenanceTemplateOrderByWithRelationInput | MaintenanceTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaintenanceTemplates.
     */
    cursor?: MaintenanceTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaintenanceTemplates.
     */
    distinct?: MaintenanceTemplateScalarFieldEnum | MaintenanceTemplateScalarFieldEnum[]
  }

  /**
   * MaintenanceTemplate findFirstOrThrow
   */
  export type MaintenanceTemplateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceTemplate to fetch.
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceTemplates to fetch.
     */
    orderBy?: MaintenanceTemplateOrderByWithRelationInput | MaintenanceTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MaintenanceTemplates.
     */
    cursor?: MaintenanceTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceTemplates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MaintenanceTemplates.
     */
    distinct?: MaintenanceTemplateScalarFieldEnum | MaintenanceTemplateScalarFieldEnum[]
  }

  /**
   * MaintenanceTemplate findMany
   */
  export type MaintenanceTemplateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * Filter, which MaintenanceTemplates to fetch.
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MaintenanceTemplates to fetch.
     */
    orderBy?: MaintenanceTemplateOrderByWithRelationInput | MaintenanceTemplateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MaintenanceTemplates.
     */
    cursor?: MaintenanceTemplateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MaintenanceTemplates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MaintenanceTemplates.
     */
    skip?: number
    distinct?: MaintenanceTemplateScalarFieldEnum | MaintenanceTemplateScalarFieldEnum[]
  }

  /**
   * MaintenanceTemplate create
   */
  export type MaintenanceTemplateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * The data needed to create a MaintenanceTemplate.
     */
    data: XOR<MaintenanceTemplateCreateInput, MaintenanceTemplateUncheckedCreateInput>
  }

  /**
   * MaintenanceTemplate createMany
   */
  export type MaintenanceTemplateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MaintenanceTemplates.
     */
    data: MaintenanceTemplateCreateManyInput | MaintenanceTemplateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MaintenanceTemplate createManyAndReturn
   */
  export type MaintenanceTemplateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * The data used to create many MaintenanceTemplates.
     */
    data: MaintenanceTemplateCreateManyInput | MaintenanceTemplateCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaintenanceTemplate update
   */
  export type MaintenanceTemplateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * The data needed to update a MaintenanceTemplate.
     */
    data: XOR<MaintenanceTemplateUpdateInput, MaintenanceTemplateUncheckedUpdateInput>
    /**
     * Choose, which MaintenanceTemplate to update.
     */
    where: MaintenanceTemplateWhereUniqueInput
  }

  /**
   * MaintenanceTemplate updateMany
   */
  export type MaintenanceTemplateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MaintenanceTemplates.
     */
    data: XOR<MaintenanceTemplateUpdateManyMutationInput, MaintenanceTemplateUncheckedUpdateManyInput>
    /**
     * Filter which MaintenanceTemplates to update
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * Limit how many MaintenanceTemplates to update.
     */
    limit?: number
  }

  /**
   * MaintenanceTemplate updateManyAndReturn
   */
  export type MaintenanceTemplateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * The data used to update MaintenanceTemplates.
     */
    data: XOR<MaintenanceTemplateUpdateManyMutationInput, MaintenanceTemplateUncheckedUpdateManyInput>
    /**
     * Filter which MaintenanceTemplates to update
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * Limit how many MaintenanceTemplates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * MaintenanceTemplate upsert
   */
  export type MaintenanceTemplateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * The filter to search for the MaintenanceTemplate to update in case it exists.
     */
    where: MaintenanceTemplateWhereUniqueInput
    /**
     * In case the MaintenanceTemplate found by the `where` argument doesn't exist, create a new MaintenanceTemplate with this data.
     */
    create: XOR<MaintenanceTemplateCreateInput, MaintenanceTemplateUncheckedCreateInput>
    /**
     * In case the MaintenanceTemplate was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MaintenanceTemplateUpdateInput, MaintenanceTemplateUncheckedUpdateInput>
  }

  /**
   * MaintenanceTemplate delete
   */
  export type MaintenanceTemplateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
    /**
     * Filter which MaintenanceTemplate to delete.
     */
    where: MaintenanceTemplateWhereUniqueInput
  }

  /**
   * MaintenanceTemplate deleteMany
   */
  export type MaintenanceTemplateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MaintenanceTemplates to delete
     */
    where?: MaintenanceTemplateWhereInput
    /**
     * Limit how many MaintenanceTemplates to delete.
     */
    limit?: number
  }

  /**
   * MaintenanceTemplate.schedules
   */
  export type MaintenanceTemplate$schedulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceSchedule
     */
    select?: MaintenanceScheduleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceSchedule
     */
    omit?: MaintenanceScheduleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceScheduleInclude<ExtArgs> | null
    where?: MaintenanceScheduleWhereInput
    orderBy?: MaintenanceScheduleOrderByWithRelationInput | MaintenanceScheduleOrderByWithRelationInput[]
    cursor?: MaintenanceScheduleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScheduleScalarFieldEnum | MaintenanceScheduleScalarFieldEnum[]
  }

  /**
   * MaintenanceTemplate.maintenanceTasks
   */
  export type MaintenanceTemplate$maintenanceTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Maintenance
     */
    select?: MaintenanceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Maintenance
     */
    omit?: MaintenanceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceInclude<ExtArgs> | null
    where?: MaintenanceWhereInput
    orderBy?: MaintenanceOrderByWithRelationInput | MaintenanceOrderByWithRelationInput[]
    cursor?: MaintenanceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MaintenanceScalarFieldEnum | MaintenanceScalarFieldEnum[]
  }

  /**
   * MaintenanceTemplate without action
   */
  export type MaintenanceTemplateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MaintenanceTemplate
     */
    select?: MaintenanceTemplateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the MaintenanceTemplate
     */
    omit?: MaintenanceTemplateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MaintenanceTemplateInclude<ExtArgs> | null
  }


  /**
   * Model AssetAudit
   */

  export type AggregateAssetAudit = {
    _count: AssetAuditCountAggregateOutputType | null
    _min: AssetAuditMinAggregateOutputType | null
    _max: AssetAuditMaxAggregateOutputType | null
  }

  export type AssetAuditMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    auditDate: Date | null
    auditedBy: string | null
    auditorId: string | null
    status: $Enums.AuditStatus | null
    workflowStatus: $Enums.AuditWorkflowStatus | null
    condition: $Enums.AuditCondition | null
    locationVerified: boolean | null
    actualLocation: string | null
    notes: string | null
    discrepancies: string | null
    recommendations: string | null
    checklistItems: string | null
    discrepancyResolved: boolean | null
    resolvedDate: Date | null
    resolvedBy: string | null
    resolutionNotes: string | null
    photoUrls: string | null
    nextAuditDate: Date | null
    assignmentId: string | null
    requestId: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    reviewNotes: string | null
    managerApproval: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AssetAuditMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    auditDate: Date | null
    auditedBy: string | null
    auditorId: string | null
    status: $Enums.AuditStatus | null
    workflowStatus: $Enums.AuditWorkflowStatus | null
    condition: $Enums.AuditCondition | null
    locationVerified: boolean | null
    actualLocation: string | null
    notes: string | null
    discrepancies: string | null
    recommendations: string | null
    checklistItems: string | null
    discrepancyResolved: boolean | null
    resolvedDate: Date | null
    resolvedBy: string | null
    resolutionNotes: string | null
    photoUrls: string | null
    nextAuditDate: Date | null
    assignmentId: string | null
    requestId: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    reviewNotes: string | null
    managerApproval: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AssetAuditCountAggregateOutputType = {
    id: number
    assetId: number
    auditDate: number
    auditedBy: number
    auditorId: number
    status: number
    workflowStatus: number
    condition: number
    locationVerified: number
    actualLocation: number
    notes: number
    discrepancies: number
    recommendations: number
    checklistItems: number
    discrepancyResolved: number
    resolvedDate: number
    resolvedBy: number
    resolutionNotes: number
    photoUrls: number
    nextAuditDate: number
    assignmentId: number
    requestId: number
    reviewedBy: number
    reviewedAt: number
    reviewNotes: number
    managerApproval: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AssetAuditMinAggregateInputType = {
    id?: true
    assetId?: true
    auditDate?: true
    auditedBy?: true
    auditorId?: true
    status?: true
    workflowStatus?: true
    condition?: true
    locationVerified?: true
    actualLocation?: true
    notes?: true
    discrepancies?: true
    recommendations?: true
    checklistItems?: true
    discrepancyResolved?: true
    resolvedDate?: true
    resolvedBy?: true
    resolutionNotes?: true
    photoUrls?: true
    nextAuditDate?: true
    assignmentId?: true
    requestId?: true
    reviewedBy?: true
    reviewedAt?: true
    reviewNotes?: true
    managerApproval?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AssetAuditMaxAggregateInputType = {
    id?: true
    assetId?: true
    auditDate?: true
    auditedBy?: true
    auditorId?: true
    status?: true
    workflowStatus?: true
    condition?: true
    locationVerified?: true
    actualLocation?: true
    notes?: true
    discrepancies?: true
    recommendations?: true
    checklistItems?: true
    discrepancyResolved?: true
    resolvedDate?: true
    resolvedBy?: true
    resolutionNotes?: true
    photoUrls?: true
    nextAuditDate?: true
    assignmentId?: true
    requestId?: true
    reviewedBy?: true
    reviewedAt?: true
    reviewNotes?: true
    managerApproval?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AssetAuditCountAggregateInputType = {
    id?: true
    assetId?: true
    auditDate?: true
    auditedBy?: true
    auditorId?: true
    status?: true
    workflowStatus?: true
    condition?: true
    locationVerified?: true
    actualLocation?: true
    notes?: true
    discrepancies?: true
    recommendations?: true
    checklistItems?: true
    discrepancyResolved?: true
    resolvedDate?: true
    resolvedBy?: true
    resolutionNotes?: true
    photoUrls?: true
    nextAuditDate?: true
    assignmentId?: true
    requestId?: true
    reviewedBy?: true
    reviewedAt?: true
    reviewNotes?: true
    managerApproval?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AssetAuditAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssetAudit to aggregate.
     */
    where?: AssetAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetAudits to fetch.
     */
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AssetAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AssetAudits
    **/
    _count?: true | AssetAuditCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AssetAuditMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AssetAuditMaxAggregateInputType
  }

  export type GetAssetAuditAggregateType<T extends AssetAuditAggregateArgs> = {
        [P in keyof T & keyof AggregateAssetAudit]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAssetAudit[P]>
      : GetScalarType<T[P], AggregateAssetAudit[P]>
  }




  export type AssetAuditGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AssetAuditWhereInput
    orderBy?: AssetAuditOrderByWithAggregationInput | AssetAuditOrderByWithAggregationInput[]
    by: AssetAuditScalarFieldEnum[] | AssetAuditScalarFieldEnum
    having?: AssetAuditScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AssetAuditCountAggregateInputType | true
    _min?: AssetAuditMinAggregateInputType
    _max?: AssetAuditMaxAggregateInputType
  }

  export type AssetAuditGroupByOutputType = {
    id: string
    assetId: string
    auditDate: Date
    auditedBy: string
    auditorId: string | null
    status: $Enums.AuditStatus
    workflowStatus: $Enums.AuditWorkflowStatus
    condition: $Enums.AuditCondition | null
    locationVerified: boolean
    actualLocation: string | null
    notes: string | null
    discrepancies: string | null
    recommendations: string | null
    checklistItems: string | null
    discrepancyResolved: boolean
    resolvedDate: Date | null
    resolvedBy: string | null
    resolutionNotes: string | null
    photoUrls: string | null
    nextAuditDate: Date | null
    assignmentId: string | null
    requestId: string | null
    reviewedBy: string | null
    reviewedAt: Date | null
    reviewNotes: string | null
    managerApproval: boolean | null
    createdAt: Date
    updatedAt: Date
    _count: AssetAuditCountAggregateOutputType | null
    _min: AssetAuditMinAggregateOutputType | null
    _max: AssetAuditMaxAggregateOutputType | null
  }

  type GetAssetAuditGroupByPayload<T extends AssetAuditGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AssetAuditGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AssetAuditGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AssetAuditGroupByOutputType[P]>
            : GetScalarType<T[P], AssetAuditGroupByOutputType[P]>
        }
      >
    >


  export type AssetAuditSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    auditDate?: boolean
    auditedBy?: boolean
    auditorId?: boolean
    status?: boolean
    workflowStatus?: boolean
    condition?: boolean
    locationVerified?: boolean
    actualLocation?: boolean
    notes?: boolean
    discrepancies?: boolean
    recommendations?: boolean
    checklistItems?: boolean
    discrepancyResolved?: boolean
    resolvedDate?: boolean
    resolvedBy?: boolean
    resolutionNotes?: boolean
    photoUrls?: boolean
    nextAuditDate?: boolean
    assignmentId?: boolean
    requestId?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    managerApproval?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    auditor?: boolean | AssetAudit$auditorArgs<ExtArgs>
    assignment?: boolean | AssetAudit$assignmentArgs<ExtArgs>
    request?: boolean | AssetAudit$requestArgs<ExtArgs>
  }, ExtArgs["result"]["assetAudit"]>

  export type AssetAuditSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    auditDate?: boolean
    auditedBy?: boolean
    auditorId?: boolean
    status?: boolean
    workflowStatus?: boolean
    condition?: boolean
    locationVerified?: boolean
    actualLocation?: boolean
    notes?: boolean
    discrepancies?: boolean
    recommendations?: boolean
    checklistItems?: boolean
    discrepancyResolved?: boolean
    resolvedDate?: boolean
    resolvedBy?: boolean
    resolutionNotes?: boolean
    photoUrls?: boolean
    nextAuditDate?: boolean
    assignmentId?: boolean
    requestId?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    managerApproval?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    auditor?: boolean | AssetAudit$auditorArgs<ExtArgs>
    assignment?: boolean | AssetAudit$assignmentArgs<ExtArgs>
    request?: boolean | AssetAudit$requestArgs<ExtArgs>
  }, ExtArgs["result"]["assetAudit"]>

  export type AssetAuditSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    auditDate?: boolean
    auditedBy?: boolean
    auditorId?: boolean
    status?: boolean
    workflowStatus?: boolean
    condition?: boolean
    locationVerified?: boolean
    actualLocation?: boolean
    notes?: boolean
    discrepancies?: boolean
    recommendations?: boolean
    checklistItems?: boolean
    discrepancyResolved?: boolean
    resolvedDate?: boolean
    resolvedBy?: boolean
    resolutionNotes?: boolean
    photoUrls?: boolean
    nextAuditDate?: boolean
    assignmentId?: boolean
    requestId?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    managerApproval?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    auditor?: boolean | AssetAudit$auditorArgs<ExtArgs>
    assignment?: boolean | AssetAudit$assignmentArgs<ExtArgs>
    request?: boolean | AssetAudit$requestArgs<ExtArgs>
  }, ExtArgs["result"]["assetAudit"]>

  export type AssetAuditSelectScalar = {
    id?: boolean
    assetId?: boolean
    auditDate?: boolean
    auditedBy?: boolean
    auditorId?: boolean
    status?: boolean
    workflowStatus?: boolean
    condition?: boolean
    locationVerified?: boolean
    actualLocation?: boolean
    notes?: boolean
    discrepancies?: boolean
    recommendations?: boolean
    checklistItems?: boolean
    discrepancyResolved?: boolean
    resolvedDate?: boolean
    resolvedBy?: boolean
    resolutionNotes?: boolean
    photoUrls?: boolean
    nextAuditDate?: boolean
    assignmentId?: boolean
    requestId?: boolean
    reviewedBy?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    managerApproval?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AssetAuditOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "auditDate" | "auditedBy" | "auditorId" | "status" | "workflowStatus" | "condition" | "locationVerified" | "actualLocation" | "notes" | "discrepancies" | "recommendations" | "checklistItems" | "discrepancyResolved" | "resolvedDate" | "resolvedBy" | "resolutionNotes" | "photoUrls" | "nextAuditDate" | "assignmentId" | "requestId" | "reviewedBy" | "reviewedAt" | "reviewNotes" | "managerApproval" | "createdAt" | "updatedAt", ExtArgs["result"]["assetAudit"]>
  export type AssetAuditInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    auditor?: boolean | AssetAudit$auditorArgs<ExtArgs>
    assignment?: boolean | AssetAudit$assignmentArgs<ExtArgs>
    request?: boolean | AssetAudit$requestArgs<ExtArgs>
  }
  export type AssetAuditIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    auditor?: boolean | AssetAudit$auditorArgs<ExtArgs>
    assignment?: boolean | AssetAudit$assignmentArgs<ExtArgs>
    request?: boolean | AssetAudit$requestArgs<ExtArgs>
  }
  export type AssetAuditIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    auditor?: boolean | AssetAudit$auditorArgs<ExtArgs>
    assignment?: boolean | AssetAudit$assignmentArgs<ExtArgs>
    request?: boolean | AssetAudit$requestArgs<ExtArgs>
  }

  export type $AssetAuditPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AssetAudit"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      auditor: Prisma.$UserPayload<ExtArgs> | null
      assignment: Prisma.$AuditAssignmentPayload<ExtArgs> | null
      request: Prisma.$AuditRequestPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      auditDate: Date
      auditedBy: string
      auditorId: string | null
      status: $Enums.AuditStatus
      workflowStatus: $Enums.AuditWorkflowStatus
      condition: $Enums.AuditCondition | null
      locationVerified: boolean
      actualLocation: string | null
      notes: string | null
      discrepancies: string | null
      recommendations: string | null
      checklistItems: string | null
      discrepancyResolved: boolean
      resolvedDate: Date | null
      resolvedBy: string | null
      resolutionNotes: string | null
      photoUrls: string | null
      nextAuditDate: Date | null
      assignmentId: string | null
      requestId: string | null
      reviewedBy: string | null
      reviewedAt: Date | null
      reviewNotes: string | null
      managerApproval: boolean | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["assetAudit"]>
    composites: {}
  }

  type AssetAuditGetPayload<S extends boolean | null | undefined | AssetAuditDefaultArgs> = $Result.GetResult<Prisma.$AssetAuditPayload, S>

  type AssetAuditCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AssetAuditFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AssetAuditCountAggregateInputType | true
    }

  export interface AssetAuditDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AssetAudit'], meta: { name: 'AssetAudit' } }
    /**
     * Find zero or one AssetAudit that matches the filter.
     * @param {AssetAuditFindUniqueArgs} args - Arguments to find a AssetAudit
     * @example
     * // Get one AssetAudit
     * const assetAudit = await prisma.assetAudit.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AssetAuditFindUniqueArgs>(args: SelectSubset<T, AssetAuditFindUniqueArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AssetAudit that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AssetAuditFindUniqueOrThrowArgs} args - Arguments to find a AssetAudit
     * @example
     * // Get one AssetAudit
     * const assetAudit = await prisma.assetAudit.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AssetAuditFindUniqueOrThrowArgs>(args: SelectSubset<T, AssetAuditFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssetAudit that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditFindFirstArgs} args - Arguments to find a AssetAudit
     * @example
     * // Get one AssetAudit
     * const assetAudit = await prisma.assetAudit.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AssetAuditFindFirstArgs>(args?: SelectSubset<T, AssetAuditFindFirstArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AssetAudit that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditFindFirstOrThrowArgs} args - Arguments to find a AssetAudit
     * @example
     * // Get one AssetAudit
     * const assetAudit = await prisma.assetAudit.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AssetAuditFindFirstOrThrowArgs>(args?: SelectSubset<T, AssetAuditFindFirstOrThrowArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AssetAudits that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AssetAudits
     * const assetAudits = await prisma.assetAudit.findMany()
     * 
     * // Get first 10 AssetAudits
     * const assetAudits = await prisma.assetAudit.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const assetAuditWithIdOnly = await prisma.assetAudit.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AssetAuditFindManyArgs>(args?: SelectSubset<T, AssetAuditFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AssetAudit.
     * @param {AssetAuditCreateArgs} args - Arguments to create a AssetAudit.
     * @example
     * // Create one AssetAudit
     * const AssetAudit = await prisma.assetAudit.create({
     *   data: {
     *     // ... data to create a AssetAudit
     *   }
     * })
     * 
     */
    create<T extends AssetAuditCreateArgs>(args: SelectSubset<T, AssetAuditCreateArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AssetAudits.
     * @param {AssetAuditCreateManyArgs} args - Arguments to create many AssetAudits.
     * @example
     * // Create many AssetAudits
     * const assetAudit = await prisma.assetAudit.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AssetAuditCreateManyArgs>(args?: SelectSubset<T, AssetAuditCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AssetAudits and returns the data saved in the database.
     * @param {AssetAuditCreateManyAndReturnArgs} args - Arguments to create many AssetAudits.
     * @example
     * // Create many AssetAudits
     * const assetAudit = await prisma.assetAudit.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AssetAudits and only return the `id`
     * const assetAuditWithIdOnly = await prisma.assetAudit.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AssetAuditCreateManyAndReturnArgs>(args?: SelectSubset<T, AssetAuditCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AssetAudit.
     * @param {AssetAuditDeleteArgs} args - Arguments to delete one AssetAudit.
     * @example
     * // Delete one AssetAudit
     * const AssetAudit = await prisma.assetAudit.delete({
     *   where: {
     *     // ... filter to delete one AssetAudit
     *   }
     * })
     * 
     */
    delete<T extends AssetAuditDeleteArgs>(args: SelectSubset<T, AssetAuditDeleteArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AssetAudit.
     * @param {AssetAuditUpdateArgs} args - Arguments to update one AssetAudit.
     * @example
     * // Update one AssetAudit
     * const assetAudit = await prisma.assetAudit.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AssetAuditUpdateArgs>(args: SelectSubset<T, AssetAuditUpdateArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AssetAudits.
     * @param {AssetAuditDeleteManyArgs} args - Arguments to filter AssetAudits to delete.
     * @example
     * // Delete a few AssetAudits
     * const { count } = await prisma.assetAudit.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AssetAuditDeleteManyArgs>(args?: SelectSubset<T, AssetAuditDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssetAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AssetAudits
     * const assetAudit = await prisma.assetAudit.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AssetAuditUpdateManyArgs>(args: SelectSubset<T, AssetAuditUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AssetAudits and returns the data updated in the database.
     * @param {AssetAuditUpdateManyAndReturnArgs} args - Arguments to update many AssetAudits.
     * @example
     * // Update many AssetAudits
     * const assetAudit = await prisma.assetAudit.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AssetAudits and only return the `id`
     * const assetAuditWithIdOnly = await prisma.assetAudit.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AssetAuditUpdateManyAndReturnArgs>(args: SelectSubset<T, AssetAuditUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AssetAudit.
     * @param {AssetAuditUpsertArgs} args - Arguments to update or create a AssetAudit.
     * @example
     * // Update or create a AssetAudit
     * const assetAudit = await prisma.assetAudit.upsert({
     *   create: {
     *     // ... data to create a AssetAudit
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AssetAudit we want to update
     *   }
     * })
     */
    upsert<T extends AssetAuditUpsertArgs>(args: SelectSubset<T, AssetAuditUpsertArgs<ExtArgs>>): Prisma__AssetAuditClient<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AssetAudits.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditCountArgs} args - Arguments to filter AssetAudits to count.
     * @example
     * // Count the number of AssetAudits
     * const count = await prisma.assetAudit.count({
     *   where: {
     *     // ... the filter for the AssetAudits we want to count
     *   }
     * })
    **/
    count<T extends AssetAuditCountArgs>(
      args?: Subset<T, AssetAuditCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AssetAuditCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AssetAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AssetAuditAggregateArgs>(args: Subset<T, AssetAuditAggregateArgs>): Prisma.PrismaPromise<GetAssetAuditAggregateType<T>>

    /**
     * Group by AssetAudit.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AssetAuditGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AssetAuditGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AssetAuditGroupByArgs['orderBy'] }
        : { orderBy?: AssetAuditGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AssetAuditGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAssetAuditGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AssetAudit model
   */
  readonly fields: AssetAuditFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AssetAudit.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AssetAuditClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    auditor<T extends AssetAudit$auditorArgs<ExtArgs> = {}>(args?: Subset<T, AssetAudit$auditorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    assignment<T extends AssetAudit$assignmentArgs<ExtArgs> = {}>(args?: Subset<T, AssetAudit$assignmentArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    request<T extends AssetAudit$requestArgs<ExtArgs> = {}>(args?: Subset<T, AssetAudit$requestArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AssetAudit model
   */
  interface AssetAuditFieldRefs {
    readonly id: FieldRef<"AssetAudit", 'String'>
    readonly assetId: FieldRef<"AssetAudit", 'String'>
    readonly auditDate: FieldRef<"AssetAudit", 'DateTime'>
    readonly auditedBy: FieldRef<"AssetAudit", 'String'>
    readonly auditorId: FieldRef<"AssetAudit", 'String'>
    readonly status: FieldRef<"AssetAudit", 'AuditStatus'>
    readonly workflowStatus: FieldRef<"AssetAudit", 'AuditWorkflowStatus'>
    readonly condition: FieldRef<"AssetAudit", 'AuditCondition'>
    readonly locationVerified: FieldRef<"AssetAudit", 'Boolean'>
    readonly actualLocation: FieldRef<"AssetAudit", 'String'>
    readonly notes: FieldRef<"AssetAudit", 'String'>
    readonly discrepancies: FieldRef<"AssetAudit", 'String'>
    readonly recommendations: FieldRef<"AssetAudit", 'String'>
    readonly checklistItems: FieldRef<"AssetAudit", 'String'>
    readonly discrepancyResolved: FieldRef<"AssetAudit", 'Boolean'>
    readonly resolvedDate: FieldRef<"AssetAudit", 'DateTime'>
    readonly resolvedBy: FieldRef<"AssetAudit", 'String'>
    readonly resolutionNotes: FieldRef<"AssetAudit", 'String'>
    readonly photoUrls: FieldRef<"AssetAudit", 'String'>
    readonly nextAuditDate: FieldRef<"AssetAudit", 'DateTime'>
    readonly assignmentId: FieldRef<"AssetAudit", 'String'>
    readonly requestId: FieldRef<"AssetAudit", 'String'>
    readonly reviewedBy: FieldRef<"AssetAudit", 'String'>
    readonly reviewedAt: FieldRef<"AssetAudit", 'DateTime'>
    readonly reviewNotes: FieldRef<"AssetAudit", 'String'>
    readonly managerApproval: FieldRef<"AssetAudit", 'Boolean'>
    readonly createdAt: FieldRef<"AssetAudit", 'DateTime'>
    readonly updatedAt: FieldRef<"AssetAudit", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AssetAudit findUnique
   */
  export type AssetAuditFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * Filter, which AssetAudit to fetch.
     */
    where: AssetAuditWhereUniqueInput
  }

  /**
   * AssetAudit findUniqueOrThrow
   */
  export type AssetAuditFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * Filter, which AssetAudit to fetch.
     */
    where: AssetAuditWhereUniqueInput
  }

  /**
   * AssetAudit findFirst
   */
  export type AssetAuditFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * Filter, which AssetAudit to fetch.
     */
    where?: AssetAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetAudits to fetch.
     */
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssetAudits.
     */
    cursor?: AssetAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssetAudits.
     */
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * AssetAudit findFirstOrThrow
   */
  export type AssetAuditFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * Filter, which AssetAudit to fetch.
     */
    where?: AssetAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetAudits to fetch.
     */
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AssetAudits.
     */
    cursor?: AssetAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetAudits.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AssetAudits.
     */
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * AssetAudit findMany
   */
  export type AssetAuditFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * Filter, which AssetAudits to fetch.
     */
    where?: AssetAuditWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AssetAudits to fetch.
     */
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AssetAudits.
     */
    cursor?: AssetAuditWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AssetAudits from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AssetAudits.
     */
    skip?: number
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * AssetAudit create
   */
  export type AssetAuditCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * The data needed to create a AssetAudit.
     */
    data: XOR<AssetAuditCreateInput, AssetAuditUncheckedCreateInput>
  }

  /**
   * AssetAudit createMany
   */
  export type AssetAuditCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AssetAudits.
     */
    data: AssetAuditCreateManyInput | AssetAuditCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AssetAudit createManyAndReturn
   */
  export type AssetAuditCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * The data used to create many AssetAudits.
     */
    data: AssetAuditCreateManyInput | AssetAuditCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssetAudit update
   */
  export type AssetAuditUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * The data needed to update a AssetAudit.
     */
    data: XOR<AssetAuditUpdateInput, AssetAuditUncheckedUpdateInput>
    /**
     * Choose, which AssetAudit to update.
     */
    where: AssetAuditWhereUniqueInput
  }

  /**
   * AssetAudit updateMany
   */
  export type AssetAuditUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AssetAudits.
     */
    data: XOR<AssetAuditUpdateManyMutationInput, AssetAuditUncheckedUpdateManyInput>
    /**
     * Filter which AssetAudits to update
     */
    where?: AssetAuditWhereInput
    /**
     * Limit how many AssetAudits to update.
     */
    limit?: number
  }

  /**
   * AssetAudit updateManyAndReturn
   */
  export type AssetAuditUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * The data used to update AssetAudits.
     */
    data: XOR<AssetAuditUpdateManyMutationInput, AssetAuditUncheckedUpdateManyInput>
    /**
     * Filter which AssetAudits to update
     */
    where?: AssetAuditWhereInput
    /**
     * Limit how many AssetAudits to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AssetAudit upsert
   */
  export type AssetAuditUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * The filter to search for the AssetAudit to update in case it exists.
     */
    where: AssetAuditWhereUniqueInput
    /**
     * In case the AssetAudit found by the `where` argument doesn't exist, create a new AssetAudit with this data.
     */
    create: XOR<AssetAuditCreateInput, AssetAuditUncheckedCreateInput>
    /**
     * In case the AssetAudit was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AssetAuditUpdateInput, AssetAuditUncheckedUpdateInput>
  }

  /**
   * AssetAudit delete
   */
  export type AssetAuditDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    /**
     * Filter which AssetAudit to delete.
     */
    where: AssetAuditWhereUniqueInput
  }

  /**
   * AssetAudit deleteMany
   */
  export type AssetAuditDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AssetAudits to delete
     */
    where?: AssetAuditWhereInput
    /**
     * Limit how many AssetAudits to delete.
     */
    limit?: number
  }

  /**
   * AssetAudit.auditor
   */
  export type AssetAudit$auditorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AssetAudit.assignment
   */
  export type AssetAudit$assignmentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    where?: AuditAssignmentWhereInput
  }

  /**
   * AssetAudit.request
   */
  export type AssetAudit$requestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    where?: AuditRequestWhereInput
  }

  /**
   * AssetAudit without action
   */
  export type AssetAuditDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
  }


  /**
   * Model AuditAssignment
   */

  export type AggregateAuditAssignment = {
    _count: AuditAssignmentCountAggregateOutputType | null
    _avg: AuditAssignmentAvgAggregateOutputType | null
    _sum: AuditAssignmentSumAggregateOutputType | null
    _min: AuditAssignmentMinAggregateOutputType | null
    _max: AuditAssignmentMaxAggregateOutputType | null
  }

  export type AuditAssignmentAvgAggregateOutputType = {
    estimatedHours: number | null
    actualHours: number | null
    remindersSent: number | null
  }

  export type AuditAssignmentSumAggregateOutputType = {
    estimatedHours: number | null
    actualHours: number | null
    remindersSent: number | null
  }

  export type AuditAssignmentMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    assignedToId: string | null
    assignedById: string | null
    title: string | null
    description: string | null
    priority: $Enums.MaintenancePriority | null
    dueDate: Date | null
    scheduledDate: Date | null
    status: $Enums.AuditAssignmentStatus | null
    instructions: string | null
    checklistItems: string | null
    estimatedHours: number | null
    actualHours: number | null
    acceptedAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancellationReason: string | null
    notificationSent: boolean | null
    remindersSent: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AuditAssignmentMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    assignedToId: string | null
    assignedById: string | null
    title: string | null
    description: string | null
    priority: $Enums.MaintenancePriority | null
    dueDate: Date | null
    scheduledDate: Date | null
    status: $Enums.AuditAssignmentStatus | null
    instructions: string | null
    checklistItems: string | null
    estimatedHours: number | null
    actualHours: number | null
    acceptedAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancellationReason: string | null
    notificationSent: boolean | null
    remindersSent: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AuditAssignmentCountAggregateOutputType = {
    id: number
    assetId: number
    assignedToId: number
    assignedById: number
    title: number
    description: number
    priority: number
    dueDate: number
    scheduledDate: number
    status: number
    instructions: number
    checklistItems: number
    estimatedHours: number
    actualHours: number
    acceptedAt: number
    startedAt: number
    completedAt: number
    cancelledAt: number
    cancellationReason: number
    notificationSent: number
    remindersSent: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AuditAssignmentAvgAggregateInputType = {
    estimatedHours?: true
    actualHours?: true
    remindersSent?: true
  }

  export type AuditAssignmentSumAggregateInputType = {
    estimatedHours?: true
    actualHours?: true
    remindersSent?: true
  }

  export type AuditAssignmentMinAggregateInputType = {
    id?: true
    assetId?: true
    assignedToId?: true
    assignedById?: true
    title?: true
    description?: true
    priority?: true
    dueDate?: true
    scheduledDate?: true
    status?: true
    instructions?: true
    checklistItems?: true
    estimatedHours?: true
    actualHours?: true
    acceptedAt?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancellationReason?: true
    notificationSent?: true
    remindersSent?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AuditAssignmentMaxAggregateInputType = {
    id?: true
    assetId?: true
    assignedToId?: true
    assignedById?: true
    title?: true
    description?: true
    priority?: true
    dueDate?: true
    scheduledDate?: true
    status?: true
    instructions?: true
    checklistItems?: true
    estimatedHours?: true
    actualHours?: true
    acceptedAt?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancellationReason?: true
    notificationSent?: true
    remindersSent?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AuditAssignmentCountAggregateInputType = {
    id?: true
    assetId?: true
    assignedToId?: true
    assignedById?: true
    title?: true
    description?: true
    priority?: true
    dueDate?: true
    scheduledDate?: true
    status?: true
    instructions?: true
    checklistItems?: true
    estimatedHours?: true
    actualHours?: true
    acceptedAt?: true
    startedAt?: true
    completedAt?: true
    cancelledAt?: true
    cancellationReason?: true
    notificationSent?: true
    remindersSent?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AuditAssignmentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditAssignment to aggregate.
     */
    where?: AuditAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditAssignments to fetch.
     */
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditAssignments
    **/
    _count?: true | AuditAssignmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AuditAssignmentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AuditAssignmentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditAssignmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditAssignmentMaxAggregateInputType
  }

  export type GetAuditAssignmentAggregateType<T extends AuditAssignmentAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditAssignment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditAssignment[P]>
      : GetScalarType<T[P], AggregateAuditAssignment[P]>
  }




  export type AuditAssignmentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditAssignmentWhereInput
    orderBy?: AuditAssignmentOrderByWithAggregationInput | AuditAssignmentOrderByWithAggregationInput[]
    by: AuditAssignmentScalarFieldEnum[] | AuditAssignmentScalarFieldEnum
    having?: AuditAssignmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditAssignmentCountAggregateInputType | true
    _avg?: AuditAssignmentAvgAggregateInputType
    _sum?: AuditAssignmentSumAggregateInputType
    _min?: AuditAssignmentMinAggregateInputType
    _max?: AuditAssignmentMaxAggregateInputType
  }

  export type AuditAssignmentGroupByOutputType = {
    id: string
    assetId: string
    assignedToId: string
    assignedById: string
    title: string
    description: string | null
    priority: $Enums.MaintenancePriority
    dueDate: Date
    scheduledDate: Date | null
    status: $Enums.AuditAssignmentStatus
    instructions: string | null
    checklistItems: string | null
    estimatedHours: number | null
    actualHours: number | null
    acceptedAt: Date | null
    startedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    cancellationReason: string | null
    notificationSent: boolean
    remindersSent: number
    createdAt: Date
    updatedAt: Date
    _count: AuditAssignmentCountAggregateOutputType | null
    _avg: AuditAssignmentAvgAggregateOutputType | null
    _sum: AuditAssignmentSumAggregateOutputType | null
    _min: AuditAssignmentMinAggregateOutputType | null
    _max: AuditAssignmentMaxAggregateOutputType | null
  }

  type GetAuditAssignmentGroupByPayload<T extends AuditAssignmentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditAssignmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditAssignmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditAssignmentGroupByOutputType[P]>
            : GetScalarType<T[P], AuditAssignmentGroupByOutputType[P]>
        }
      >
    >


  export type AuditAssignmentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    assignedToId?: boolean
    assignedById?: boolean
    title?: boolean
    description?: boolean
    priority?: boolean
    dueDate?: boolean
    scheduledDate?: boolean
    status?: boolean
    instructions?: boolean
    checklistItems?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancellationReason?: boolean
    notificationSent?: boolean
    remindersSent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    assignedTo?: boolean | UserDefaultArgs<ExtArgs>
    assignedBy?: boolean | UserDefaultArgs<ExtArgs>
    audits?: boolean | AuditAssignment$auditsArgs<ExtArgs>
    _count?: boolean | AuditAssignmentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditAssignment"]>

  export type AuditAssignmentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    assignedToId?: boolean
    assignedById?: boolean
    title?: boolean
    description?: boolean
    priority?: boolean
    dueDate?: boolean
    scheduledDate?: boolean
    status?: boolean
    instructions?: boolean
    checklistItems?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancellationReason?: boolean
    notificationSent?: boolean
    remindersSent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    assignedTo?: boolean | UserDefaultArgs<ExtArgs>
    assignedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditAssignment"]>

  export type AuditAssignmentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    assignedToId?: boolean
    assignedById?: boolean
    title?: boolean
    description?: boolean
    priority?: boolean
    dueDate?: boolean
    scheduledDate?: boolean
    status?: boolean
    instructions?: boolean
    checklistItems?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancellationReason?: boolean
    notificationSent?: boolean
    remindersSent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    assignedTo?: boolean | UserDefaultArgs<ExtArgs>
    assignedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditAssignment"]>

  export type AuditAssignmentSelectScalar = {
    id?: boolean
    assetId?: boolean
    assignedToId?: boolean
    assignedById?: boolean
    title?: boolean
    description?: boolean
    priority?: boolean
    dueDate?: boolean
    scheduledDate?: boolean
    status?: boolean
    instructions?: boolean
    checklistItems?: boolean
    estimatedHours?: boolean
    actualHours?: boolean
    acceptedAt?: boolean
    startedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    cancellationReason?: boolean
    notificationSent?: boolean
    remindersSent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AuditAssignmentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "assignedToId" | "assignedById" | "title" | "description" | "priority" | "dueDate" | "scheduledDate" | "status" | "instructions" | "checklistItems" | "estimatedHours" | "actualHours" | "acceptedAt" | "startedAt" | "completedAt" | "cancelledAt" | "cancellationReason" | "notificationSent" | "remindersSent" | "createdAt" | "updatedAt", ExtArgs["result"]["auditAssignment"]>
  export type AuditAssignmentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    assignedTo?: boolean | UserDefaultArgs<ExtArgs>
    assignedBy?: boolean | UserDefaultArgs<ExtArgs>
    audits?: boolean | AuditAssignment$auditsArgs<ExtArgs>
    _count?: boolean | AuditAssignmentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AuditAssignmentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    assignedTo?: boolean | UserDefaultArgs<ExtArgs>
    assignedBy?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AuditAssignmentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    assignedTo?: boolean | UserDefaultArgs<ExtArgs>
    assignedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AuditAssignmentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditAssignment"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      assignedTo: Prisma.$UserPayload<ExtArgs>
      assignedBy: Prisma.$UserPayload<ExtArgs>
      audits: Prisma.$AssetAuditPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      assignedToId: string
      assignedById: string
      title: string
      description: string | null
      priority: $Enums.MaintenancePriority
      dueDate: Date
      scheduledDate: Date | null
      status: $Enums.AuditAssignmentStatus
      instructions: string | null
      checklistItems: string | null
      estimatedHours: number | null
      actualHours: number | null
      acceptedAt: Date | null
      startedAt: Date | null
      completedAt: Date | null
      cancelledAt: Date | null
      cancellationReason: string | null
      notificationSent: boolean
      remindersSent: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["auditAssignment"]>
    composites: {}
  }

  type AuditAssignmentGetPayload<S extends boolean | null | undefined | AuditAssignmentDefaultArgs> = $Result.GetResult<Prisma.$AuditAssignmentPayload, S>

  type AuditAssignmentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AuditAssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AuditAssignmentCountAggregateInputType | true
    }

  export interface AuditAssignmentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditAssignment'], meta: { name: 'AuditAssignment' } }
    /**
     * Find zero or one AuditAssignment that matches the filter.
     * @param {AuditAssignmentFindUniqueArgs} args - Arguments to find a AuditAssignment
     * @example
     * // Get one AuditAssignment
     * const auditAssignment = await prisma.auditAssignment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditAssignmentFindUniqueArgs>(args: SelectSubset<T, AuditAssignmentFindUniqueArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AuditAssignment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AuditAssignmentFindUniqueOrThrowArgs} args - Arguments to find a AuditAssignment
     * @example
     * // Get one AuditAssignment
     * const auditAssignment = await prisma.auditAssignment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditAssignmentFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AuditAssignment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentFindFirstArgs} args - Arguments to find a AuditAssignment
     * @example
     * // Get one AuditAssignment
     * const auditAssignment = await prisma.auditAssignment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditAssignmentFindFirstArgs>(args?: SelectSubset<T, AuditAssignmentFindFirstArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AuditAssignment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentFindFirstOrThrowArgs} args - Arguments to find a AuditAssignment
     * @example
     * // Get one AuditAssignment
     * const auditAssignment = await prisma.auditAssignment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditAssignmentFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AuditAssignments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditAssignments
     * const auditAssignments = await prisma.auditAssignment.findMany()
     * 
     * // Get first 10 AuditAssignments
     * const auditAssignments = await prisma.auditAssignment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditAssignmentWithIdOnly = await prisma.auditAssignment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditAssignmentFindManyArgs>(args?: SelectSubset<T, AuditAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AuditAssignment.
     * @param {AuditAssignmentCreateArgs} args - Arguments to create a AuditAssignment.
     * @example
     * // Create one AuditAssignment
     * const AuditAssignment = await prisma.auditAssignment.create({
     *   data: {
     *     // ... data to create a AuditAssignment
     *   }
     * })
     * 
     */
    create<T extends AuditAssignmentCreateArgs>(args: SelectSubset<T, AuditAssignmentCreateArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AuditAssignments.
     * @param {AuditAssignmentCreateManyArgs} args - Arguments to create many AuditAssignments.
     * @example
     * // Create many AuditAssignments
     * const auditAssignment = await prisma.auditAssignment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditAssignmentCreateManyArgs>(args?: SelectSubset<T, AuditAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditAssignments and returns the data saved in the database.
     * @param {AuditAssignmentCreateManyAndReturnArgs} args - Arguments to create many AuditAssignments.
     * @example
     * // Create many AuditAssignments
     * const auditAssignment = await prisma.auditAssignment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditAssignments and only return the `id`
     * const auditAssignmentWithIdOnly = await prisma.auditAssignment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditAssignmentCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AuditAssignment.
     * @param {AuditAssignmentDeleteArgs} args - Arguments to delete one AuditAssignment.
     * @example
     * // Delete one AuditAssignment
     * const AuditAssignment = await prisma.auditAssignment.delete({
     *   where: {
     *     // ... filter to delete one AuditAssignment
     *   }
     * })
     * 
     */
    delete<T extends AuditAssignmentDeleteArgs>(args: SelectSubset<T, AuditAssignmentDeleteArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AuditAssignment.
     * @param {AuditAssignmentUpdateArgs} args - Arguments to update one AuditAssignment.
     * @example
     * // Update one AuditAssignment
     * const auditAssignment = await prisma.auditAssignment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditAssignmentUpdateArgs>(args: SelectSubset<T, AuditAssignmentUpdateArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AuditAssignments.
     * @param {AuditAssignmentDeleteManyArgs} args - Arguments to filter AuditAssignments to delete.
     * @example
     * // Delete a few AuditAssignments
     * const { count } = await prisma.auditAssignment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditAssignmentDeleteManyArgs>(args?: SelectSubset<T, AuditAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditAssignments
     * const auditAssignment = await prisma.auditAssignment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditAssignmentUpdateManyArgs>(args: SelectSubset<T, AuditAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditAssignments and returns the data updated in the database.
     * @param {AuditAssignmentUpdateManyAndReturnArgs} args - Arguments to update many AuditAssignments.
     * @example
     * // Update many AuditAssignments
     * const auditAssignment = await prisma.auditAssignment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AuditAssignments and only return the `id`
     * const auditAssignmentWithIdOnly = await prisma.auditAssignment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AuditAssignmentUpdateManyAndReturnArgs>(args: SelectSubset<T, AuditAssignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AuditAssignment.
     * @param {AuditAssignmentUpsertArgs} args - Arguments to update or create a AuditAssignment.
     * @example
     * // Update or create a AuditAssignment
     * const auditAssignment = await prisma.auditAssignment.upsert({
     *   create: {
     *     // ... data to create a AuditAssignment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditAssignment we want to update
     *   }
     * })
     */
    upsert<T extends AuditAssignmentUpsertArgs>(args: SelectSubset<T, AuditAssignmentUpsertArgs<ExtArgs>>): Prisma__AuditAssignmentClient<$Result.GetResult<Prisma.$AuditAssignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AuditAssignments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentCountArgs} args - Arguments to filter AuditAssignments to count.
     * @example
     * // Count the number of AuditAssignments
     * const count = await prisma.auditAssignment.count({
     *   where: {
     *     // ... the filter for the AuditAssignments we want to count
     *   }
     * })
    **/
    count<T extends AuditAssignmentCountArgs>(
      args?: Subset<T, AuditAssignmentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditAssignmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditAssignmentAggregateArgs>(args: Subset<T, AuditAssignmentAggregateArgs>): Prisma.PrismaPromise<GetAuditAssignmentAggregateType<T>>

    /**
     * Group by AuditAssignment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditAssignmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditAssignmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditAssignmentGroupByArgs['orderBy'] }
        : { orderBy?: AuditAssignmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditAssignment model
   */
  readonly fields: AuditAssignmentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditAssignment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditAssignmentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    assignedTo<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    assignedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    audits<T extends AuditAssignment$auditsArgs<ExtArgs> = {}>(args?: Subset<T, AuditAssignment$auditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditAssignment model
   */
  interface AuditAssignmentFieldRefs {
    readonly id: FieldRef<"AuditAssignment", 'String'>
    readonly assetId: FieldRef<"AuditAssignment", 'String'>
    readonly assignedToId: FieldRef<"AuditAssignment", 'String'>
    readonly assignedById: FieldRef<"AuditAssignment", 'String'>
    readonly title: FieldRef<"AuditAssignment", 'String'>
    readonly description: FieldRef<"AuditAssignment", 'String'>
    readonly priority: FieldRef<"AuditAssignment", 'MaintenancePriority'>
    readonly dueDate: FieldRef<"AuditAssignment", 'DateTime'>
    readonly scheduledDate: FieldRef<"AuditAssignment", 'DateTime'>
    readonly status: FieldRef<"AuditAssignment", 'AuditAssignmentStatus'>
    readonly instructions: FieldRef<"AuditAssignment", 'String'>
    readonly checklistItems: FieldRef<"AuditAssignment", 'String'>
    readonly estimatedHours: FieldRef<"AuditAssignment", 'Float'>
    readonly actualHours: FieldRef<"AuditAssignment", 'Float'>
    readonly acceptedAt: FieldRef<"AuditAssignment", 'DateTime'>
    readonly startedAt: FieldRef<"AuditAssignment", 'DateTime'>
    readonly completedAt: FieldRef<"AuditAssignment", 'DateTime'>
    readonly cancelledAt: FieldRef<"AuditAssignment", 'DateTime'>
    readonly cancellationReason: FieldRef<"AuditAssignment", 'String'>
    readonly notificationSent: FieldRef<"AuditAssignment", 'Boolean'>
    readonly remindersSent: FieldRef<"AuditAssignment", 'Int'>
    readonly createdAt: FieldRef<"AuditAssignment", 'DateTime'>
    readonly updatedAt: FieldRef<"AuditAssignment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditAssignment findUnique
   */
  export type AuditAssignmentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which AuditAssignment to fetch.
     */
    where: AuditAssignmentWhereUniqueInput
  }

  /**
   * AuditAssignment findUniqueOrThrow
   */
  export type AuditAssignmentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which AuditAssignment to fetch.
     */
    where: AuditAssignmentWhereUniqueInput
  }

  /**
   * AuditAssignment findFirst
   */
  export type AuditAssignmentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which AuditAssignment to fetch.
     */
    where?: AuditAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditAssignments to fetch.
     */
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditAssignments.
     */
    cursor?: AuditAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditAssignments.
     */
    distinct?: AuditAssignmentScalarFieldEnum | AuditAssignmentScalarFieldEnum[]
  }

  /**
   * AuditAssignment findFirstOrThrow
   */
  export type AuditAssignmentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which AuditAssignment to fetch.
     */
    where?: AuditAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditAssignments to fetch.
     */
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditAssignments.
     */
    cursor?: AuditAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditAssignments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditAssignments.
     */
    distinct?: AuditAssignmentScalarFieldEnum | AuditAssignmentScalarFieldEnum[]
  }

  /**
   * AuditAssignment findMany
   */
  export type AuditAssignmentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * Filter, which AuditAssignments to fetch.
     */
    where?: AuditAssignmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditAssignments to fetch.
     */
    orderBy?: AuditAssignmentOrderByWithRelationInput | AuditAssignmentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditAssignments.
     */
    cursor?: AuditAssignmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditAssignments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditAssignments.
     */
    skip?: number
    distinct?: AuditAssignmentScalarFieldEnum | AuditAssignmentScalarFieldEnum[]
  }

  /**
   * AuditAssignment create
   */
  export type AuditAssignmentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to create a AuditAssignment.
     */
    data: XOR<AuditAssignmentCreateInput, AuditAssignmentUncheckedCreateInput>
  }

  /**
   * AuditAssignment createMany
   */
  export type AuditAssignmentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditAssignments.
     */
    data: AuditAssignmentCreateManyInput | AuditAssignmentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditAssignment createManyAndReturn
   */
  export type AuditAssignmentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * The data used to create many AuditAssignments.
     */
    data: AuditAssignmentCreateManyInput | AuditAssignmentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditAssignment update
   */
  export type AuditAssignmentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * The data needed to update a AuditAssignment.
     */
    data: XOR<AuditAssignmentUpdateInput, AuditAssignmentUncheckedUpdateInput>
    /**
     * Choose, which AuditAssignment to update.
     */
    where: AuditAssignmentWhereUniqueInput
  }

  /**
   * AuditAssignment updateMany
   */
  export type AuditAssignmentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditAssignments.
     */
    data: XOR<AuditAssignmentUpdateManyMutationInput, AuditAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which AuditAssignments to update
     */
    where?: AuditAssignmentWhereInput
    /**
     * Limit how many AuditAssignments to update.
     */
    limit?: number
  }

  /**
   * AuditAssignment updateManyAndReturn
   */
  export type AuditAssignmentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * The data used to update AuditAssignments.
     */
    data: XOR<AuditAssignmentUpdateManyMutationInput, AuditAssignmentUncheckedUpdateManyInput>
    /**
     * Filter which AuditAssignments to update
     */
    where?: AuditAssignmentWhereInput
    /**
     * Limit how many AuditAssignments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditAssignment upsert
   */
  export type AuditAssignmentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * The filter to search for the AuditAssignment to update in case it exists.
     */
    where: AuditAssignmentWhereUniqueInput
    /**
     * In case the AuditAssignment found by the `where` argument doesn't exist, create a new AuditAssignment with this data.
     */
    create: XOR<AuditAssignmentCreateInput, AuditAssignmentUncheckedCreateInput>
    /**
     * In case the AuditAssignment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditAssignmentUpdateInput, AuditAssignmentUncheckedUpdateInput>
  }

  /**
   * AuditAssignment delete
   */
  export type AuditAssignmentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
    /**
     * Filter which AuditAssignment to delete.
     */
    where: AuditAssignmentWhereUniqueInput
  }

  /**
   * AuditAssignment deleteMany
   */
  export type AuditAssignmentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditAssignments to delete
     */
    where?: AuditAssignmentWhereInput
    /**
     * Limit how many AuditAssignments to delete.
     */
    limit?: number
  }

  /**
   * AuditAssignment.audits
   */
  export type AuditAssignment$auditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    where?: AssetAuditWhereInput
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    cursor?: AssetAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * AuditAssignment without action
   */
  export type AuditAssignmentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditAssignment
     */
    select?: AuditAssignmentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditAssignment
     */
    omit?: AuditAssignmentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditAssignmentInclude<ExtArgs> | null
  }


  /**
   * Model AuditRequest
   */

  export type AggregateAuditRequest = {
    _count: AuditRequestCountAggregateOutputType | null
    _min: AuditRequestMinAggregateOutputType | null
    _max: AuditRequestMaxAggregateOutputType | null
  }

  export type AuditRequestMinAggregateOutputType = {
    id: string | null
    assetId: string | null
    requesterId: string | null
    managerId: string | null
    title: string | null
    reason: string | null
    urgency: $Enums.MaintenancePriority | null
    requestedDate: Date | null
    status: $Enums.AuditRequestStatus | null
    reviewedAt: Date | null
    reviewNotes: string | null
    approvedBy: string | null
    rejectionReason: string | null
    description: string | null
    expectedFindings: string | null
    attachments: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AuditRequestMaxAggregateOutputType = {
    id: string | null
    assetId: string | null
    requesterId: string | null
    managerId: string | null
    title: string | null
    reason: string | null
    urgency: $Enums.MaintenancePriority | null
    requestedDate: Date | null
    status: $Enums.AuditRequestStatus | null
    reviewedAt: Date | null
    reviewNotes: string | null
    approvedBy: string | null
    rejectionReason: string | null
    description: string | null
    expectedFindings: string | null
    attachments: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AuditRequestCountAggregateOutputType = {
    id: number
    assetId: number
    requesterId: number
    managerId: number
    title: number
    reason: number
    urgency: number
    requestedDate: number
    status: number
    reviewedAt: number
    reviewNotes: number
    approvedBy: number
    rejectionReason: number
    description: number
    expectedFindings: number
    attachments: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AuditRequestMinAggregateInputType = {
    id?: true
    assetId?: true
    requesterId?: true
    managerId?: true
    title?: true
    reason?: true
    urgency?: true
    requestedDate?: true
    status?: true
    reviewedAt?: true
    reviewNotes?: true
    approvedBy?: true
    rejectionReason?: true
    description?: true
    expectedFindings?: true
    attachments?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AuditRequestMaxAggregateInputType = {
    id?: true
    assetId?: true
    requesterId?: true
    managerId?: true
    title?: true
    reason?: true
    urgency?: true
    requestedDate?: true
    status?: true
    reviewedAt?: true
    reviewNotes?: true
    approvedBy?: true
    rejectionReason?: true
    description?: true
    expectedFindings?: true
    attachments?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AuditRequestCountAggregateInputType = {
    id?: true
    assetId?: true
    requesterId?: true
    managerId?: true
    title?: true
    reason?: true
    urgency?: true
    requestedDate?: true
    status?: true
    reviewedAt?: true
    reviewNotes?: true
    approvedBy?: true
    rejectionReason?: true
    description?: true
    expectedFindings?: true
    attachments?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AuditRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditRequest to aggregate.
     */
    where?: AuditRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditRequests to fetch.
     */
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditRequests
    **/
    _count?: true | AuditRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditRequestMaxAggregateInputType
  }

  export type GetAuditRequestAggregateType<T extends AuditRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditRequest[P]>
      : GetScalarType<T[P], AggregateAuditRequest[P]>
  }




  export type AuditRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditRequestWhereInput
    orderBy?: AuditRequestOrderByWithAggregationInput | AuditRequestOrderByWithAggregationInput[]
    by: AuditRequestScalarFieldEnum[] | AuditRequestScalarFieldEnum
    having?: AuditRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditRequestCountAggregateInputType | true
    _min?: AuditRequestMinAggregateInputType
    _max?: AuditRequestMaxAggregateInputType
  }

  export type AuditRequestGroupByOutputType = {
    id: string
    assetId: string
    requesterId: string
    managerId: string | null
    title: string
    reason: string
    urgency: $Enums.MaintenancePriority
    requestedDate: Date
    status: $Enums.AuditRequestStatus
    reviewedAt: Date | null
    reviewNotes: string | null
    approvedBy: string | null
    rejectionReason: string | null
    description: string | null
    expectedFindings: string | null
    attachments: string | null
    createdAt: Date
    updatedAt: Date
    _count: AuditRequestCountAggregateOutputType | null
    _min: AuditRequestMinAggregateOutputType | null
    _max: AuditRequestMaxAggregateOutputType | null
  }

  type GetAuditRequestGroupByPayload<T extends AuditRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditRequestGroupByOutputType[P]>
            : GetScalarType<T[P], AuditRequestGroupByOutputType[P]>
        }
      >
    >


  export type AuditRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    requesterId?: boolean
    managerId?: boolean
    title?: boolean
    reason?: boolean
    urgency?: boolean
    requestedDate?: boolean
    status?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    approvedBy?: boolean
    rejectionReason?: boolean
    description?: boolean
    expectedFindings?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | AuditRequest$managerArgs<ExtArgs>
    audits?: boolean | AuditRequest$auditsArgs<ExtArgs>
    _count?: boolean | AuditRequestCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auditRequest"]>

  export type AuditRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    requesterId?: boolean
    managerId?: boolean
    title?: boolean
    reason?: boolean
    urgency?: boolean
    requestedDate?: boolean
    status?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    approvedBy?: boolean
    rejectionReason?: boolean
    description?: boolean
    expectedFindings?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | AuditRequest$managerArgs<ExtArgs>
  }, ExtArgs["result"]["auditRequest"]>

  export type AuditRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    assetId?: boolean
    requesterId?: boolean
    managerId?: boolean
    title?: boolean
    reason?: boolean
    urgency?: boolean
    requestedDate?: boolean
    status?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    approvedBy?: boolean
    rejectionReason?: boolean
    description?: boolean
    expectedFindings?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | AuditRequest$managerArgs<ExtArgs>
  }, ExtArgs["result"]["auditRequest"]>

  export type AuditRequestSelectScalar = {
    id?: boolean
    assetId?: boolean
    requesterId?: boolean
    managerId?: boolean
    title?: boolean
    reason?: boolean
    urgency?: boolean
    requestedDate?: boolean
    status?: boolean
    reviewedAt?: boolean
    reviewNotes?: boolean
    approvedBy?: boolean
    rejectionReason?: boolean
    description?: boolean
    expectedFindings?: boolean
    attachments?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AuditRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "assetId" | "requesterId" | "managerId" | "title" | "reason" | "urgency" | "requestedDate" | "status" | "reviewedAt" | "reviewNotes" | "approvedBy" | "rejectionReason" | "description" | "expectedFindings" | "attachments" | "createdAt" | "updatedAt", ExtArgs["result"]["auditRequest"]>
  export type AuditRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | AuditRequest$managerArgs<ExtArgs>
    audits?: boolean | AuditRequest$auditsArgs<ExtArgs>
    _count?: boolean | AuditRequestCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AuditRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | AuditRequest$managerArgs<ExtArgs>
  }
  export type AuditRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    asset?: boolean | AssetDefaultArgs<ExtArgs>
    requester?: boolean | UserDefaultArgs<ExtArgs>
    manager?: boolean | AuditRequest$managerArgs<ExtArgs>
  }

  export type $AuditRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditRequest"
    objects: {
      asset: Prisma.$AssetPayload<ExtArgs>
      requester: Prisma.$UserPayload<ExtArgs>
      manager: Prisma.$UserPayload<ExtArgs> | null
      audits: Prisma.$AssetAuditPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      assetId: string
      requesterId: string
      managerId: string | null
      title: string
      reason: string
      urgency: $Enums.MaintenancePriority
      requestedDate: Date
      status: $Enums.AuditRequestStatus
      reviewedAt: Date | null
      reviewNotes: string | null
      approvedBy: string | null
      rejectionReason: string | null
      description: string | null
      expectedFindings: string | null
      attachments: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["auditRequest"]>
    composites: {}
  }

  type AuditRequestGetPayload<S extends boolean | null | undefined | AuditRequestDefaultArgs> = $Result.GetResult<Prisma.$AuditRequestPayload, S>

  type AuditRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AuditRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AuditRequestCountAggregateInputType | true
    }

  export interface AuditRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditRequest'], meta: { name: 'AuditRequest' } }
    /**
     * Find zero or one AuditRequest that matches the filter.
     * @param {AuditRequestFindUniqueArgs} args - Arguments to find a AuditRequest
     * @example
     * // Get one AuditRequest
     * const auditRequest = await prisma.auditRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditRequestFindUniqueArgs>(args: SelectSubset<T, AuditRequestFindUniqueArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one AuditRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AuditRequestFindUniqueOrThrowArgs} args - Arguments to find a AuditRequest
     * @example
     * // Get one AuditRequest
     * const auditRequest = await prisma.auditRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AuditRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestFindFirstArgs} args - Arguments to find a AuditRequest
     * @example
     * // Get one AuditRequest
     * const auditRequest = await prisma.auditRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditRequestFindFirstArgs>(args?: SelectSubset<T, AuditRequestFindFirstArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first AuditRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestFindFirstOrThrowArgs} args - Arguments to find a AuditRequest
     * @example
     * // Get one AuditRequest
     * const auditRequest = await prisma.auditRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more AuditRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditRequests
     * const auditRequests = await prisma.auditRequest.findMany()
     * 
     * // Get first 10 AuditRequests
     * const auditRequests = await prisma.auditRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditRequestWithIdOnly = await prisma.auditRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditRequestFindManyArgs>(args?: SelectSubset<T, AuditRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a AuditRequest.
     * @param {AuditRequestCreateArgs} args - Arguments to create a AuditRequest.
     * @example
     * // Create one AuditRequest
     * const AuditRequest = await prisma.auditRequest.create({
     *   data: {
     *     // ... data to create a AuditRequest
     *   }
     * })
     * 
     */
    create<T extends AuditRequestCreateArgs>(args: SelectSubset<T, AuditRequestCreateArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many AuditRequests.
     * @param {AuditRequestCreateManyArgs} args - Arguments to create many AuditRequests.
     * @example
     * // Create many AuditRequests
     * const auditRequest = await prisma.auditRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditRequestCreateManyArgs>(args?: SelectSubset<T, AuditRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditRequests and returns the data saved in the database.
     * @param {AuditRequestCreateManyAndReturnArgs} args - Arguments to create many AuditRequests.
     * @example
     * // Create many AuditRequests
     * const auditRequest = await prisma.auditRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditRequests and only return the `id`
     * const auditRequestWithIdOnly = await prisma.auditRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a AuditRequest.
     * @param {AuditRequestDeleteArgs} args - Arguments to delete one AuditRequest.
     * @example
     * // Delete one AuditRequest
     * const AuditRequest = await prisma.auditRequest.delete({
     *   where: {
     *     // ... filter to delete one AuditRequest
     *   }
     * })
     * 
     */
    delete<T extends AuditRequestDeleteArgs>(args: SelectSubset<T, AuditRequestDeleteArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one AuditRequest.
     * @param {AuditRequestUpdateArgs} args - Arguments to update one AuditRequest.
     * @example
     * // Update one AuditRequest
     * const auditRequest = await prisma.auditRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditRequestUpdateArgs>(args: SelectSubset<T, AuditRequestUpdateArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more AuditRequests.
     * @param {AuditRequestDeleteManyArgs} args - Arguments to filter AuditRequests to delete.
     * @example
     * // Delete a few AuditRequests
     * const { count } = await prisma.auditRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditRequestDeleteManyArgs>(args?: SelectSubset<T, AuditRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditRequests
     * const auditRequest = await prisma.auditRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditRequestUpdateManyArgs>(args: SelectSubset<T, AuditRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditRequests and returns the data updated in the database.
     * @param {AuditRequestUpdateManyAndReturnArgs} args - Arguments to update many AuditRequests.
     * @example
     * // Update many AuditRequests
     * const auditRequest = await prisma.auditRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more AuditRequests and only return the `id`
     * const auditRequestWithIdOnly = await prisma.auditRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AuditRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, AuditRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one AuditRequest.
     * @param {AuditRequestUpsertArgs} args - Arguments to update or create a AuditRequest.
     * @example
     * // Update or create a AuditRequest
     * const auditRequest = await prisma.auditRequest.upsert({
     *   create: {
     *     // ... data to create a AuditRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditRequest we want to update
     *   }
     * })
     */
    upsert<T extends AuditRequestUpsertArgs>(args: SelectSubset<T, AuditRequestUpsertArgs<ExtArgs>>): Prisma__AuditRequestClient<$Result.GetResult<Prisma.$AuditRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of AuditRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestCountArgs} args - Arguments to filter AuditRequests to count.
     * @example
     * // Count the number of AuditRequests
     * const count = await prisma.auditRequest.count({
     *   where: {
     *     // ... the filter for the AuditRequests we want to count
     *   }
     * })
    **/
    count<T extends AuditRequestCountArgs>(
      args?: Subset<T, AuditRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditRequestAggregateArgs>(args: Subset<T, AuditRequestAggregateArgs>): Prisma.PrismaPromise<GetAuditRequestAggregateType<T>>

    /**
     * Group by AuditRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditRequestGroupByArgs['orderBy'] }
        : { orderBy?: AuditRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditRequest model
   */
  readonly fields: AuditRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    asset<T extends AssetDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AssetDefaultArgs<ExtArgs>>): Prisma__AssetClient<$Result.GetResult<Prisma.$AssetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    requester<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manager<T extends AuditRequest$managerArgs<ExtArgs> = {}>(args?: Subset<T, AuditRequest$managerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    audits<T extends AuditRequest$auditsArgs<ExtArgs> = {}>(args?: Subset<T, AuditRequest$auditsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AssetAuditPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditRequest model
   */
  interface AuditRequestFieldRefs {
    readonly id: FieldRef<"AuditRequest", 'String'>
    readonly assetId: FieldRef<"AuditRequest", 'String'>
    readonly requesterId: FieldRef<"AuditRequest", 'String'>
    readonly managerId: FieldRef<"AuditRequest", 'String'>
    readonly title: FieldRef<"AuditRequest", 'String'>
    readonly reason: FieldRef<"AuditRequest", 'String'>
    readonly urgency: FieldRef<"AuditRequest", 'MaintenancePriority'>
    readonly requestedDate: FieldRef<"AuditRequest", 'DateTime'>
    readonly status: FieldRef<"AuditRequest", 'AuditRequestStatus'>
    readonly reviewedAt: FieldRef<"AuditRequest", 'DateTime'>
    readonly reviewNotes: FieldRef<"AuditRequest", 'String'>
    readonly approvedBy: FieldRef<"AuditRequest", 'String'>
    readonly rejectionReason: FieldRef<"AuditRequest", 'String'>
    readonly description: FieldRef<"AuditRequest", 'String'>
    readonly expectedFindings: FieldRef<"AuditRequest", 'String'>
    readonly attachments: FieldRef<"AuditRequest", 'String'>
    readonly createdAt: FieldRef<"AuditRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"AuditRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditRequest findUnique
   */
  export type AuditRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * Filter, which AuditRequest to fetch.
     */
    where: AuditRequestWhereUniqueInput
  }

  /**
   * AuditRequest findUniqueOrThrow
   */
  export type AuditRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * Filter, which AuditRequest to fetch.
     */
    where: AuditRequestWhereUniqueInput
  }

  /**
   * AuditRequest findFirst
   */
  export type AuditRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * Filter, which AuditRequest to fetch.
     */
    where?: AuditRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditRequests to fetch.
     */
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditRequests.
     */
    cursor?: AuditRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditRequests.
     */
    distinct?: AuditRequestScalarFieldEnum | AuditRequestScalarFieldEnum[]
  }

  /**
   * AuditRequest findFirstOrThrow
   */
  export type AuditRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * Filter, which AuditRequest to fetch.
     */
    where?: AuditRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditRequests to fetch.
     */
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditRequests.
     */
    cursor?: AuditRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditRequests.
     */
    distinct?: AuditRequestScalarFieldEnum | AuditRequestScalarFieldEnum[]
  }

  /**
   * AuditRequest findMany
   */
  export type AuditRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * Filter, which AuditRequests to fetch.
     */
    where?: AuditRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditRequests to fetch.
     */
    orderBy?: AuditRequestOrderByWithRelationInput | AuditRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditRequests.
     */
    cursor?: AuditRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditRequests.
     */
    skip?: number
    distinct?: AuditRequestScalarFieldEnum | AuditRequestScalarFieldEnum[]
  }

  /**
   * AuditRequest create
   */
  export type AuditRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a AuditRequest.
     */
    data: XOR<AuditRequestCreateInput, AuditRequestUncheckedCreateInput>
  }

  /**
   * AuditRequest createMany
   */
  export type AuditRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditRequests.
     */
    data: AuditRequestCreateManyInput | AuditRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditRequest createManyAndReturn
   */
  export type AuditRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * The data used to create many AuditRequests.
     */
    data: AuditRequestCreateManyInput | AuditRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditRequest update
   */
  export type AuditRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a AuditRequest.
     */
    data: XOR<AuditRequestUpdateInput, AuditRequestUncheckedUpdateInput>
    /**
     * Choose, which AuditRequest to update.
     */
    where: AuditRequestWhereUniqueInput
  }

  /**
   * AuditRequest updateMany
   */
  export type AuditRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditRequests.
     */
    data: XOR<AuditRequestUpdateManyMutationInput, AuditRequestUncheckedUpdateManyInput>
    /**
     * Filter which AuditRequests to update
     */
    where?: AuditRequestWhereInput
    /**
     * Limit how many AuditRequests to update.
     */
    limit?: number
  }

  /**
   * AuditRequest updateManyAndReturn
   */
  export type AuditRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * The data used to update AuditRequests.
     */
    data: XOR<AuditRequestUpdateManyMutationInput, AuditRequestUncheckedUpdateManyInput>
    /**
     * Filter which AuditRequests to update
     */
    where?: AuditRequestWhereInput
    /**
     * Limit how many AuditRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * AuditRequest upsert
   */
  export type AuditRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the AuditRequest to update in case it exists.
     */
    where: AuditRequestWhereUniqueInput
    /**
     * In case the AuditRequest found by the `where` argument doesn't exist, create a new AuditRequest with this data.
     */
    create: XOR<AuditRequestCreateInput, AuditRequestUncheckedCreateInput>
    /**
     * In case the AuditRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditRequestUpdateInput, AuditRequestUncheckedUpdateInput>
  }

  /**
   * AuditRequest delete
   */
  export type AuditRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
    /**
     * Filter which AuditRequest to delete.
     */
    where: AuditRequestWhereUniqueInput
  }

  /**
   * AuditRequest deleteMany
   */
  export type AuditRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditRequests to delete
     */
    where?: AuditRequestWhereInput
    /**
     * Limit how many AuditRequests to delete.
     */
    limit?: number
  }

  /**
   * AuditRequest.manager
   */
  export type AuditRequest$managerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * AuditRequest.audits
   */
  export type AuditRequest$auditsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AssetAudit
     */
    select?: AssetAuditSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AssetAudit
     */
    omit?: AssetAuditOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AssetAuditInclude<ExtArgs> | null
    where?: AssetAuditWhereInput
    orderBy?: AssetAuditOrderByWithRelationInput | AssetAuditOrderByWithRelationInput[]
    cursor?: AssetAuditWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AssetAuditScalarFieldEnum | AssetAuditScalarFieldEnum[]
  }

  /**
   * AuditRequest without action
   */
  export type AuditRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditRequest
     */
    select?: AuditRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the AuditRequest
     */
    omit?: AuditRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AuditRequestInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const RoleChangeLogScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    oldRole: 'oldRole',
    newRole: 'newRole',
    changedBy: 'changedBy',
    changedAt: 'changedAt'
  };

  export type RoleChangeLogScalarFieldEnum = (typeof RoleChangeLogScalarFieldEnum)[keyof typeof RoleChangeLogScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    role: 'role',
    emailVerified: 'emailVerified',
    image: 'image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    message: 'message',
    type: 'type',
    meta: 'meta',
    read: 'read',
    createdAt: 'createdAt'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const AssetScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    serialNumber: 'serialNumber',
    purchaseDate: 'purchaseDate',
    purchasePrice: 'purchasePrice',
    currentValue: 'currentValue',
    status: 'status',
    location: 'location',
    department: 'department',
    category: 'category',
    type: 'type',
    supplier: 'supplier',
    warrantyExpiry: 'warrantyExpiry',
    lastMaintenance: 'lastMaintenance',
    nextMaintenance: 'nextMaintenance',
    depreciableCost: 'depreciableCost',
    salvageValue: 'salvageValue',
    usefulLifeMonths: 'usefulLifeMonths',
    depreciationMethod: 'depreciationMethod',
    depreciationStartDate: 'depreciationStartDate',
    lastAuditDate: 'lastAuditDate',
    nextAuditDate: 'nextAuditDate',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AssetScalarFieldEnum = (typeof AssetScalarFieldEnum)[keyof typeof AssetScalarFieldEnum]


  export const TransferScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    reason: 'reason',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    fromDepartment: 'fromDepartment',
    requesterId: 'requesterId',
    toDepartment: 'toDepartment',
    status: 'status',
    managerReason: 'managerReason',
    managerId: 'managerId'
  };

  export type TransferScalarFieldEnum = (typeof TransferScalarFieldEnum)[keyof typeof TransferScalarFieldEnum]


  export const MaintenanceScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    description: 'description',
    cost: 'cost',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    completedAt: 'completedAt',
    scheduledDate: 'scheduledDate',
    priority: 'priority',
    requesterId: 'requesterId',
    managerId: 'managerId',
    status: 'status',
    notes: 'notes',
    maintenanceType: 'maintenanceType',
    scheduleId: 'scheduleId',
    templateId: 'templateId',
    assignedToId: 'assignedToId',
    estimatedHours: 'estimatedHours',
    actualHours: 'actualHours',
    checklistItems: 'checklistItems',
    issueType: 'issueType',
    urgencyLevel: 'urgencyLevel',
    reportedBy: 'reportedBy',
    assetDowntime: 'assetDowntime',
    impactDescription: 'impactDescription',
    photoUrls: 'photoUrls',
    workPerformed: 'workPerformed',
    partsUsed: 'partsUsed',
    laborHours: 'laborHours',
    partsCost: 'partsCost',
    laborCost: 'laborCost',
    totalCost: 'totalCost',
    workStartedAt: 'workStartedAt',
    workCompletedAt: 'workCompletedAt',
    technicianNotes: 'technicianNotes',
    managerReviewNotes: 'managerReviewNotes',
    finalApprovedAt: 'finalApprovedAt',
    finalApprovedBy: 'finalApprovedBy',
    workPhotos: 'workPhotos'
  };

  export type MaintenanceScalarFieldEnum = (typeof MaintenanceScalarFieldEnum)[keyof typeof MaintenanceScalarFieldEnum]


  export const DisposalScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    reason: 'reason',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    actualValue: 'actualValue',
    expectedValue: 'expectedValue',
    requesterId: 'requesterId',
    method: 'method',
    status: 'status'
  };

  export type DisposalScalarFieldEnum = (typeof DisposalScalarFieldEnum)[keyof typeof DisposalScalarFieldEnum]


  export const DocumentScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    type: 'type',
    url: 'url',
    fileName: 'fileName',
    fileSize: 'fileSize',
    filePath: 'filePath',
    mimeType: 'mimeType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    meta: 'meta'
  };

  export type DocumentScalarFieldEnum = (typeof DocumentScalarFieldEnum)[keyof typeof DocumentScalarFieldEnum]


  export const DepreciationScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    amount: 'amount',
    date: 'date',
    createdAt: 'createdAt',
    depreciationRate: 'depreciationRate',
    description: 'description',
    method: 'method',
    salvageValue: 'salvageValue',
    updatedAt: 'updatedAt',
    usefulLife: 'usefulLife'
  };

  export type DepreciationScalarFieldEnum = (typeof DepreciationScalarFieldEnum)[keyof typeof DepreciationScalarFieldEnum]


  export const AssetDepreciationScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    amount: 'amount',
    date: 'date',
    method: 'method',
    usefulLife: 'usefulLife',
    salvageValue: 'salvageValue',
    depreciationRate: 'depreciationRate',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AssetDepreciationScalarFieldEnum = (typeof AssetDepreciationScalarFieldEnum)[keyof typeof AssetDepreciationScalarFieldEnum]


  export const AssetHistoryScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    field: 'field',
    oldValue: 'oldValue',
    newValue: 'newValue',
    changedAt: 'changedAt',
    changedBy: 'changedBy'
  };

  export type AssetHistoryScalarFieldEnum = (typeof AssetHistoryScalarFieldEnum)[keyof typeof AssetHistoryScalarFieldEnum]


  export const LinkedAssetScalarFieldEnum: {
    id: 'id',
    fromAssetId: 'fromAssetId',
    toAssetId: 'toAssetId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type LinkedAssetScalarFieldEnum = (typeof LinkedAssetScalarFieldEnum)[keyof typeof LinkedAssetScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const UserPermissionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    permissionId: 'permissionId',
    granted: 'granted',
    createdAt: 'createdAt'
  };

  export type UserPermissionScalarFieldEnum = (typeof UserPermissionScalarFieldEnum)[keyof typeof UserPermissionScalarFieldEnum]


  export const RolePermissionScalarFieldEnum: {
    id: 'id',
    role: 'role',
    permissionId: 'permissionId'
  };

  export type RolePermissionScalarFieldEnum = (typeof RolePermissionScalarFieldEnum)[keyof typeof RolePermissionScalarFieldEnum]


  export const CapitalImprovementScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    description: 'description',
    improvementDate: 'improvementDate',
    cost: 'cost',
    usefulLifeMonths: 'usefulLifeMonths',
    depreciationMethod: 'depreciationMethod',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CapitalImprovementScalarFieldEnum = (typeof CapitalImprovementScalarFieldEnum)[keyof typeof CapitalImprovementScalarFieldEnum]


  export const MaintenanceScheduleScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    title: 'title',
    description: 'description',
    frequency: 'frequency',
    customInterval: 'customInterval',
    priority: 'priority',
    estimatedHours: 'estimatedHours',
    status: 'status',
    createdById: 'createdById',
    assignedToId: 'assignedToId',
    templateId: 'templateId',
    startDate: 'startDate',
    endDate: 'endDate',
    lastGenerated: 'lastGenerated',
    nextDue: 'nextDue',
    leadTimeDays: 'leadTimeDays',
    autoAssign: 'autoAssign',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MaintenanceScheduleScalarFieldEnum = (typeof MaintenanceScheduleScalarFieldEnum)[keyof typeof MaintenanceScheduleScalarFieldEnum]


  export const MaintenanceTemplateScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    maintenanceType: 'maintenanceType',
    priority: 'priority',
    estimatedHours: 'estimatedHours',
    instructions: 'instructions',
    checklistItems: 'checklistItems',
    requiredSkills: 'requiredSkills',
    safetyNotes: 'safetyNotes',
    toolsRequired: 'toolsRequired',
    partsRequired: 'partsRequired',
    isActive: 'isActive',
    createdById: 'createdById',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MaintenanceTemplateScalarFieldEnum = (typeof MaintenanceTemplateScalarFieldEnum)[keyof typeof MaintenanceTemplateScalarFieldEnum]


  export const AssetAuditScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    auditDate: 'auditDate',
    auditedBy: 'auditedBy',
    auditorId: 'auditorId',
    status: 'status',
    workflowStatus: 'workflowStatus',
    condition: 'condition',
    locationVerified: 'locationVerified',
    actualLocation: 'actualLocation',
    notes: 'notes',
    discrepancies: 'discrepancies',
    recommendations: 'recommendations',
    checklistItems: 'checklistItems',
    discrepancyResolved: 'discrepancyResolved',
    resolvedDate: 'resolvedDate',
    resolvedBy: 'resolvedBy',
    resolutionNotes: 'resolutionNotes',
    photoUrls: 'photoUrls',
    nextAuditDate: 'nextAuditDate',
    assignmentId: 'assignmentId',
    requestId: 'requestId',
    reviewedBy: 'reviewedBy',
    reviewedAt: 'reviewedAt',
    reviewNotes: 'reviewNotes',
    managerApproval: 'managerApproval',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AssetAuditScalarFieldEnum = (typeof AssetAuditScalarFieldEnum)[keyof typeof AssetAuditScalarFieldEnum]


  export const AuditAssignmentScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    assignedToId: 'assignedToId',
    assignedById: 'assignedById',
    title: 'title',
    description: 'description',
    priority: 'priority',
    dueDate: 'dueDate',
    scheduledDate: 'scheduledDate',
    status: 'status',
    instructions: 'instructions',
    checklistItems: 'checklistItems',
    estimatedHours: 'estimatedHours',
    actualHours: 'actualHours',
    acceptedAt: 'acceptedAt',
    startedAt: 'startedAt',
    completedAt: 'completedAt',
    cancelledAt: 'cancelledAt',
    cancellationReason: 'cancellationReason',
    notificationSent: 'notificationSent',
    remindersSent: 'remindersSent',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AuditAssignmentScalarFieldEnum = (typeof AuditAssignmentScalarFieldEnum)[keyof typeof AuditAssignmentScalarFieldEnum]


  export const AuditRequestScalarFieldEnum: {
    id: 'id',
    assetId: 'assetId',
    requesterId: 'requesterId',
    managerId: 'managerId',
    title: 'title',
    reason: 'reason',
    urgency: 'urgency',
    requestedDate: 'requestedDate',
    status: 'status',
    reviewedAt: 'reviewedAt',
    reviewNotes: 'reviewNotes',
    approvedBy: 'approvedBy',
    rejectionReason: 'rejectionReason',
    description: 'description',
    expectedFindings: 'expectedFindings',
    attachments: 'attachments',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AuditRequestScalarFieldEnum = (typeof AuditRequestScalarFieldEnum)[keyof typeof AuditRequestScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DepreciationMethodEnum'
   */
  export type EnumDepreciationMethodEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DepreciationMethodEnum'>
    


  /**
   * Reference to a field of type 'DepreciationMethodEnum[]'
   */
  export type ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DepreciationMethodEnum[]'>
    


  /**
   * Reference to a field of type 'TransferStatus'
   */
  export type EnumTransferStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransferStatus'>
    


  /**
   * Reference to a field of type 'TransferStatus[]'
   */
  export type ListEnumTransferStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TransferStatus[]'>
    


  /**
   * Reference to a field of type 'MaintenancePriority'
   */
  export type EnumMaintenancePriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MaintenancePriority'>
    


  /**
   * Reference to a field of type 'MaintenancePriority[]'
   */
  export type ListEnumMaintenancePriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MaintenancePriority[]'>
    


  /**
   * Reference to a field of type 'MaintenanceStatus'
   */
  export type EnumMaintenanceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MaintenanceStatus'>
    


  /**
   * Reference to a field of type 'MaintenanceStatus[]'
   */
  export type ListEnumMaintenanceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MaintenanceStatus[]'>
    


  /**
   * Reference to a field of type 'MaintenanceType'
   */
  export type EnumMaintenanceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MaintenanceType'>
    


  /**
   * Reference to a field of type 'MaintenanceType[]'
   */
  export type ListEnumMaintenanceTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MaintenanceType[]'>
    


  /**
   * Reference to a field of type 'DisposalMethod'
   */
  export type EnumDisposalMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisposalMethod'>
    


  /**
   * Reference to a field of type 'DisposalMethod[]'
   */
  export type ListEnumDisposalMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisposalMethod[]'>
    


  /**
   * Reference to a field of type 'DisposalStatus'
   */
  export type EnumDisposalStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisposalStatus'>
    


  /**
   * Reference to a field of type 'DisposalStatus[]'
   */
  export type ListEnumDisposalStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DisposalStatus[]'>
    


  /**
   * Reference to a field of type 'DocumentType'
   */
  export type EnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType'>
    


  /**
   * Reference to a field of type 'DocumentType[]'
   */
  export type ListEnumDocumentTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DocumentType[]'>
    


  /**
   * Reference to a field of type 'ScheduleFrequency'
   */
  export type EnumScheduleFrequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduleFrequency'>
    


  /**
   * Reference to a field of type 'ScheduleFrequency[]'
   */
  export type ListEnumScheduleFrequencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduleFrequency[]'>
    


  /**
   * Reference to a field of type 'ScheduleStatus'
   */
  export type EnumScheduleStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduleStatus'>
    


  /**
   * Reference to a field of type 'ScheduleStatus[]'
   */
  export type ListEnumScheduleStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ScheduleStatus[]'>
    


  /**
   * Reference to a field of type 'AuditStatus'
   */
  export type EnumAuditStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditStatus'>
    


  /**
   * Reference to a field of type 'AuditStatus[]'
   */
  export type ListEnumAuditStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditStatus[]'>
    


  /**
   * Reference to a field of type 'AuditWorkflowStatus'
   */
  export type EnumAuditWorkflowStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditWorkflowStatus'>
    


  /**
   * Reference to a field of type 'AuditWorkflowStatus[]'
   */
  export type ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditWorkflowStatus[]'>
    


  /**
   * Reference to a field of type 'AuditCondition'
   */
  export type EnumAuditConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditCondition'>
    


  /**
   * Reference to a field of type 'AuditCondition[]'
   */
  export type ListEnumAuditConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditCondition[]'>
    


  /**
   * Reference to a field of type 'AuditAssignmentStatus'
   */
  export type EnumAuditAssignmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditAssignmentStatus'>
    


  /**
   * Reference to a field of type 'AuditAssignmentStatus[]'
   */
  export type ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditAssignmentStatus[]'>
    


  /**
   * Reference to a field of type 'AuditRequestStatus'
   */
  export type EnumAuditRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditRequestStatus'>
    


  /**
   * Reference to a field of type 'AuditRequestStatus[]'
   */
  export type ListEnumAuditRequestStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AuditRequestStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type RoleChangeLogWhereInput = {
    AND?: RoleChangeLogWhereInput | RoleChangeLogWhereInput[]
    OR?: RoleChangeLogWhereInput[]
    NOT?: RoleChangeLogWhereInput | RoleChangeLogWhereInput[]
    id?: StringFilter<"RoleChangeLog"> | string
    userId?: StringFilter<"RoleChangeLog"> | string
    oldRole?: StringFilter<"RoleChangeLog"> | string
    newRole?: StringFilter<"RoleChangeLog"> | string
    changedBy?: StringFilter<"RoleChangeLog"> | string
    changedAt?: DateTimeFilter<"RoleChangeLog"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    changedByUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type RoleChangeLogOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    oldRole?: SortOrder
    newRole?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    changedByUser?: UserOrderByWithRelationInput
  }

  export type RoleChangeLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: RoleChangeLogWhereInput | RoleChangeLogWhereInput[]
    OR?: RoleChangeLogWhereInput[]
    NOT?: RoleChangeLogWhereInput | RoleChangeLogWhereInput[]
    userId?: StringFilter<"RoleChangeLog"> | string
    oldRole?: StringFilter<"RoleChangeLog"> | string
    newRole?: StringFilter<"RoleChangeLog"> | string
    changedBy?: StringFilter<"RoleChangeLog"> | string
    changedAt?: DateTimeFilter<"RoleChangeLog"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    changedByUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type RoleChangeLogOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    oldRole?: SortOrder
    newRole?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
    _count?: RoleChangeLogCountOrderByAggregateInput
    _max?: RoleChangeLogMaxOrderByAggregateInput
    _min?: RoleChangeLogMinOrderByAggregateInput
  }

  export type RoleChangeLogScalarWhereWithAggregatesInput = {
    AND?: RoleChangeLogScalarWhereWithAggregatesInput | RoleChangeLogScalarWhereWithAggregatesInput[]
    OR?: RoleChangeLogScalarWhereWithAggregatesInput[]
    NOT?: RoleChangeLogScalarWhereWithAggregatesInput | RoleChangeLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RoleChangeLog"> | string
    userId?: StringWithAggregatesFilter<"RoleChangeLog"> | string
    oldRole?: StringWithAggregatesFilter<"RoleChangeLog"> | string
    newRole?: StringWithAggregatesFilter<"RoleChangeLog"> | string
    changedBy?: StringWithAggregatesFilter<"RoleChangeLog"> | string
    changedAt?: DateTimeWithAggregatesFilter<"RoleChangeLog"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringNullableFilter<"User"> | string | null
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    roleChangeLogs?: RoleChangeLogListRelationFilter
    roleChangesMade?: RoleChangeLogListRelationFilter
    userPermissions?: UserPermissionListRelationFilter
    maintenanceRequests?: MaintenanceListRelationFilter
    managedMaintenance?: MaintenanceListRelationFilter
    assignedMaintenance?: MaintenanceListRelationFilter
    createdSchedules?: MaintenanceScheduleListRelationFilter
    assignedSchedules?: MaintenanceScheduleListRelationFilter
    createdTemplates?: MaintenanceTemplateListRelationFilter
    transferRequests?: TransferListRelationFilter
    managedTransfers?: TransferListRelationFilter
    disposalRequests?: DisposalListRelationFilter
    notifications?: NotificationListRelationFilter
    auditsPerformed?: AssetAuditListRelationFilter
    auditAssignments?: AuditAssignmentListRelationFilter
    auditAssignmentsMade?: AuditAssignmentListRelationFilter
    auditRequests?: AuditRequestListRelationFilter
    auditRequestsReviewed?: AuditRequestListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roleChangeLogs?: RoleChangeLogOrderByRelationAggregateInput
    roleChangesMade?: RoleChangeLogOrderByRelationAggregateInput
    userPermissions?: UserPermissionOrderByRelationAggregateInput
    maintenanceRequests?: MaintenanceOrderByRelationAggregateInput
    managedMaintenance?: MaintenanceOrderByRelationAggregateInput
    assignedMaintenance?: MaintenanceOrderByRelationAggregateInput
    createdSchedules?: MaintenanceScheduleOrderByRelationAggregateInput
    assignedSchedules?: MaintenanceScheduleOrderByRelationAggregateInput
    createdTemplates?: MaintenanceTemplateOrderByRelationAggregateInput
    transferRequests?: TransferOrderByRelationAggregateInput
    managedTransfers?: TransferOrderByRelationAggregateInput
    disposalRequests?: DisposalOrderByRelationAggregateInput
    notifications?: NotificationOrderByRelationAggregateInput
    auditsPerformed?: AssetAuditOrderByRelationAggregateInput
    auditAssignments?: AuditAssignmentOrderByRelationAggregateInput
    auditAssignmentsMade?: AuditAssignmentOrderByRelationAggregateInput
    auditRequests?: AuditRequestOrderByRelationAggregateInput
    auditRequestsReviewed?: AuditRequestOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringNullableFilter<"User"> | string | null
    password?: StringFilter<"User"> | string
    role?: EnumRoleFilter<"User"> | $Enums.Role
    emailVerified?: DateTimeNullableFilter<"User"> | Date | string | null
    image?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    roleChangeLogs?: RoleChangeLogListRelationFilter
    roleChangesMade?: RoleChangeLogListRelationFilter
    userPermissions?: UserPermissionListRelationFilter
    maintenanceRequests?: MaintenanceListRelationFilter
    managedMaintenance?: MaintenanceListRelationFilter
    assignedMaintenance?: MaintenanceListRelationFilter
    createdSchedules?: MaintenanceScheduleListRelationFilter
    assignedSchedules?: MaintenanceScheduleListRelationFilter
    createdTemplates?: MaintenanceTemplateListRelationFilter
    transferRequests?: TransferListRelationFilter
    managedTransfers?: TransferListRelationFilter
    disposalRequests?: DisposalListRelationFilter
    notifications?: NotificationListRelationFilter
    auditsPerformed?: AssetAuditListRelationFilter
    auditAssignments?: AuditAssignmentListRelationFilter
    auditAssignmentsMade?: AuditAssignmentListRelationFilter
    auditRequests?: AuditRequestListRelationFilter
    auditRequestsReviewed?: AuditRequestListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    emailVerified?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringNullableWithAggregatesFilter<"User"> | string | null
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    emailVerified?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type NotificationWhereInput = {
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    meta?: JsonNullableFilter<"Notification">
    read?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type NotificationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    type?: SortOrder
    meta?: SortOrderInput | SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type NotificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: NotificationWhereInput | NotificationWhereInput[]
    OR?: NotificationWhereInput[]
    NOT?: NotificationWhereInput | NotificationWhereInput[]
    userId?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    meta?: JsonNullableFilter<"Notification">
    read?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type NotificationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    type?: SortOrder
    meta?: SortOrderInput | SortOrder
    read?: SortOrder
    createdAt?: SortOrder
    _count?: NotificationCountOrderByAggregateInput
    _max?: NotificationMaxOrderByAggregateInput
    _min?: NotificationMinOrderByAggregateInput
  }

  export type NotificationScalarWhereWithAggregatesInput = {
    AND?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    OR?: NotificationScalarWhereWithAggregatesInput[]
    NOT?: NotificationScalarWhereWithAggregatesInput | NotificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Notification"> | string
    userId?: StringWithAggregatesFilter<"Notification"> | string
    message?: StringWithAggregatesFilter<"Notification"> | string
    type?: StringWithAggregatesFilter<"Notification"> | string
    meta?: JsonNullableWithAggregatesFilter<"Notification">
    read?: BoolWithAggregatesFilter<"Notification"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Notification"> | Date | string
  }

  export type AssetWhereInput = {
    AND?: AssetWhereInput | AssetWhereInput[]
    OR?: AssetWhereInput[]
    NOT?: AssetWhereInput | AssetWhereInput[]
    id?: StringFilter<"Asset"> | string
    name?: StringFilter<"Asset"> | string
    description?: StringNullableFilter<"Asset"> | string | null
    serialNumber?: StringFilter<"Asset"> | string
    purchaseDate?: DateTimeFilter<"Asset"> | Date | string
    purchasePrice?: FloatFilter<"Asset"> | number
    currentValue?: FloatFilter<"Asset"> | number
    status?: StringFilter<"Asset"> | string
    location?: StringNullableFilter<"Asset"> | string | null
    department?: StringNullableFilter<"Asset"> | string | null
    category?: StringNullableFilter<"Asset"> | string | null
    type?: StringNullableFilter<"Asset"> | string | null
    supplier?: StringNullableFilter<"Asset"> | string | null
    warrantyExpiry?: DateTimeNullableFilter<"Asset"> | Date | string | null
    lastMaintenance?: DateTimeNullableFilter<"Asset"> | Date | string | null
    nextMaintenance?: DateTimeNullableFilter<"Asset"> | Date | string | null
    depreciableCost?: FloatNullableFilter<"Asset"> | number | null
    salvageValue?: FloatNullableFilter<"Asset"> | number | null
    usefulLifeMonths?: IntNullableFilter<"Asset"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableFilter<"Asset"> | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: DateTimeNullableFilter<"Asset"> | Date | string | null
    lastAuditDate?: DateTimeNullableFilter<"Asset"> | Date | string | null
    nextAuditDate?: DateTimeNullableFilter<"Asset"> | Date | string | null
    createdAt?: DateTimeFilter<"Asset"> | Date | string
    updatedAt?: DateTimeFilter<"Asset"> | Date | string
    assetDepreciations?: AssetDepreciationListRelationFilter
    history?: AssetHistoryListRelationFilter
    depreciations?: DepreciationListRelationFilter
    disposalRequests?: DisposalListRelationFilter
    documents?: DocumentListRelationFilter
    maintenanceRequests?: MaintenanceListRelationFilter
    maintenanceSchedules?: MaintenanceScheduleListRelationFilter
    transferRequests?: TransferListRelationFilter
    linkedTo?: LinkedAssetListRelationFilter
    linkedFrom?: LinkedAssetListRelationFilter
    capitalImprovements?: CapitalImprovementListRelationFilter
    audits?: AssetAuditListRelationFilter
    auditAssignments?: AuditAssignmentListRelationFilter
    auditRequests?: AuditRequestListRelationFilter
  }

  export type AssetOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    serialNumber?: SortOrder
    purchaseDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    status?: SortOrder
    location?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    supplier?: SortOrderInput | SortOrder
    warrantyExpiry?: SortOrderInput | SortOrder
    lastMaintenance?: SortOrderInput | SortOrder
    nextMaintenance?: SortOrderInput | SortOrder
    depreciableCost?: SortOrderInput | SortOrder
    salvageValue?: SortOrderInput | SortOrder
    usefulLifeMonths?: SortOrderInput | SortOrder
    depreciationMethod?: SortOrderInput | SortOrder
    depreciationStartDate?: SortOrderInput | SortOrder
    lastAuditDate?: SortOrderInput | SortOrder
    nextAuditDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assetDepreciations?: AssetDepreciationOrderByRelationAggregateInput
    history?: AssetHistoryOrderByRelationAggregateInput
    depreciations?: DepreciationOrderByRelationAggregateInput
    disposalRequests?: DisposalOrderByRelationAggregateInput
    documents?: DocumentOrderByRelationAggregateInput
    maintenanceRequests?: MaintenanceOrderByRelationAggregateInput
    maintenanceSchedules?: MaintenanceScheduleOrderByRelationAggregateInput
    transferRequests?: TransferOrderByRelationAggregateInput
    linkedTo?: LinkedAssetOrderByRelationAggregateInput
    linkedFrom?: LinkedAssetOrderByRelationAggregateInput
    capitalImprovements?: CapitalImprovementOrderByRelationAggregateInput
    audits?: AssetAuditOrderByRelationAggregateInput
    auditAssignments?: AuditAssignmentOrderByRelationAggregateInput
    auditRequests?: AuditRequestOrderByRelationAggregateInput
  }

  export type AssetWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    serialNumber?: string
    AND?: AssetWhereInput | AssetWhereInput[]
    OR?: AssetWhereInput[]
    NOT?: AssetWhereInput | AssetWhereInput[]
    name?: StringFilter<"Asset"> | string
    description?: StringNullableFilter<"Asset"> | string | null
    purchaseDate?: DateTimeFilter<"Asset"> | Date | string
    purchasePrice?: FloatFilter<"Asset"> | number
    currentValue?: FloatFilter<"Asset"> | number
    status?: StringFilter<"Asset"> | string
    location?: StringNullableFilter<"Asset"> | string | null
    department?: StringNullableFilter<"Asset"> | string | null
    category?: StringNullableFilter<"Asset"> | string | null
    type?: StringNullableFilter<"Asset"> | string | null
    supplier?: StringNullableFilter<"Asset"> | string | null
    warrantyExpiry?: DateTimeNullableFilter<"Asset"> | Date | string | null
    lastMaintenance?: DateTimeNullableFilter<"Asset"> | Date | string | null
    nextMaintenance?: DateTimeNullableFilter<"Asset"> | Date | string | null
    depreciableCost?: FloatNullableFilter<"Asset"> | number | null
    salvageValue?: FloatNullableFilter<"Asset"> | number | null
    usefulLifeMonths?: IntNullableFilter<"Asset"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableFilter<"Asset"> | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: DateTimeNullableFilter<"Asset"> | Date | string | null
    lastAuditDate?: DateTimeNullableFilter<"Asset"> | Date | string | null
    nextAuditDate?: DateTimeNullableFilter<"Asset"> | Date | string | null
    createdAt?: DateTimeFilter<"Asset"> | Date | string
    updatedAt?: DateTimeFilter<"Asset"> | Date | string
    assetDepreciations?: AssetDepreciationListRelationFilter
    history?: AssetHistoryListRelationFilter
    depreciations?: DepreciationListRelationFilter
    disposalRequests?: DisposalListRelationFilter
    documents?: DocumentListRelationFilter
    maintenanceRequests?: MaintenanceListRelationFilter
    maintenanceSchedules?: MaintenanceScheduleListRelationFilter
    transferRequests?: TransferListRelationFilter
    linkedTo?: LinkedAssetListRelationFilter
    linkedFrom?: LinkedAssetListRelationFilter
    capitalImprovements?: CapitalImprovementListRelationFilter
    audits?: AssetAuditListRelationFilter
    auditAssignments?: AuditAssignmentListRelationFilter
    auditRequests?: AuditRequestListRelationFilter
  }, "id" | "serialNumber">

  export type AssetOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    serialNumber?: SortOrder
    purchaseDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    status?: SortOrder
    location?: SortOrderInput | SortOrder
    department?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    supplier?: SortOrderInput | SortOrder
    warrantyExpiry?: SortOrderInput | SortOrder
    lastMaintenance?: SortOrderInput | SortOrder
    nextMaintenance?: SortOrderInput | SortOrder
    depreciableCost?: SortOrderInput | SortOrder
    salvageValue?: SortOrderInput | SortOrder
    usefulLifeMonths?: SortOrderInput | SortOrder
    depreciationMethod?: SortOrderInput | SortOrder
    depreciationStartDate?: SortOrderInput | SortOrder
    lastAuditDate?: SortOrderInput | SortOrder
    nextAuditDate?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AssetCountOrderByAggregateInput
    _avg?: AssetAvgOrderByAggregateInput
    _max?: AssetMaxOrderByAggregateInput
    _min?: AssetMinOrderByAggregateInput
    _sum?: AssetSumOrderByAggregateInput
  }

  export type AssetScalarWhereWithAggregatesInput = {
    AND?: AssetScalarWhereWithAggregatesInput | AssetScalarWhereWithAggregatesInput[]
    OR?: AssetScalarWhereWithAggregatesInput[]
    NOT?: AssetScalarWhereWithAggregatesInput | AssetScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Asset"> | string
    name?: StringWithAggregatesFilter<"Asset"> | string
    description?: StringNullableWithAggregatesFilter<"Asset"> | string | null
    serialNumber?: StringWithAggregatesFilter<"Asset"> | string
    purchaseDate?: DateTimeWithAggregatesFilter<"Asset"> | Date | string
    purchasePrice?: FloatWithAggregatesFilter<"Asset"> | number
    currentValue?: FloatWithAggregatesFilter<"Asset"> | number
    status?: StringWithAggregatesFilter<"Asset"> | string
    location?: StringNullableWithAggregatesFilter<"Asset"> | string | null
    department?: StringNullableWithAggregatesFilter<"Asset"> | string | null
    category?: StringNullableWithAggregatesFilter<"Asset"> | string | null
    type?: StringNullableWithAggregatesFilter<"Asset"> | string | null
    supplier?: StringNullableWithAggregatesFilter<"Asset"> | string | null
    warrantyExpiry?: DateTimeNullableWithAggregatesFilter<"Asset"> | Date | string | null
    lastMaintenance?: DateTimeNullableWithAggregatesFilter<"Asset"> | Date | string | null
    nextMaintenance?: DateTimeNullableWithAggregatesFilter<"Asset"> | Date | string | null
    depreciableCost?: FloatNullableWithAggregatesFilter<"Asset"> | number | null
    salvageValue?: FloatNullableWithAggregatesFilter<"Asset"> | number | null
    usefulLifeMonths?: IntNullableWithAggregatesFilter<"Asset"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableWithAggregatesFilter<"Asset"> | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: DateTimeNullableWithAggregatesFilter<"Asset"> | Date | string | null
    lastAuditDate?: DateTimeNullableWithAggregatesFilter<"Asset"> | Date | string | null
    nextAuditDate?: DateTimeNullableWithAggregatesFilter<"Asset"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Asset"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Asset"> | Date | string
  }

  export type TransferWhereInput = {
    AND?: TransferWhereInput | TransferWhereInput[]
    OR?: TransferWhereInput[]
    NOT?: TransferWhereInput | TransferWhereInput[]
    id?: StringFilter<"Transfer"> | string
    assetId?: StringFilter<"Transfer"> | string
    reason?: StringFilter<"Transfer"> | string
    createdAt?: DateTimeFilter<"Transfer"> | Date | string
    updatedAt?: DateTimeFilter<"Transfer"> | Date | string
    fromDepartment?: StringFilter<"Transfer"> | string
    requesterId?: StringFilter<"Transfer"> | string
    toDepartment?: StringFilter<"Transfer"> | string
    status?: EnumTransferStatusFilter<"Transfer"> | $Enums.TransferStatus
    managerReason?: StringNullableFilter<"Transfer"> | string | null
    managerId?: StringNullableFilter<"Transfer"> | string | null
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type TransferOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    fromDepartment?: SortOrder
    requesterId?: SortOrder
    toDepartment?: SortOrder
    status?: SortOrder
    managerReason?: SortOrderInput | SortOrder
    managerId?: SortOrderInput | SortOrder
    asset?: AssetOrderByWithRelationInput
    requester?: UserOrderByWithRelationInput
    manager?: UserOrderByWithRelationInput
  }

  export type TransferWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: TransferWhereInput | TransferWhereInput[]
    OR?: TransferWhereInput[]
    NOT?: TransferWhereInput | TransferWhereInput[]
    assetId?: StringFilter<"Transfer"> | string
    reason?: StringFilter<"Transfer"> | string
    createdAt?: DateTimeFilter<"Transfer"> | Date | string
    updatedAt?: DateTimeFilter<"Transfer"> | Date | string
    fromDepartment?: StringFilter<"Transfer"> | string
    requesterId?: StringFilter<"Transfer"> | string
    toDepartment?: StringFilter<"Transfer"> | string
    status?: EnumTransferStatusFilter<"Transfer"> | $Enums.TransferStatus
    managerReason?: StringNullableFilter<"Transfer"> | string | null
    managerId?: StringNullableFilter<"Transfer"> | string | null
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type TransferOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    fromDepartment?: SortOrder
    requesterId?: SortOrder
    toDepartment?: SortOrder
    status?: SortOrder
    managerReason?: SortOrderInput | SortOrder
    managerId?: SortOrderInput | SortOrder
    _count?: TransferCountOrderByAggregateInput
    _max?: TransferMaxOrderByAggregateInput
    _min?: TransferMinOrderByAggregateInput
  }

  export type TransferScalarWhereWithAggregatesInput = {
    AND?: TransferScalarWhereWithAggregatesInput | TransferScalarWhereWithAggregatesInput[]
    OR?: TransferScalarWhereWithAggregatesInput[]
    NOT?: TransferScalarWhereWithAggregatesInput | TransferScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Transfer"> | string
    assetId?: StringWithAggregatesFilter<"Transfer"> | string
    reason?: StringWithAggregatesFilter<"Transfer"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Transfer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Transfer"> | Date | string
    fromDepartment?: StringWithAggregatesFilter<"Transfer"> | string
    requesterId?: StringWithAggregatesFilter<"Transfer"> | string
    toDepartment?: StringWithAggregatesFilter<"Transfer"> | string
    status?: EnumTransferStatusWithAggregatesFilter<"Transfer"> | $Enums.TransferStatus
    managerReason?: StringNullableWithAggregatesFilter<"Transfer"> | string | null
    managerId?: StringNullableWithAggregatesFilter<"Transfer"> | string | null
  }

  export type MaintenanceWhereInput = {
    AND?: MaintenanceWhereInput | MaintenanceWhereInput[]
    OR?: MaintenanceWhereInput[]
    NOT?: MaintenanceWhereInput | MaintenanceWhereInput[]
    id?: StringFilter<"Maintenance"> | string
    assetId?: StringFilter<"Maintenance"> | string
    description?: StringFilter<"Maintenance"> | string
    cost?: FloatNullableFilter<"Maintenance"> | number | null
    createdAt?: DateTimeFilter<"Maintenance"> | Date | string
    updatedAt?: DateTimeFilter<"Maintenance"> | Date | string
    completedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    scheduledDate?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    priority?: EnumMaintenancePriorityFilter<"Maintenance"> | $Enums.MaintenancePriority
    requesterId?: StringFilter<"Maintenance"> | string
    managerId?: StringNullableFilter<"Maintenance"> | string | null
    status?: EnumMaintenanceStatusFilter<"Maintenance"> | $Enums.MaintenanceStatus
    notes?: StringNullableFilter<"Maintenance"> | string | null
    maintenanceType?: EnumMaintenanceTypeFilter<"Maintenance"> | $Enums.MaintenanceType
    scheduleId?: StringNullableFilter<"Maintenance"> | string | null
    templateId?: StringNullableFilter<"Maintenance"> | string | null
    assignedToId?: StringNullableFilter<"Maintenance"> | string | null
    estimatedHours?: FloatNullableFilter<"Maintenance"> | number | null
    actualHours?: FloatNullableFilter<"Maintenance"> | number | null
    checklistItems?: StringNullableFilter<"Maintenance"> | string | null
    issueType?: StringNullableFilter<"Maintenance"> | string | null
    urgencyLevel?: StringNullableFilter<"Maintenance"> | string | null
    reportedBy?: StringNullableFilter<"Maintenance"> | string | null
    assetDowntime?: BoolFilter<"Maintenance"> | boolean
    impactDescription?: StringNullableFilter<"Maintenance"> | string | null
    photoUrls?: StringNullableFilter<"Maintenance"> | string | null
    workPerformed?: StringNullableFilter<"Maintenance"> | string | null
    partsUsed?: StringNullableFilter<"Maintenance"> | string | null
    laborHours?: FloatNullableFilter<"Maintenance"> | number | null
    partsCost?: FloatNullableFilter<"Maintenance"> | number | null
    laborCost?: FloatNullableFilter<"Maintenance"> | number | null
    totalCost?: FloatNullableFilter<"Maintenance"> | number | null
    workStartedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    workCompletedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    technicianNotes?: StringNullableFilter<"Maintenance"> | string | null
    managerReviewNotes?: StringNullableFilter<"Maintenance"> | string | null
    finalApprovedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    finalApprovedBy?: StringNullableFilter<"Maintenance"> | string | null
    workPhotos?: StringNullableFilter<"Maintenance"> | string | null
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    assignedTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    schedule?: XOR<MaintenanceScheduleNullableScalarRelationFilter, MaintenanceScheduleWhereInput> | null
    template?: XOR<MaintenanceTemplateNullableScalarRelationFilter, MaintenanceTemplateWhereInput> | null
  }

  export type MaintenanceOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    cost?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    priority?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    maintenanceType?: SortOrder
    scheduleId?: SortOrderInput | SortOrder
    templateId?: SortOrderInput | SortOrder
    assignedToId?: SortOrderInput | SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    actualHours?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    issueType?: SortOrderInput | SortOrder
    urgencyLevel?: SortOrderInput | SortOrder
    reportedBy?: SortOrderInput | SortOrder
    assetDowntime?: SortOrder
    impactDescription?: SortOrderInput | SortOrder
    photoUrls?: SortOrderInput | SortOrder
    workPerformed?: SortOrderInput | SortOrder
    partsUsed?: SortOrderInput | SortOrder
    laborHours?: SortOrderInput | SortOrder
    partsCost?: SortOrderInput | SortOrder
    laborCost?: SortOrderInput | SortOrder
    totalCost?: SortOrderInput | SortOrder
    workStartedAt?: SortOrderInput | SortOrder
    workCompletedAt?: SortOrderInput | SortOrder
    technicianNotes?: SortOrderInput | SortOrder
    managerReviewNotes?: SortOrderInput | SortOrder
    finalApprovedAt?: SortOrderInput | SortOrder
    finalApprovedBy?: SortOrderInput | SortOrder
    workPhotos?: SortOrderInput | SortOrder
    asset?: AssetOrderByWithRelationInput
    requester?: UserOrderByWithRelationInput
    manager?: UserOrderByWithRelationInput
    assignedTo?: UserOrderByWithRelationInput
    schedule?: MaintenanceScheduleOrderByWithRelationInput
    template?: MaintenanceTemplateOrderByWithRelationInput
  }

  export type MaintenanceWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MaintenanceWhereInput | MaintenanceWhereInput[]
    OR?: MaintenanceWhereInput[]
    NOT?: MaintenanceWhereInput | MaintenanceWhereInput[]
    assetId?: StringFilter<"Maintenance"> | string
    description?: StringFilter<"Maintenance"> | string
    cost?: FloatNullableFilter<"Maintenance"> | number | null
    createdAt?: DateTimeFilter<"Maintenance"> | Date | string
    updatedAt?: DateTimeFilter<"Maintenance"> | Date | string
    completedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    scheduledDate?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    priority?: EnumMaintenancePriorityFilter<"Maintenance"> | $Enums.MaintenancePriority
    requesterId?: StringFilter<"Maintenance"> | string
    managerId?: StringNullableFilter<"Maintenance"> | string | null
    status?: EnumMaintenanceStatusFilter<"Maintenance"> | $Enums.MaintenanceStatus
    notes?: StringNullableFilter<"Maintenance"> | string | null
    maintenanceType?: EnumMaintenanceTypeFilter<"Maintenance"> | $Enums.MaintenanceType
    scheduleId?: StringNullableFilter<"Maintenance"> | string | null
    templateId?: StringNullableFilter<"Maintenance"> | string | null
    assignedToId?: StringNullableFilter<"Maintenance"> | string | null
    estimatedHours?: FloatNullableFilter<"Maintenance"> | number | null
    actualHours?: FloatNullableFilter<"Maintenance"> | number | null
    checklistItems?: StringNullableFilter<"Maintenance"> | string | null
    issueType?: StringNullableFilter<"Maintenance"> | string | null
    urgencyLevel?: StringNullableFilter<"Maintenance"> | string | null
    reportedBy?: StringNullableFilter<"Maintenance"> | string | null
    assetDowntime?: BoolFilter<"Maintenance"> | boolean
    impactDescription?: StringNullableFilter<"Maintenance"> | string | null
    photoUrls?: StringNullableFilter<"Maintenance"> | string | null
    workPerformed?: StringNullableFilter<"Maintenance"> | string | null
    partsUsed?: StringNullableFilter<"Maintenance"> | string | null
    laborHours?: FloatNullableFilter<"Maintenance"> | number | null
    partsCost?: FloatNullableFilter<"Maintenance"> | number | null
    laborCost?: FloatNullableFilter<"Maintenance"> | number | null
    totalCost?: FloatNullableFilter<"Maintenance"> | number | null
    workStartedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    workCompletedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    technicianNotes?: StringNullableFilter<"Maintenance"> | string | null
    managerReviewNotes?: StringNullableFilter<"Maintenance"> | string | null
    finalApprovedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    finalApprovedBy?: StringNullableFilter<"Maintenance"> | string | null
    workPhotos?: StringNullableFilter<"Maintenance"> | string | null
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    assignedTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    schedule?: XOR<MaintenanceScheduleNullableScalarRelationFilter, MaintenanceScheduleWhereInput> | null
    template?: XOR<MaintenanceTemplateNullableScalarRelationFilter, MaintenanceTemplateWhereInput> | null
  }, "id">

  export type MaintenanceOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    cost?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    completedAt?: SortOrderInput | SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    priority?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    maintenanceType?: SortOrder
    scheduleId?: SortOrderInput | SortOrder
    templateId?: SortOrderInput | SortOrder
    assignedToId?: SortOrderInput | SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    actualHours?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    issueType?: SortOrderInput | SortOrder
    urgencyLevel?: SortOrderInput | SortOrder
    reportedBy?: SortOrderInput | SortOrder
    assetDowntime?: SortOrder
    impactDescription?: SortOrderInput | SortOrder
    photoUrls?: SortOrderInput | SortOrder
    workPerformed?: SortOrderInput | SortOrder
    partsUsed?: SortOrderInput | SortOrder
    laborHours?: SortOrderInput | SortOrder
    partsCost?: SortOrderInput | SortOrder
    laborCost?: SortOrderInput | SortOrder
    totalCost?: SortOrderInput | SortOrder
    workStartedAt?: SortOrderInput | SortOrder
    workCompletedAt?: SortOrderInput | SortOrder
    technicianNotes?: SortOrderInput | SortOrder
    managerReviewNotes?: SortOrderInput | SortOrder
    finalApprovedAt?: SortOrderInput | SortOrder
    finalApprovedBy?: SortOrderInput | SortOrder
    workPhotos?: SortOrderInput | SortOrder
    _count?: MaintenanceCountOrderByAggregateInput
    _avg?: MaintenanceAvgOrderByAggregateInput
    _max?: MaintenanceMaxOrderByAggregateInput
    _min?: MaintenanceMinOrderByAggregateInput
    _sum?: MaintenanceSumOrderByAggregateInput
  }

  export type MaintenanceScalarWhereWithAggregatesInput = {
    AND?: MaintenanceScalarWhereWithAggregatesInput | MaintenanceScalarWhereWithAggregatesInput[]
    OR?: MaintenanceScalarWhereWithAggregatesInput[]
    NOT?: MaintenanceScalarWhereWithAggregatesInput | MaintenanceScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Maintenance"> | string
    assetId?: StringWithAggregatesFilter<"Maintenance"> | string
    description?: StringWithAggregatesFilter<"Maintenance"> | string
    cost?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Maintenance"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Maintenance"> | Date | string
    completedAt?: DateTimeNullableWithAggregatesFilter<"Maintenance"> | Date | string | null
    scheduledDate?: DateTimeNullableWithAggregatesFilter<"Maintenance"> | Date | string | null
    priority?: EnumMaintenancePriorityWithAggregatesFilter<"Maintenance"> | $Enums.MaintenancePriority
    requesterId?: StringWithAggregatesFilter<"Maintenance"> | string
    managerId?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    status?: EnumMaintenanceStatusWithAggregatesFilter<"Maintenance"> | $Enums.MaintenanceStatus
    notes?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    maintenanceType?: EnumMaintenanceTypeWithAggregatesFilter<"Maintenance"> | $Enums.MaintenanceType
    scheduleId?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    templateId?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    assignedToId?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    estimatedHours?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    actualHours?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    checklistItems?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    issueType?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    urgencyLevel?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    reportedBy?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    assetDowntime?: BoolWithAggregatesFilter<"Maintenance"> | boolean
    impactDescription?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    photoUrls?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    workPerformed?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    partsUsed?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    laborHours?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    partsCost?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    laborCost?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    totalCost?: FloatNullableWithAggregatesFilter<"Maintenance"> | number | null
    workStartedAt?: DateTimeNullableWithAggregatesFilter<"Maintenance"> | Date | string | null
    workCompletedAt?: DateTimeNullableWithAggregatesFilter<"Maintenance"> | Date | string | null
    technicianNotes?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    managerReviewNotes?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    finalApprovedAt?: DateTimeNullableWithAggregatesFilter<"Maintenance"> | Date | string | null
    finalApprovedBy?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
    workPhotos?: StringNullableWithAggregatesFilter<"Maintenance"> | string | null
  }

  export type DisposalWhereInput = {
    AND?: DisposalWhereInput | DisposalWhereInput[]
    OR?: DisposalWhereInput[]
    NOT?: DisposalWhereInput | DisposalWhereInput[]
    id?: StringFilter<"Disposal"> | string
    assetId?: StringFilter<"Disposal"> | string
    reason?: StringFilter<"Disposal"> | string
    createdAt?: DateTimeFilter<"Disposal"> | Date | string
    updatedAt?: DateTimeFilter<"Disposal"> | Date | string
    actualValue?: FloatNullableFilter<"Disposal"> | number | null
    expectedValue?: FloatFilter<"Disposal"> | number
    requesterId?: StringFilter<"Disposal"> | string
    method?: EnumDisposalMethodFilter<"Disposal"> | $Enums.DisposalMethod
    status?: EnumDisposalStatusFilter<"Disposal"> | $Enums.DisposalStatus
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type DisposalOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    actualValue?: SortOrderInput | SortOrder
    expectedValue?: SortOrder
    requesterId?: SortOrder
    method?: SortOrder
    status?: SortOrder
    asset?: AssetOrderByWithRelationInput
    requester?: UserOrderByWithRelationInput
  }

  export type DisposalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DisposalWhereInput | DisposalWhereInput[]
    OR?: DisposalWhereInput[]
    NOT?: DisposalWhereInput | DisposalWhereInput[]
    assetId?: StringFilter<"Disposal"> | string
    reason?: StringFilter<"Disposal"> | string
    createdAt?: DateTimeFilter<"Disposal"> | Date | string
    updatedAt?: DateTimeFilter<"Disposal"> | Date | string
    actualValue?: FloatNullableFilter<"Disposal"> | number | null
    expectedValue?: FloatFilter<"Disposal"> | number
    requesterId?: StringFilter<"Disposal"> | string
    method?: EnumDisposalMethodFilter<"Disposal"> | $Enums.DisposalMethod
    status?: EnumDisposalStatusFilter<"Disposal"> | $Enums.DisposalStatus
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type DisposalOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    actualValue?: SortOrderInput | SortOrder
    expectedValue?: SortOrder
    requesterId?: SortOrder
    method?: SortOrder
    status?: SortOrder
    _count?: DisposalCountOrderByAggregateInput
    _avg?: DisposalAvgOrderByAggregateInput
    _max?: DisposalMaxOrderByAggregateInput
    _min?: DisposalMinOrderByAggregateInput
    _sum?: DisposalSumOrderByAggregateInput
  }

  export type DisposalScalarWhereWithAggregatesInput = {
    AND?: DisposalScalarWhereWithAggregatesInput | DisposalScalarWhereWithAggregatesInput[]
    OR?: DisposalScalarWhereWithAggregatesInput[]
    NOT?: DisposalScalarWhereWithAggregatesInput | DisposalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Disposal"> | string
    assetId?: StringWithAggregatesFilter<"Disposal"> | string
    reason?: StringWithAggregatesFilter<"Disposal"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Disposal"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Disposal"> | Date | string
    actualValue?: FloatNullableWithAggregatesFilter<"Disposal"> | number | null
    expectedValue?: FloatWithAggregatesFilter<"Disposal"> | number
    requesterId?: StringWithAggregatesFilter<"Disposal"> | string
    method?: EnumDisposalMethodWithAggregatesFilter<"Disposal"> | $Enums.DisposalMethod
    status?: EnumDisposalStatusWithAggregatesFilter<"Disposal"> | $Enums.DisposalStatus
  }

  export type DocumentWhereInput = {
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    id?: StringFilter<"Document"> | string
    assetId?: StringFilter<"Document"> | string
    type?: EnumDocumentTypeFilter<"Document"> | $Enums.DocumentType
    url?: StringFilter<"Document"> | string
    fileName?: StringNullableFilter<"Document"> | string | null
    fileSize?: IntNullableFilter<"Document"> | number | null
    filePath?: StringNullableFilter<"Document"> | string | null
    mimeType?: StringNullableFilter<"Document"> | string | null
    createdAt?: DateTimeFilter<"Document"> | Date | string
    updatedAt?: DateTimeFilter<"Document"> | Date | string
    meta?: JsonNullableFilter<"Document">
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }

  export type DocumentOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    type?: SortOrder
    url?: SortOrder
    fileName?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    filePath?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    meta?: SortOrderInput | SortOrder
    asset?: AssetOrderByWithRelationInput
  }

  export type DocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DocumentWhereInput | DocumentWhereInput[]
    OR?: DocumentWhereInput[]
    NOT?: DocumentWhereInput | DocumentWhereInput[]
    assetId?: StringFilter<"Document"> | string
    type?: EnumDocumentTypeFilter<"Document"> | $Enums.DocumentType
    url?: StringFilter<"Document"> | string
    fileName?: StringNullableFilter<"Document"> | string | null
    fileSize?: IntNullableFilter<"Document"> | number | null
    filePath?: StringNullableFilter<"Document"> | string | null
    mimeType?: StringNullableFilter<"Document"> | string | null
    createdAt?: DateTimeFilter<"Document"> | Date | string
    updatedAt?: DateTimeFilter<"Document"> | Date | string
    meta?: JsonNullableFilter<"Document">
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }, "id">

  export type DocumentOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    type?: SortOrder
    url?: SortOrder
    fileName?: SortOrderInput | SortOrder
    fileSize?: SortOrderInput | SortOrder
    filePath?: SortOrderInput | SortOrder
    mimeType?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    meta?: SortOrderInput | SortOrder
    _count?: DocumentCountOrderByAggregateInput
    _avg?: DocumentAvgOrderByAggregateInput
    _max?: DocumentMaxOrderByAggregateInput
    _min?: DocumentMinOrderByAggregateInput
    _sum?: DocumentSumOrderByAggregateInput
  }

  export type DocumentScalarWhereWithAggregatesInput = {
    AND?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    OR?: DocumentScalarWhereWithAggregatesInput[]
    NOT?: DocumentScalarWhereWithAggregatesInput | DocumentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Document"> | string
    assetId?: StringWithAggregatesFilter<"Document"> | string
    type?: EnumDocumentTypeWithAggregatesFilter<"Document"> | $Enums.DocumentType
    url?: StringWithAggregatesFilter<"Document"> | string
    fileName?: StringNullableWithAggregatesFilter<"Document"> | string | null
    fileSize?: IntNullableWithAggregatesFilter<"Document"> | number | null
    filePath?: StringNullableWithAggregatesFilter<"Document"> | string | null
    mimeType?: StringNullableWithAggregatesFilter<"Document"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Document"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Document"> | Date | string
    meta?: JsonNullableWithAggregatesFilter<"Document">
  }

  export type DepreciationWhereInput = {
    AND?: DepreciationWhereInput | DepreciationWhereInput[]
    OR?: DepreciationWhereInput[]
    NOT?: DepreciationWhereInput | DepreciationWhereInput[]
    id?: StringFilter<"Depreciation"> | string
    assetId?: StringFilter<"Depreciation"> | string
    amount?: FloatFilter<"Depreciation"> | number
    date?: DateTimeFilter<"Depreciation"> | Date | string
    createdAt?: DateTimeFilter<"Depreciation"> | Date | string
    depreciationRate?: FloatFilter<"Depreciation"> | number
    description?: StringNullableFilter<"Depreciation"> | string | null
    method?: StringFilter<"Depreciation"> | string
    salvageValue?: FloatFilter<"Depreciation"> | number
    updatedAt?: DateTimeFilter<"Depreciation"> | Date | string
    usefulLife?: IntFilter<"Depreciation"> | number
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }

  export type DepreciationOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrderInput | SortOrder
    method?: SortOrder
    salvageValue?: SortOrder
    updatedAt?: SortOrder
    usefulLife?: SortOrder
    asset?: AssetOrderByWithRelationInput
  }

  export type DepreciationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DepreciationWhereInput | DepreciationWhereInput[]
    OR?: DepreciationWhereInput[]
    NOT?: DepreciationWhereInput | DepreciationWhereInput[]
    assetId?: StringFilter<"Depreciation"> | string
    amount?: FloatFilter<"Depreciation"> | number
    date?: DateTimeFilter<"Depreciation"> | Date | string
    createdAt?: DateTimeFilter<"Depreciation"> | Date | string
    depreciationRate?: FloatFilter<"Depreciation"> | number
    description?: StringNullableFilter<"Depreciation"> | string | null
    method?: StringFilter<"Depreciation"> | string
    salvageValue?: FloatFilter<"Depreciation"> | number
    updatedAt?: DateTimeFilter<"Depreciation"> | Date | string
    usefulLife?: IntFilter<"Depreciation"> | number
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }, "id">

  export type DepreciationOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrderInput | SortOrder
    method?: SortOrder
    salvageValue?: SortOrder
    updatedAt?: SortOrder
    usefulLife?: SortOrder
    _count?: DepreciationCountOrderByAggregateInput
    _avg?: DepreciationAvgOrderByAggregateInput
    _max?: DepreciationMaxOrderByAggregateInput
    _min?: DepreciationMinOrderByAggregateInput
    _sum?: DepreciationSumOrderByAggregateInput
  }

  export type DepreciationScalarWhereWithAggregatesInput = {
    AND?: DepreciationScalarWhereWithAggregatesInput | DepreciationScalarWhereWithAggregatesInput[]
    OR?: DepreciationScalarWhereWithAggregatesInput[]
    NOT?: DepreciationScalarWhereWithAggregatesInput | DepreciationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Depreciation"> | string
    assetId?: StringWithAggregatesFilter<"Depreciation"> | string
    amount?: FloatWithAggregatesFilter<"Depreciation"> | number
    date?: DateTimeWithAggregatesFilter<"Depreciation"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Depreciation"> | Date | string
    depreciationRate?: FloatWithAggregatesFilter<"Depreciation"> | number
    description?: StringNullableWithAggregatesFilter<"Depreciation"> | string | null
    method?: StringWithAggregatesFilter<"Depreciation"> | string
    salvageValue?: FloatWithAggregatesFilter<"Depreciation"> | number
    updatedAt?: DateTimeWithAggregatesFilter<"Depreciation"> | Date | string
    usefulLife?: IntWithAggregatesFilter<"Depreciation"> | number
  }

  export type AssetDepreciationWhereInput = {
    AND?: AssetDepreciationWhereInput | AssetDepreciationWhereInput[]
    OR?: AssetDepreciationWhereInput[]
    NOT?: AssetDepreciationWhereInput | AssetDepreciationWhereInput[]
    id?: StringFilter<"AssetDepreciation"> | string
    assetId?: StringFilter<"AssetDepreciation"> | string
    amount?: FloatFilter<"AssetDepreciation"> | number
    date?: DateTimeFilter<"AssetDepreciation"> | Date | string
    method?: StringFilter<"AssetDepreciation"> | string
    usefulLife?: IntFilter<"AssetDepreciation"> | number
    salvageValue?: FloatFilter<"AssetDepreciation"> | number
    depreciationRate?: FloatNullableFilter<"AssetDepreciation"> | number | null
    description?: StringNullableFilter<"AssetDepreciation"> | string | null
    createdAt?: DateTimeFilter<"AssetDepreciation"> | Date | string
    updatedAt?: DateTimeFilter<"AssetDepreciation"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }

  export type AssetDepreciationOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asset?: AssetOrderByWithRelationInput
  }

  export type AssetDepreciationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AssetDepreciationWhereInput | AssetDepreciationWhereInput[]
    OR?: AssetDepreciationWhereInput[]
    NOT?: AssetDepreciationWhereInput | AssetDepreciationWhereInput[]
    assetId?: StringFilter<"AssetDepreciation"> | string
    amount?: FloatFilter<"AssetDepreciation"> | number
    date?: DateTimeFilter<"AssetDepreciation"> | Date | string
    method?: StringFilter<"AssetDepreciation"> | string
    usefulLife?: IntFilter<"AssetDepreciation"> | number
    salvageValue?: FloatFilter<"AssetDepreciation"> | number
    depreciationRate?: FloatNullableFilter<"AssetDepreciation"> | number | null
    description?: StringNullableFilter<"AssetDepreciation"> | string | null
    createdAt?: DateTimeFilter<"AssetDepreciation"> | Date | string
    updatedAt?: DateTimeFilter<"AssetDepreciation"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }, "id">

  export type AssetDepreciationOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AssetDepreciationCountOrderByAggregateInput
    _avg?: AssetDepreciationAvgOrderByAggregateInput
    _max?: AssetDepreciationMaxOrderByAggregateInput
    _min?: AssetDepreciationMinOrderByAggregateInput
    _sum?: AssetDepreciationSumOrderByAggregateInput
  }

  export type AssetDepreciationScalarWhereWithAggregatesInput = {
    AND?: AssetDepreciationScalarWhereWithAggregatesInput | AssetDepreciationScalarWhereWithAggregatesInput[]
    OR?: AssetDepreciationScalarWhereWithAggregatesInput[]
    NOT?: AssetDepreciationScalarWhereWithAggregatesInput | AssetDepreciationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AssetDepreciation"> | string
    assetId?: StringWithAggregatesFilter<"AssetDepreciation"> | string
    amount?: FloatWithAggregatesFilter<"AssetDepreciation"> | number
    date?: DateTimeWithAggregatesFilter<"AssetDepreciation"> | Date | string
    method?: StringWithAggregatesFilter<"AssetDepreciation"> | string
    usefulLife?: IntWithAggregatesFilter<"AssetDepreciation"> | number
    salvageValue?: FloatWithAggregatesFilter<"AssetDepreciation"> | number
    depreciationRate?: FloatNullableWithAggregatesFilter<"AssetDepreciation"> | number | null
    description?: StringNullableWithAggregatesFilter<"AssetDepreciation"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AssetDepreciation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AssetDepreciation"> | Date | string
  }

  export type AssetHistoryWhereInput = {
    AND?: AssetHistoryWhereInput | AssetHistoryWhereInput[]
    OR?: AssetHistoryWhereInput[]
    NOT?: AssetHistoryWhereInput | AssetHistoryWhereInput[]
    id?: StringFilter<"AssetHistory"> | string
    assetId?: StringFilter<"AssetHistory"> | string
    field?: StringFilter<"AssetHistory"> | string
    oldValue?: StringNullableFilter<"AssetHistory"> | string | null
    newValue?: StringNullableFilter<"AssetHistory"> | string | null
    changedAt?: DateTimeFilter<"AssetHistory"> | Date | string
    changedBy?: StringNullableFilter<"AssetHistory"> | string | null
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }

  export type AssetHistoryOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    field?: SortOrder
    oldValue?: SortOrderInput | SortOrder
    newValue?: SortOrderInput | SortOrder
    changedAt?: SortOrder
    changedBy?: SortOrderInput | SortOrder
    asset?: AssetOrderByWithRelationInput
  }

  export type AssetHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AssetHistoryWhereInput | AssetHistoryWhereInput[]
    OR?: AssetHistoryWhereInput[]
    NOT?: AssetHistoryWhereInput | AssetHistoryWhereInput[]
    assetId?: StringFilter<"AssetHistory"> | string
    field?: StringFilter<"AssetHistory"> | string
    oldValue?: StringNullableFilter<"AssetHistory"> | string | null
    newValue?: StringNullableFilter<"AssetHistory"> | string | null
    changedAt?: DateTimeFilter<"AssetHistory"> | Date | string
    changedBy?: StringNullableFilter<"AssetHistory"> | string | null
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }, "id">

  export type AssetHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    field?: SortOrder
    oldValue?: SortOrderInput | SortOrder
    newValue?: SortOrderInput | SortOrder
    changedAt?: SortOrder
    changedBy?: SortOrderInput | SortOrder
    _count?: AssetHistoryCountOrderByAggregateInput
    _max?: AssetHistoryMaxOrderByAggregateInput
    _min?: AssetHistoryMinOrderByAggregateInput
  }

  export type AssetHistoryScalarWhereWithAggregatesInput = {
    AND?: AssetHistoryScalarWhereWithAggregatesInput | AssetHistoryScalarWhereWithAggregatesInput[]
    OR?: AssetHistoryScalarWhereWithAggregatesInput[]
    NOT?: AssetHistoryScalarWhereWithAggregatesInput | AssetHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AssetHistory"> | string
    assetId?: StringWithAggregatesFilter<"AssetHistory"> | string
    field?: StringWithAggregatesFilter<"AssetHistory"> | string
    oldValue?: StringNullableWithAggregatesFilter<"AssetHistory"> | string | null
    newValue?: StringNullableWithAggregatesFilter<"AssetHistory"> | string | null
    changedAt?: DateTimeWithAggregatesFilter<"AssetHistory"> | Date | string
    changedBy?: StringNullableWithAggregatesFilter<"AssetHistory"> | string | null
  }

  export type LinkedAssetWhereInput = {
    AND?: LinkedAssetWhereInput | LinkedAssetWhereInput[]
    OR?: LinkedAssetWhereInput[]
    NOT?: LinkedAssetWhereInput | LinkedAssetWhereInput[]
    id?: StringFilter<"LinkedAsset"> | string
    fromAssetId?: StringFilter<"LinkedAsset"> | string
    toAssetId?: StringFilter<"LinkedAsset"> | string
    createdAt?: DateTimeFilter<"LinkedAsset"> | Date | string
    updatedAt?: DateTimeFilter<"LinkedAsset"> | Date | string
    fromAsset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    toAsset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }

  export type LinkedAssetOrderByWithRelationInput = {
    id?: SortOrder
    fromAssetId?: SortOrder
    toAssetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    fromAsset?: AssetOrderByWithRelationInput
    toAsset?: AssetOrderByWithRelationInput
  }

  export type LinkedAssetWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    fromAssetId_toAssetId?: LinkedAssetFromAssetIdToAssetIdCompoundUniqueInput
    AND?: LinkedAssetWhereInput | LinkedAssetWhereInput[]
    OR?: LinkedAssetWhereInput[]
    NOT?: LinkedAssetWhereInput | LinkedAssetWhereInput[]
    fromAssetId?: StringFilter<"LinkedAsset"> | string
    toAssetId?: StringFilter<"LinkedAsset"> | string
    createdAt?: DateTimeFilter<"LinkedAsset"> | Date | string
    updatedAt?: DateTimeFilter<"LinkedAsset"> | Date | string
    fromAsset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    toAsset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }, "id" | "fromAssetId_toAssetId">

  export type LinkedAssetOrderByWithAggregationInput = {
    id?: SortOrder
    fromAssetId?: SortOrder
    toAssetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: LinkedAssetCountOrderByAggregateInput
    _max?: LinkedAssetMaxOrderByAggregateInput
    _min?: LinkedAssetMinOrderByAggregateInput
  }

  export type LinkedAssetScalarWhereWithAggregatesInput = {
    AND?: LinkedAssetScalarWhereWithAggregatesInput | LinkedAssetScalarWhereWithAggregatesInput[]
    OR?: LinkedAssetScalarWhereWithAggregatesInput[]
    NOT?: LinkedAssetScalarWhereWithAggregatesInput | LinkedAssetScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LinkedAsset"> | string
    fromAssetId?: StringWithAggregatesFilter<"LinkedAsset"> | string
    toAssetId?: StringWithAggregatesFilter<"LinkedAsset"> | string
    createdAt?: DateTimeWithAggregatesFilter<"LinkedAsset"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"LinkedAsset"> | Date | string
  }

  export type PermissionWhereInput = {
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    id?: StringFilter<"Permission"> | string
    name?: StringFilter<"Permission"> | string
    description?: StringNullableFilter<"Permission"> | string | null
    userPermissions?: UserPermissionListRelationFilter
    rolePermissions?: RolePermissionListRelationFilter
  }

  export type PermissionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    userPermissions?: UserPermissionOrderByRelationAggregateInput
    rolePermissions?: RolePermissionOrderByRelationAggregateInput
  }

  export type PermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    description?: StringNullableFilter<"Permission"> | string | null
    userPermissions?: UserPermissionListRelationFilter
    rolePermissions?: RolePermissionListRelationFilter
  }, "id" | "name">

  export type PermissionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    _count?: PermissionCountOrderByAggregateInput
    _max?: PermissionMaxOrderByAggregateInput
    _min?: PermissionMinOrderByAggregateInput
  }

  export type PermissionScalarWhereWithAggregatesInput = {
    AND?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    OR?: PermissionScalarWhereWithAggregatesInput[]
    NOT?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Permission"> | string
    name?: StringWithAggregatesFilter<"Permission"> | string
    description?: StringNullableWithAggregatesFilter<"Permission"> | string | null
  }

  export type UserPermissionWhereInput = {
    AND?: UserPermissionWhereInput | UserPermissionWhereInput[]
    OR?: UserPermissionWhereInput[]
    NOT?: UserPermissionWhereInput | UserPermissionWhereInput[]
    id?: StringFilter<"UserPermission"> | string
    userId?: StringFilter<"UserPermission"> | string
    permissionId?: StringFilter<"UserPermission"> | string
    granted?: BoolFilter<"UserPermission"> | boolean
    createdAt?: DateTimeFilter<"UserPermission"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
  }

  export type UserPermissionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    permissionId?: SortOrder
    granted?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    permission?: PermissionOrderByWithRelationInput
  }

  export type UserPermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_permissionId?: UserPermissionUserIdPermissionIdCompoundUniqueInput
    AND?: UserPermissionWhereInput | UserPermissionWhereInput[]
    OR?: UserPermissionWhereInput[]
    NOT?: UserPermissionWhereInput | UserPermissionWhereInput[]
    userId?: StringFilter<"UserPermission"> | string
    permissionId?: StringFilter<"UserPermission"> | string
    granted?: BoolFilter<"UserPermission"> | boolean
    createdAt?: DateTimeFilter<"UserPermission"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
  }, "id" | "userId_permissionId">

  export type UserPermissionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    permissionId?: SortOrder
    granted?: SortOrder
    createdAt?: SortOrder
    _count?: UserPermissionCountOrderByAggregateInput
    _max?: UserPermissionMaxOrderByAggregateInput
    _min?: UserPermissionMinOrderByAggregateInput
  }

  export type UserPermissionScalarWhereWithAggregatesInput = {
    AND?: UserPermissionScalarWhereWithAggregatesInput | UserPermissionScalarWhereWithAggregatesInput[]
    OR?: UserPermissionScalarWhereWithAggregatesInput[]
    NOT?: UserPermissionScalarWhereWithAggregatesInput | UserPermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserPermission"> | string
    userId?: StringWithAggregatesFilter<"UserPermission"> | string
    permissionId?: StringWithAggregatesFilter<"UserPermission"> | string
    granted?: BoolWithAggregatesFilter<"UserPermission"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"UserPermission"> | Date | string
  }

  export type RolePermissionWhereInput = {
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    id?: StringFilter<"RolePermission"> | string
    role?: EnumRoleFilter<"RolePermission"> | $Enums.Role
    permissionId?: StringFilter<"RolePermission"> | string
    permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
  }

  export type RolePermissionOrderByWithRelationInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    permission?: PermissionOrderByWithRelationInput
  }

  export type RolePermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    role_permissionId?: RolePermissionRolePermissionIdCompoundUniqueInput
    AND?: RolePermissionWhereInput | RolePermissionWhereInput[]
    OR?: RolePermissionWhereInput[]
    NOT?: RolePermissionWhereInput | RolePermissionWhereInput[]
    role?: EnumRoleFilter<"RolePermission"> | $Enums.Role
    permissionId?: StringFilter<"RolePermission"> | string
    permission?: XOR<PermissionScalarRelationFilter, PermissionWhereInput>
  }, "id" | "role_permissionId">

  export type RolePermissionOrderByWithAggregationInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
    _count?: RolePermissionCountOrderByAggregateInput
    _max?: RolePermissionMaxOrderByAggregateInput
    _min?: RolePermissionMinOrderByAggregateInput
  }

  export type RolePermissionScalarWhereWithAggregatesInput = {
    AND?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    OR?: RolePermissionScalarWhereWithAggregatesInput[]
    NOT?: RolePermissionScalarWhereWithAggregatesInput | RolePermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RolePermission"> | string
    role?: EnumRoleWithAggregatesFilter<"RolePermission"> | $Enums.Role
    permissionId?: StringWithAggregatesFilter<"RolePermission"> | string
  }

  export type CapitalImprovementWhereInput = {
    AND?: CapitalImprovementWhereInput | CapitalImprovementWhereInput[]
    OR?: CapitalImprovementWhereInput[]
    NOT?: CapitalImprovementWhereInput | CapitalImprovementWhereInput[]
    id?: StringFilter<"CapitalImprovement"> | string
    assetId?: StringFilter<"CapitalImprovement"> | string
    description?: StringFilter<"CapitalImprovement"> | string
    improvementDate?: DateTimeFilter<"CapitalImprovement"> | Date | string
    cost?: FloatFilter<"CapitalImprovement"> | number
    usefulLifeMonths?: IntNullableFilter<"CapitalImprovement"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableFilter<"CapitalImprovement"> | $Enums.DepreciationMethodEnum | null
    notes?: StringNullableFilter<"CapitalImprovement"> | string | null
    createdAt?: DateTimeFilter<"CapitalImprovement"> | Date | string
    updatedAt?: DateTimeFilter<"CapitalImprovement"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }

  export type CapitalImprovementOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    improvementDate?: SortOrder
    cost?: SortOrder
    usefulLifeMonths?: SortOrderInput | SortOrder
    depreciationMethod?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asset?: AssetOrderByWithRelationInput
  }

  export type CapitalImprovementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CapitalImprovementWhereInput | CapitalImprovementWhereInput[]
    OR?: CapitalImprovementWhereInput[]
    NOT?: CapitalImprovementWhereInput | CapitalImprovementWhereInput[]
    assetId?: StringFilter<"CapitalImprovement"> | string
    description?: StringFilter<"CapitalImprovement"> | string
    improvementDate?: DateTimeFilter<"CapitalImprovement"> | Date | string
    cost?: FloatFilter<"CapitalImprovement"> | number
    usefulLifeMonths?: IntNullableFilter<"CapitalImprovement"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableFilter<"CapitalImprovement"> | $Enums.DepreciationMethodEnum | null
    notes?: StringNullableFilter<"CapitalImprovement"> | string | null
    createdAt?: DateTimeFilter<"CapitalImprovement"> | Date | string
    updatedAt?: DateTimeFilter<"CapitalImprovement"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
  }, "id">

  export type CapitalImprovementOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    improvementDate?: SortOrder
    cost?: SortOrder
    usefulLifeMonths?: SortOrderInput | SortOrder
    depreciationMethod?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CapitalImprovementCountOrderByAggregateInput
    _avg?: CapitalImprovementAvgOrderByAggregateInput
    _max?: CapitalImprovementMaxOrderByAggregateInput
    _min?: CapitalImprovementMinOrderByAggregateInput
    _sum?: CapitalImprovementSumOrderByAggregateInput
  }

  export type CapitalImprovementScalarWhereWithAggregatesInput = {
    AND?: CapitalImprovementScalarWhereWithAggregatesInput | CapitalImprovementScalarWhereWithAggregatesInput[]
    OR?: CapitalImprovementScalarWhereWithAggregatesInput[]
    NOT?: CapitalImprovementScalarWhereWithAggregatesInput | CapitalImprovementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CapitalImprovement"> | string
    assetId?: StringWithAggregatesFilter<"CapitalImprovement"> | string
    description?: StringWithAggregatesFilter<"CapitalImprovement"> | string
    improvementDate?: DateTimeWithAggregatesFilter<"CapitalImprovement"> | Date | string
    cost?: FloatWithAggregatesFilter<"CapitalImprovement"> | number
    usefulLifeMonths?: IntNullableWithAggregatesFilter<"CapitalImprovement"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableWithAggregatesFilter<"CapitalImprovement"> | $Enums.DepreciationMethodEnum | null
    notes?: StringNullableWithAggregatesFilter<"CapitalImprovement"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CapitalImprovement"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CapitalImprovement"> | Date | string
  }

  export type MaintenanceScheduleWhereInput = {
    AND?: MaintenanceScheduleWhereInput | MaintenanceScheduleWhereInput[]
    OR?: MaintenanceScheduleWhereInput[]
    NOT?: MaintenanceScheduleWhereInput | MaintenanceScheduleWhereInput[]
    id?: StringFilter<"MaintenanceSchedule"> | string
    assetId?: StringFilter<"MaintenanceSchedule"> | string
    title?: StringFilter<"MaintenanceSchedule"> | string
    description?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    frequency?: EnumScheduleFrequencyFilter<"MaintenanceSchedule"> | $Enums.ScheduleFrequency
    customInterval?: IntNullableFilter<"MaintenanceSchedule"> | number | null
    priority?: EnumMaintenancePriorityFilter<"MaintenanceSchedule"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableFilter<"MaintenanceSchedule"> | number | null
    status?: EnumScheduleStatusFilter<"MaintenanceSchedule"> | $Enums.ScheduleStatus
    createdById?: StringFilter<"MaintenanceSchedule"> | string
    assignedToId?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    templateId?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    startDate?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    endDate?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    lastGenerated?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    nextDue?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    leadTimeDays?: IntFilter<"MaintenanceSchedule"> | number
    autoAssign?: BoolFilter<"MaintenanceSchedule"> | boolean
    createdAt?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    updatedAt?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    assignedTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    template?: XOR<MaintenanceTemplateNullableScalarRelationFilter, MaintenanceTemplateWhereInput> | null
    maintenanceTasks?: MaintenanceListRelationFilter
  }

  export type MaintenanceScheduleOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    frequency?: SortOrder
    customInterval?: SortOrderInput | SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    status?: SortOrder
    createdById?: SortOrder
    assignedToId?: SortOrderInput | SortOrder
    templateId?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    lastGenerated?: SortOrderInput | SortOrder
    nextDue?: SortOrderInput | SortOrder
    leadTimeDays?: SortOrder
    autoAssign?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asset?: AssetOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    assignedTo?: UserOrderByWithRelationInput
    template?: MaintenanceTemplateOrderByWithRelationInput
    maintenanceTasks?: MaintenanceOrderByRelationAggregateInput
  }

  export type MaintenanceScheduleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MaintenanceScheduleWhereInput | MaintenanceScheduleWhereInput[]
    OR?: MaintenanceScheduleWhereInput[]
    NOT?: MaintenanceScheduleWhereInput | MaintenanceScheduleWhereInput[]
    assetId?: StringFilter<"MaintenanceSchedule"> | string
    title?: StringFilter<"MaintenanceSchedule"> | string
    description?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    frequency?: EnumScheduleFrequencyFilter<"MaintenanceSchedule"> | $Enums.ScheduleFrequency
    customInterval?: IntNullableFilter<"MaintenanceSchedule"> | number | null
    priority?: EnumMaintenancePriorityFilter<"MaintenanceSchedule"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableFilter<"MaintenanceSchedule"> | number | null
    status?: EnumScheduleStatusFilter<"MaintenanceSchedule"> | $Enums.ScheduleStatus
    createdById?: StringFilter<"MaintenanceSchedule"> | string
    assignedToId?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    templateId?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    startDate?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    endDate?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    lastGenerated?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    nextDue?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    leadTimeDays?: IntFilter<"MaintenanceSchedule"> | number
    autoAssign?: BoolFilter<"MaintenanceSchedule"> | boolean
    createdAt?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    updatedAt?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    assignedTo?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    template?: XOR<MaintenanceTemplateNullableScalarRelationFilter, MaintenanceTemplateWhereInput> | null
    maintenanceTasks?: MaintenanceListRelationFilter
  }, "id">

  export type MaintenanceScheduleOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    frequency?: SortOrder
    customInterval?: SortOrderInput | SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    status?: SortOrder
    createdById?: SortOrder
    assignedToId?: SortOrderInput | SortOrder
    templateId?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    lastGenerated?: SortOrderInput | SortOrder
    nextDue?: SortOrderInput | SortOrder
    leadTimeDays?: SortOrder
    autoAssign?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MaintenanceScheduleCountOrderByAggregateInput
    _avg?: MaintenanceScheduleAvgOrderByAggregateInput
    _max?: MaintenanceScheduleMaxOrderByAggregateInput
    _min?: MaintenanceScheduleMinOrderByAggregateInput
    _sum?: MaintenanceScheduleSumOrderByAggregateInput
  }

  export type MaintenanceScheduleScalarWhereWithAggregatesInput = {
    AND?: MaintenanceScheduleScalarWhereWithAggregatesInput | MaintenanceScheduleScalarWhereWithAggregatesInput[]
    OR?: MaintenanceScheduleScalarWhereWithAggregatesInput[]
    NOT?: MaintenanceScheduleScalarWhereWithAggregatesInput | MaintenanceScheduleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MaintenanceSchedule"> | string
    assetId?: StringWithAggregatesFilter<"MaintenanceSchedule"> | string
    title?: StringWithAggregatesFilter<"MaintenanceSchedule"> | string
    description?: StringNullableWithAggregatesFilter<"MaintenanceSchedule"> | string | null
    frequency?: EnumScheduleFrequencyWithAggregatesFilter<"MaintenanceSchedule"> | $Enums.ScheduleFrequency
    customInterval?: IntNullableWithAggregatesFilter<"MaintenanceSchedule"> | number | null
    priority?: EnumMaintenancePriorityWithAggregatesFilter<"MaintenanceSchedule"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableWithAggregatesFilter<"MaintenanceSchedule"> | number | null
    status?: EnumScheduleStatusWithAggregatesFilter<"MaintenanceSchedule"> | $Enums.ScheduleStatus
    createdById?: StringWithAggregatesFilter<"MaintenanceSchedule"> | string
    assignedToId?: StringNullableWithAggregatesFilter<"MaintenanceSchedule"> | string | null
    templateId?: StringNullableWithAggregatesFilter<"MaintenanceSchedule"> | string | null
    startDate?: DateTimeWithAggregatesFilter<"MaintenanceSchedule"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"MaintenanceSchedule"> | Date | string | null
    lastGenerated?: DateTimeNullableWithAggregatesFilter<"MaintenanceSchedule"> | Date | string | null
    nextDue?: DateTimeNullableWithAggregatesFilter<"MaintenanceSchedule"> | Date | string | null
    leadTimeDays?: IntWithAggregatesFilter<"MaintenanceSchedule"> | number
    autoAssign?: BoolWithAggregatesFilter<"MaintenanceSchedule"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"MaintenanceSchedule"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MaintenanceSchedule"> | Date | string
  }

  export type MaintenanceTemplateWhereInput = {
    AND?: MaintenanceTemplateWhereInput | MaintenanceTemplateWhereInput[]
    OR?: MaintenanceTemplateWhereInput[]
    NOT?: MaintenanceTemplateWhereInput | MaintenanceTemplateWhereInput[]
    id?: StringFilter<"MaintenanceTemplate"> | string
    name?: StringFilter<"MaintenanceTemplate"> | string
    description?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    maintenanceType?: EnumMaintenanceTypeFilter<"MaintenanceTemplate"> | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFilter<"MaintenanceTemplate"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableFilter<"MaintenanceTemplate"> | number | null
    instructions?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    checklistItems?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    requiredSkills?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    safetyNotes?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    toolsRequired?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    partsRequired?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    isActive?: BoolFilter<"MaintenanceTemplate"> | boolean
    createdById?: StringFilter<"MaintenanceTemplate"> | string
    createdAt?: DateTimeFilter<"MaintenanceTemplate"> | Date | string
    updatedAt?: DateTimeFilter<"MaintenanceTemplate"> | Date | string
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    schedules?: MaintenanceScheduleListRelationFilter
    maintenanceTasks?: MaintenanceListRelationFilter
  }

  export type MaintenanceTemplateOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    maintenanceType?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    instructions?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    requiredSkills?: SortOrderInput | SortOrder
    safetyNotes?: SortOrderInput | SortOrder
    toolsRequired?: SortOrderInput | SortOrder
    partsRequired?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: UserOrderByWithRelationInput
    schedules?: MaintenanceScheduleOrderByRelationAggregateInput
    maintenanceTasks?: MaintenanceOrderByRelationAggregateInput
  }

  export type MaintenanceTemplateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MaintenanceTemplateWhereInput | MaintenanceTemplateWhereInput[]
    OR?: MaintenanceTemplateWhereInput[]
    NOT?: MaintenanceTemplateWhereInput | MaintenanceTemplateWhereInput[]
    name?: StringFilter<"MaintenanceTemplate"> | string
    description?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    maintenanceType?: EnumMaintenanceTypeFilter<"MaintenanceTemplate"> | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFilter<"MaintenanceTemplate"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableFilter<"MaintenanceTemplate"> | number | null
    instructions?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    checklistItems?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    requiredSkills?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    safetyNotes?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    toolsRequired?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    partsRequired?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    isActive?: BoolFilter<"MaintenanceTemplate"> | boolean
    createdById?: StringFilter<"MaintenanceTemplate"> | string
    createdAt?: DateTimeFilter<"MaintenanceTemplate"> | Date | string
    updatedAt?: DateTimeFilter<"MaintenanceTemplate"> | Date | string
    createdBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    schedules?: MaintenanceScheduleListRelationFilter
    maintenanceTasks?: MaintenanceListRelationFilter
  }, "id">

  export type MaintenanceTemplateOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    maintenanceType?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    instructions?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    requiredSkills?: SortOrderInput | SortOrder
    safetyNotes?: SortOrderInput | SortOrder
    toolsRequired?: SortOrderInput | SortOrder
    partsRequired?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MaintenanceTemplateCountOrderByAggregateInput
    _avg?: MaintenanceTemplateAvgOrderByAggregateInput
    _max?: MaintenanceTemplateMaxOrderByAggregateInput
    _min?: MaintenanceTemplateMinOrderByAggregateInput
    _sum?: MaintenanceTemplateSumOrderByAggregateInput
  }

  export type MaintenanceTemplateScalarWhereWithAggregatesInput = {
    AND?: MaintenanceTemplateScalarWhereWithAggregatesInput | MaintenanceTemplateScalarWhereWithAggregatesInput[]
    OR?: MaintenanceTemplateScalarWhereWithAggregatesInput[]
    NOT?: MaintenanceTemplateScalarWhereWithAggregatesInput | MaintenanceTemplateScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MaintenanceTemplate"> | string
    name?: StringWithAggregatesFilter<"MaintenanceTemplate"> | string
    description?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    maintenanceType?: EnumMaintenanceTypeWithAggregatesFilter<"MaintenanceTemplate"> | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityWithAggregatesFilter<"MaintenanceTemplate"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableWithAggregatesFilter<"MaintenanceTemplate"> | number | null
    instructions?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    checklistItems?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    requiredSkills?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    safetyNotes?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    toolsRequired?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    partsRequired?: StringNullableWithAggregatesFilter<"MaintenanceTemplate"> | string | null
    isActive?: BoolWithAggregatesFilter<"MaintenanceTemplate"> | boolean
    createdById?: StringWithAggregatesFilter<"MaintenanceTemplate"> | string
    createdAt?: DateTimeWithAggregatesFilter<"MaintenanceTemplate"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MaintenanceTemplate"> | Date | string
  }

  export type AssetAuditWhereInput = {
    AND?: AssetAuditWhereInput | AssetAuditWhereInput[]
    OR?: AssetAuditWhereInput[]
    NOT?: AssetAuditWhereInput | AssetAuditWhereInput[]
    id?: StringFilter<"AssetAudit"> | string
    assetId?: StringFilter<"AssetAudit"> | string
    auditDate?: DateTimeFilter<"AssetAudit"> | Date | string
    auditedBy?: StringFilter<"AssetAudit"> | string
    auditorId?: StringNullableFilter<"AssetAudit"> | string | null
    status?: EnumAuditStatusFilter<"AssetAudit"> | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFilter<"AssetAudit"> | $Enums.AuditWorkflowStatus
    condition?: EnumAuditConditionNullableFilter<"AssetAudit"> | $Enums.AuditCondition | null
    locationVerified?: BoolFilter<"AssetAudit"> | boolean
    actualLocation?: StringNullableFilter<"AssetAudit"> | string | null
    notes?: StringNullableFilter<"AssetAudit"> | string | null
    discrepancies?: StringNullableFilter<"AssetAudit"> | string | null
    recommendations?: StringNullableFilter<"AssetAudit"> | string | null
    checklistItems?: StringNullableFilter<"AssetAudit"> | string | null
    discrepancyResolved?: BoolFilter<"AssetAudit"> | boolean
    resolvedDate?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    resolvedBy?: StringNullableFilter<"AssetAudit"> | string | null
    resolutionNotes?: StringNullableFilter<"AssetAudit"> | string | null
    photoUrls?: StringNullableFilter<"AssetAudit"> | string | null
    nextAuditDate?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    assignmentId?: StringNullableFilter<"AssetAudit"> | string | null
    requestId?: StringNullableFilter<"AssetAudit"> | string | null
    reviewedBy?: StringNullableFilter<"AssetAudit"> | string | null
    reviewedAt?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AssetAudit"> | string | null
    managerApproval?: BoolNullableFilter<"AssetAudit"> | boolean | null
    createdAt?: DateTimeFilter<"AssetAudit"> | Date | string
    updatedAt?: DateTimeFilter<"AssetAudit"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    auditor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    assignment?: XOR<AuditAssignmentNullableScalarRelationFilter, AuditAssignmentWhereInput> | null
    request?: XOR<AuditRequestNullableScalarRelationFilter, AuditRequestWhereInput> | null
  }

  export type AssetAuditOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    auditDate?: SortOrder
    auditedBy?: SortOrder
    auditorId?: SortOrderInput | SortOrder
    status?: SortOrder
    workflowStatus?: SortOrder
    condition?: SortOrderInput | SortOrder
    locationVerified?: SortOrder
    actualLocation?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    discrepancies?: SortOrderInput | SortOrder
    recommendations?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    discrepancyResolved?: SortOrder
    resolvedDate?: SortOrderInput | SortOrder
    resolvedBy?: SortOrderInput | SortOrder
    resolutionNotes?: SortOrderInput | SortOrder
    photoUrls?: SortOrderInput | SortOrder
    nextAuditDate?: SortOrderInput | SortOrder
    assignmentId?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    managerApproval?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asset?: AssetOrderByWithRelationInput
    auditor?: UserOrderByWithRelationInput
    assignment?: AuditAssignmentOrderByWithRelationInput
    request?: AuditRequestOrderByWithRelationInput
  }

  export type AssetAuditWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AssetAuditWhereInput | AssetAuditWhereInput[]
    OR?: AssetAuditWhereInput[]
    NOT?: AssetAuditWhereInput | AssetAuditWhereInput[]
    assetId?: StringFilter<"AssetAudit"> | string
    auditDate?: DateTimeFilter<"AssetAudit"> | Date | string
    auditedBy?: StringFilter<"AssetAudit"> | string
    auditorId?: StringNullableFilter<"AssetAudit"> | string | null
    status?: EnumAuditStatusFilter<"AssetAudit"> | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFilter<"AssetAudit"> | $Enums.AuditWorkflowStatus
    condition?: EnumAuditConditionNullableFilter<"AssetAudit"> | $Enums.AuditCondition | null
    locationVerified?: BoolFilter<"AssetAudit"> | boolean
    actualLocation?: StringNullableFilter<"AssetAudit"> | string | null
    notes?: StringNullableFilter<"AssetAudit"> | string | null
    discrepancies?: StringNullableFilter<"AssetAudit"> | string | null
    recommendations?: StringNullableFilter<"AssetAudit"> | string | null
    checklistItems?: StringNullableFilter<"AssetAudit"> | string | null
    discrepancyResolved?: BoolFilter<"AssetAudit"> | boolean
    resolvedDate?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    resolvedBy?: StringNullableFilter<"AssetAudit"> | string | null
    resolutionNotes?: StringNullableFilter<"AssetAudit"> | string | null
    photoUrls?: StringNullableFilter<"AssetAudit"> | string | null
    nextAuditDate?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    assignmentId?: StringNullableFilter<"AssetAudit"> | string | null
    requestId?: StringNullableFilter<"AssetAudit"> | string | null
    reviewedBy?: StringNullableFilter<"AssetAudit"> | string | null
    reviewedAt?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AssetAudit"> | string | null
    managerApproval?: BoolNullableFilter<"AssetAudit"> | boolean | null
    createdAt?: DateTimeFilter<"AssetAudit"> | Date | string
    updatedAt?: DateTimeFilter<"AssetAudit"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    auditor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    assignment?: XOR<AuditAssignmentNullableScalarRelationFilter, AuditAssignmentWhereInput> | null
    request?: XOR<AuditRequestNullableScalarRelationFilter, AuditRequestWhereInput> | null
  }, "id">

  export type AssetAuditOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    auditDate?: SortOrder
    auditedBy?: SortOrder
    auditorId?: SortOrderInput | SortOrder
    status?: SortOrder
    workflowStatus?: SortOrder
    condition?: SortOrderInput | SortOrder
    locationVerified?: SortOrder
    actualLocation?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    discrepancies?: SortOrderInput | SortOrder
    recommendations?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    discrepancyResolved?: SortOrder
    resolvedDate?: SortOrderInput | SortOrder
    resolvedBy?: SortOrderInput | SortOrder
    resolutionNotes?: SortOrderInput | SortOrder
    photoUrls?: SortOrderInput | SortOrder
    nextAuditDate?: SortOrderInput | SortOrder
    assignmentId?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    managerApproval?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AssetAuditCountOrderByAggregateInput
    _max?: AssetAuditMaxOrderByAggregateInput
    _min?: AssetAuditMinOrderByAggregateInput
  }

  export type AssetAuditScalarWhereWithAggregatesInput = {
    AND?: AssetAuditScalarWhereWithAggregatesInput | AssetAuditScalarWhereWithAggregatesInput[]
    OR?: AssetAuditScalarWhereWithAggregatesInput[]
    NOT?: AssetAuditScalarWhereWithAggregatesInput | AssetAuditScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AssetAudit"> | string
    assetId?: StringWithAggregatesFilter<"AssetAudit"> | string
    auditDate?: DateTimeWithAggregatesFilter<"AssetAudit"> | Date | string
    auditedBy?: StringWithAggregatesFilter<"AssetAudit"> | string
    auditorId?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    status?: EnumAuditStatusWithAggregatesFilter<"AssetAudit"> | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusWithAggregatesFilter<"AssetAudit"> | $Enums.AuditWorkflowStatus
    condition?: EnumAuditConditionNullableWithAggregatesFilter<"AssetAudit"> | $Enums.AuditCondition | null
    locationVerified?: BoolWithAggregatesFilter<"AssetAudit"> | boolean
    actualLocation?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    notes?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    discrepancies?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    recommendations?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    checklistItems?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    discrepancyResolved?: BoolWithAggregatesFilter<"AssetAudit"> | boolean
    resolvedDate?: DateTimeNullableWithAggregatesFilter<"AssetAudit"> | Date | string | null
    resolvedBy?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    resolutionNotes?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    photoUrls?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    nextAuditDate?: DateTimeNullableWithAggregatesFilter<"AssetAudit"> | Date | string | null
    assignmentId?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    requestId?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    reviewedBy?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"AssetAudit"> | Date | string | null
    reviewNotes?: StringNullableWithAggregatesFilter<"AssetAudit"> | string | null
    managerApproval?: BoolNullableWithAggregatesFilter<"AssetAudit"> | boolean | null
    createdAt?: DateTimeWithAggregatesFilter<"AssetAudit"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AssetAudit"> | Date | string
  }

  export type AuditAssignmentWhereInput = {
    AND?: AuditAssignmentWhereInput | AuditAssignmentWhereInput[]
    OR?: AuditAssignmentWhereInput[]
    NOT?: AuditAssignmentWhereInput | AuditAssignmentWhereInput[]
    id?: StringFilter<"AuditAssignment"> | string
    assetId?: StringFilter<"AuditAssignment"> | string
    assignedToId?: StringFilter<"AuditAssignment"> | string
    assignedById?: StringFilter<"AuditAssignment"> | string
    title?: StringFilter<"AuditAssignment"> | string
    description?: StringNullableFilter<"AuditAssignment"> | string | null
    priority?: EnumMaintenancePriorityFilter<"AuditAssignment"> | $Enums.MaintenancePriority
    dueDate?: DateTimeFilter<"AuditAssignment"> | Date | string
    scheduledDate?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    status?: EnumAuditAssignmentStatusFilter<"AuditAssignment"> | $Enums.AuditAssignmentStatus
    instructions?: StringNullableFilter<"AuditAssignment"> | string | null
    checklistItems?: StringNullableFilter<"AuditAssignment"> | string | null
    estimatedHours?: FloatNullableFilter<"AuditAssignment"> | number | null
    actualHours?: FloatNullableFilter<"AuditAssignment"> | number | null
    acceptedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    cancellationReason?: StringNullableFilter<"AuditAssignment"> | string | null
    notificationSent?: BoolFilter<"AuditAssignment"> | boolean
    remindersSent?: IntFilter<"AuditAssignment"> | number
    createdAt?: DateTimeFilter<"AuditAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"AuditAssignment"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    assignedTo?: XOR<UserScalarRelationFilter, UserWhereInput>
    assignedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    audits?: AssetAuditListRelationFilter
  }

  export type AuditAssignmentOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    assignedToId?: SortOrder
    assignedById?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    status?: SortOrder
    instructions?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    actualHours?: SortOrderInput | SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    notificationSent?: SortOrder
    remindersSent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asset?: AssetOrderByWithRelationInput
    assignedTo?: UserOrderByWithRelationInput
    assignedBy?: UserOrderByWithRelationInput
    audits?: AssetAuditOrderByRelationAggregateInput
  }

  export type AuditAssignmentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditAssignmentWhereInput | AuditAssignmentWhereInput[]
    OR?: AuditAssignmentWhereInput[]
    NOT?: AuditAssignmentWhereInput | AuditAssignmentWhereInput[]
    assetId?: StringFilter<"AuditAssignment"> | string
    assignedToId?: StringFilter<"AuditAssignment"> | string
    assignedById?: StringFilter<"AuditAssignment"> | string
    title?: StringFilter<"AuditAssignment"> | string
    description?: StringNullableFilter<"AuditAssignment"> | string | null
    priority?: EnumMaintenancePriorityFilter<"AuditAssignment"> | $Enums.MaintenancePriority
    dueDate?: DateTimeFilter<"AuditAssignment"> | Date | string
    scheduledDate?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    status?: EnumAuditAssignmentStatusFilter<"AuditAssignment"> | $Enums.AuditAssignmentStatus
    instructions?: StringNullableFilter<"AuditAssignment"> | string | null
    checklistItems?: StringNullableFilter<"AuditAssignment"> | string | null
    estimatedHours?: FloatNullableFilter<"AuditAssignment"> | number | null
    actualHours?: FloatNullableFilter<"AuditAssignment"> | number | null
    acceptedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    cancellationReason?: StringNullableFilter<"AuditAssignment"> | string | null
    notificationSent?: BoolFilter<"AuditAssignment"> | boolean
    remindersSent?: IntFilter<"AuditAssignment"> | number
    createdAt?: DateTimeFilter<"AuditAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"AuditAssignment"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    assignedTo?: XOR<UserScalarRelationFilter, UserWhereInput>
    assignedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
    audits?: AssetAuditListRelationFilter
  }, "id">

  export type AuditAssignmentOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    assignedToId?: SortOrder
    assignedById?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    scheduledDate?: SortOrderInput | SortOrder
    status?: SortOrder
    instructions?: SortOrderInput | SortOrder
    checklistItems?: SortOrderInput | SortOrder
    estimatedHours?: SortOrderInput | SortOrder
    actualHours?: SortOrderInput | SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    startedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    notificationSent?: SortOrder
    remindersSent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AuditAssignmentCountOrderByAggregateInput
    _avg?: AuditAssignmentAvgOrderByAggregateInput
    _max?: AuditAssignmentMaxOrderByAggregateInput
    _min?: AuditAssignmentMinOrderByAggregateInput
    _sum?: AuditAssignmentSumOrderByAggregateInput
  }

  export type AuditAssignmentScalarWhereWithAggregatesInput = {
    AND?: AuditAssignmentScalarWhereWithAggregatesInput | AuditAssignmentScalarWhereWithAggregatesInput[]
    OR?: AuditAssignmentScalarWhereWithAggregatesInput[]
    NOT?: AuditAssignmentScalarWhereWithAggregatesInput | AuditAssignmentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditAssignment"> | string
    assetId?: StringWithAggregatesFilter<"AuditAssignment"> | string
    assignedToId?: StringWithAggregatesFilter<"AuditAssignment"> | string
    assignedById?: StringWithAggregatesFilter<"AuditAssignment"> | string
    title?: StringWithAggregatesFilter<"AuditAssignment"> | string
    description?: StringNullableWithAggregatesFilter<"AuditAssignment"> | string | null
    priority?: EnumMaintenancePriorityWithAggregatesFilter<"AuditAssignment"> | $Enums.MaintenancePriority
    dueDate?: DateTimeWithAggregatesFilter<"AuditAssignment"> | Date | string
    scheduledDate?: DateTimeNullableWithAggregatesFilter<"AuditAssignment"> | Date | string | null
    status?: EnumAuditAssignmentStatusWithAggregatesFilter<"AuditAssignment"> | $Enums.AuditAssignmentStatus
    instructions?: StringNullableWithAggregatesFilter<"AuditAssignment"> | string | null
    checklistItems?: StringNullableWithAggregatesFilter<"AuditAssignment"> | string | null
    estimatedHours?: FloatNullableWithAggregatesFilter<"AuditAssignment"> | number | null
    actualHours?: FloatNullableWithAggregatesFilter<"AuditAssignment"> | number | null
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"AuditAssignment"> | Date | string | null
    startedAt?: DateTimeNullableWithAggregatesFilter<"AuditAssignment"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"AuditAssignment"> | Date | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"AuditAssignment"> | Date | string | null
    cancellationReason?: StringNullableWithAggregatesFilter<"AuditAssignment"> | string | null
    notificationSent?: BoolWithAggregatesFilter<"AuditAssignment"> | boolean
    remindersSent?: IntWithAggregatesFilter<"AuditAssignment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"AuditAssignment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AuditAssignment"> | Date | string
  }

  export type AuditRequestWhereInput = {
    AND?: AuditRequestWhereInput | AuditRequestWhereInput[]
    OR?: AuditRequestWhereInput[]
    NOT?: AuditRequestWhereInput | AuditRequestWhereInput[]
    id?: StringFilter<"AuditRequest"> | string
    assetId?: StringFilter<"AuditRequest"> | string
    requesterId?: StringFilter<"AuditRequest"> | string
    managerId?: StringNullableFilter<"AuditRequest"> | string | null
    title?: StringFilter<"AuditRequest"> | string
    reason?: StringFilter<"AuditRequest"> | string
    urgency?: EnumMaintenancePriorityFilter<"AuditRequest"> | $Enums.MaintenancePriority
    requestedDate?: DateTimeFilter<"AuditRequest"> | Date | string
    status?: EnumAuditRequestStatusFilter<"AuditRequest"> | $Enums.AuditRequestStatus
    reviewedAt?: DateTimeNullableFilter<"AuditRequest"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AuditRequest"> | string | null
    approvedBy?: StringNullableFilter<"AuditRequest"> | string | null
    rejectionReason?: StringNullableFilter<"AuditRequest"> | string | null
    description?: StringNullableFilter<"AuditRequest"> | string | null
    expectedFindings?: StringNullableFilter<"AuditRequest"> | string | null
    attachments?: StringNullableFilter<"AuditRequest"> | string | null
    createdAt?: DateTimeFilter<"AuditRequest"> | Date | string
    updatedAt?: DateTimeFilter<"AuditRequest"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    audits?: AssetAuditListRelationFilter
  }

  export type AuditRequestOrderByWithRelationInput = {
    id?: SortOrder
    assetId?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrderInput | SortOrder
    title?: SortOrder
    reason?: SortOrder
    urgency?: SortOrder
    requestedDate?: SortOrder
    status?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    expectedFindings?: SortOrderInput | SortOrder
    attachments?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    asset?: AssetOrderByWithRelationInput
    requester?: UserOrderByWithRelationInput
    manager?: UserOrderByWithRelationInput
    audits?: AssetAuditOrderByRelationAggregateInput
  }

  export type AuditRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditRequestWhereInput | AuditRequestWhereInput[]
    OR?: AuditRequestWhereInput[]
    NOT?: AuditRequestWhereInput | AuditRequestWhereInput[]
    assetId?: StringFilter<"AuditRequest"> | string
    requesterId?: StringFilter<"AuditRequest"> | string
    managerId?: StringNullableFilter<"AuditRequest"> | string | null
    title?: StringFilter<"AuditRequest"> | string
    reason?: StringFilter<"AuditRequest"> | string
    urgency?: EnumMaintenancePriorityFilter<"AuditRequest"> | $Enums.MaintenancePriority
    requestedDate?: DateTimeFilter<"AuditRequest"> | Date | string
    status?: EnumAuditRequestStatusFilter<"AuditRequest"> | $Enums.AuditRequestStatus
    reviewedAt?: DateTimeNullableFilter<"AuditRequest"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AuditRequest"> | string | null
    approvedBy?: StringNullableFilter<"AuditRequest"> | string | null
    rejectionReason?: StringNullableFilter<"AuditRequest"> | string | null
    description?: StringNullableFilter<"AuditRequest"> | string | null
    expectedFindings?: StringNullableFilter<"AuditRequest"> | string | null
    attachments?: StringNullableFilter<"AuditRequest"> | string | null
    createdAt?: DateTimeFilter<"AuditRequest"> | Date | string
    updatedAt?: DateTimeFilter<"AuditRequest"> | Date | string
    asset?: XOR<AssetScalarRelationFilter, AssetWhereInput>
    requester?: XOR<UserScalarRelationFilter, UserWhereInput>
    manager?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    audits?: AssetAuditListRelationFilter
  }, "id">

  export type AuditRequestOrderByWithAggregationInput = {
    id?: SortOrder
    assetId?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrderInput | SortOrder
    title?: SortOrder
    reason?: SortOrder
    urgency?: SortOrder
    requestedDate?: SortOrder
    status?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewNotes?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    rejectionReason?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    expectedFindings?: SortOrderInput | SortOrder
    attachments?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AuditRequestCountOrderByAggregateInput
    _max?: AuditRequestMaxOrderByAggregateInput
    _min?: AuditRequestMinOrderByAggregateInput
  }

  export type AuditRequestScalarWhereWithAggregatesInput = {
    AND?: AuditRequestScalarWhereWithAggregatesInput | AuditRequestScalarWhereWithAggregatesInput[]
    OR?: AuditRequestScalarWhereWithAggregatesInput[]
    NOT?: AuditRequestScalarWhereWithAggregatesInput | AuditRequestScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditRequest"> | string
    assetId?: StringWithAggregatesFilter<"AuditRequest"> | string
    requesterId?: StringWithAggregatesFilter<"AuditRequest"> | string
    managerId?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    title?: StringWithAggregatesFilter<"AuditRequest"> | string
    reason?: StringWithAggregatesFilter<"AuditRequest"> | string
    urgency?: EnumMaintenancePriorityWithAggregatesFilter<"AuditRequest"> | $Enums.MaintenancePriority
    requestedDate?: DateTimeWithAggregatesFilter<"AuditRequest"> | Date | string
    status?: EnumAuditRequestStatusWithAggregatesFilter<"AuditRequest"> | $Enums.AuditRequestStatus
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"AuditRequest"> | Date | string | null
    reviewNotes?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    approvedBy?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    rejectionReason?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    description?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    expectedFindings?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    attachments?: StringNullableWithAggregatesFilter<"AuditRequest"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"AuditRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"AuditRequest"> | Date | string
  }

  export type RoleChangeLogCreateInput = {
    id?: string
    oldRole: string
    newRole: string
    changedAt?: Date | string
    user: UserCreateNestedOneWithoutRoleChangeLogsInput
    changedByUser: UserCreateNestedOneWithoutRoleChangesMadeInput
  }

  export type RoleChangeLogUncheckedCreateInput = {
    id?: string
    userId: string
    oldRole: string
    newRole: string
    changedBy: string
    changedAt?: Date | string
  }

  export type RoleChangeLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRoleChangeLogsNestedInput
    changedByUser?: UserUpdateOneRequiredWithoutRoleChangesMadeNestedInput
  }

  export type RoleChangeLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedBy?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleChangeLogCreateManyInput = {
    id?: string
    userId: string
    oldRole: string
    newRole: string
    changedBy: string
    changedAt?: Date | string
  }

  export type RoleChangeLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleChangeLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedBy?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateInput = {
    id?: string
    message: string
    type?: string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutNotificationsInput
  }

  export type NotificationUncheckedCreateInput = {
    id?: string
    userId: string
    message: string
    type?: string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: boolean
    createdAt?: Date | string
  }

  export type NotificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type NotificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationCreateManyInput = {
    id?: string
    userId: string
    message: string
    type?: string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: boolean
    createdAt?: Date | string
  }

  export type NotificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetCreateInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferCreateInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    asset: AssetCreateNestedOneWithoutTransferRequestsInput
    requester: UserCreateNestedOneWithoutTransferRequestsInput
    manager?: UserCreateNestedOneWithoutManagedTransfersInput
  }

  export type TransferUncheckedCreateInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    managerId?: string | null
  }

  export type TransferUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutTransferRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutTransferRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedTransfersNestedInput
  }

  export type TransferUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferCreateManyInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    managerId?: string | null
  }

  export type TransferUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceCreateInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    asset: AssetCreateNestedOneWithoutMaintenanceRequestsInput
    requester: UserCreateNestedOneWithoutMaintenanceRequestsInput
    manager?: UserCreateNestedOneWithoutManagedMaintenanceInput
    assignedTo?: UserCreateNestedOneWithoutAssignedMaintenanceInput
    schedule?: MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput
    template?: MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedMaintenanceNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedMaintenanceNestedInput
    schedule?: MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceCreateManyInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DisposalCreateInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
    asset: AssetCreateNestedOneWithoutDisposalRequestsInput
    requester: UserCreateNestedOneWithoutDisposalRequestsInput
  }

  export type DisposalUncheckedCreateInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    requesterId: string
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
  }

  export type DisposalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
    asset?: AssetUpdateOneRequiredWithoutDisposalRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutDisposalRequestsNestedInput
  }

  export type DisposalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    requesterId?: StringFieldUpdateOperationsInput | string
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type DisposalCreateManyInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    requesterId: string
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
  }

  export type DisposalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type DisposalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    requesterId?: StringFieldUpdateOperationsInput | string
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type DocumentCreateInput = {
    id?: string
    type: $Enums.DocumentType
    url: string
    fileName?: string | null
    fileSize?: number | null
    filePath?: string | null
    mimeType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    asset: AssetCreateNestedOneWithoutDocumentsInput
  }

  export type DocumentUncheckedCreateInput = {
    id?: string
    assetId: string
    type: $Enums.DocumentType
    url: string
    fileName?: string | null
    fileSize?: number | null
    filePath?: string | null
    mimeType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    asset?: AssetUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type DocumentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentCreateManyInput = {
    id?: string
    assetId: string
    type: $Enums.DocumentType
    url: string
    fileName?: string | null
    fileSize?: number | null
    filePath?: string | null
    mimeType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DepreciationCreateInput = {
    id?: string
    amount: number
    date: Date | string
    createdAt?: Date | string
    depreciationRate: number
    description?: string | null
    method: string
    salvageValue: number
    updatedAt?: Date | string
    usefulLife: number
    asset: AssetCreateNestedOneWithoutDepreciationsInput
  }

  export type DepreciationUncheckedCreateInput = {
    id?: string
    assetId: string
    amount: number
    date: Date | string
    createdAt?: Date | string
    depreciationRate: number
    description?: string | null
    method: string
    salvageValue: number
    updatedAt?: Date | string
    usefulLife: number
  }

  export type DepreciationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    asset?: AssetUpdateOneRequiredWithoutDepreciationsNestedInput
  }

  export type DepreciationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
  }

  export type DepreciationCreateManyInput = {
    id?: string
    assetId: string
    amount: number
    date: Date | string
    createdAt?: Date | string
    depreciationRate: number
    description?: string | null
    method: string
    salvageValue: number
    updatedAt?: Date | string
    usefulLife: number
  }

  export type DepreciationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
  }

  export type DepreciationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
  }

  export type AssetDepreciationCreateInput = {
    id?: string
    amount: number
    date: Date | string
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate?: number | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAssetDepreciationsInput
  }

  export type AssetDepreciationUncheckedCreateInput = {
    id?: string
    assetId: string
    amount: number
    date: Date | string
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate?: number | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetDepreciationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAssetDepreciationsNestedInput
  }

  export type AssetDepreciationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetDepreciationCreateManyInput = {
    id?: string
    assetId: string
    amount: number
    date: Date | string
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate?: number | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetDepreciationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetDepreciationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetHistoryCreateInput = {
    id?: string
    field: string
    oldValue?: string | null
    newValue?: string | null
    changedAt?: Date | string
    changedBy?: string | null
    asset: AssetCreateNestedOneWithoutHistoryInput
  }

  export type AssetHistoryUncheckedCreateInput = {
    id?: string
    assetId: string
    field: string
    oldValue?: string | null
    newValue?: string | null
    changedAt?: Date | string
    changedBy?: string | null
  }

  export type AssetHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutHistoryNestedInput
  }

  export type AssetHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssetHistoryCreateManyInput = {
    id?: string
    assetId: string
    field: string
    oldValue?: string | null
    newValue?: string | null
    changedAt?: Date | string
    changedBy?: string | null
  }

  export type AssetHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssetHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LinkedAssetCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromAsset: AssetCreateNestedOneWithoutLinkedFromInput
    toAsset: AssetCreateNestedOneWithoutLinkedToInput
  }

  export type LinkedAssetUncheckedCreateInput = {
    id?: string
    fromAssetId: string
    toAssetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LinkedAssetUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromAsset?: AssetUpdateOneRequiredWithoutLinkedFromNestedInput
    toAsset?: AssetUpdateOneRequiredWithoutLinkedToNestedInput
  }

  export type LinkedAssetUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromAssetId?: StringFieldUpdateOperationsInput | string
    toAssetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LinkedAssetCreateManyInput = {
    id?: string
    fromAssetId: string
    toAssetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LinkedAssetUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LinkedAssetUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromAssetId?: StringFieldUpdateOperationsInput | string
    toAssetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionCreateInput = {
    id?: string
    name: string
    description?: string | null
    userPermissions?: UserPermissionCreateNestedManyWithoutPermissionInput
    rolePermissions?: RolePermissionCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutPermissionInput
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    userPermissions?: UserPermissionUpdateManyWithoutPermissionNestedInput
    rolePermissions?: RolePermissionUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutPermissionNestedInput
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionCreateManyInput = {
    id?: string
    name: string
    description?: string | null
  }

  export type PermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserPermissionCreateInput = {
    id?: string
    granted: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutUserPermissionsInput
    permission: PermissionCreateNestedOneWithoutUserPermissionsInput
  }

  export type UserPermissionUncheckedCreateInput = {
    id?: string
    userId: string
    permissionId: string
    granted: boolean
    createdAt?: Date | string
  }

  export type UserPermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserPermissionsNestedInput
    permission?: PermissionUpdateOneRequiredWithoutUserPermissionsNestedInput
  }

  export type UserPermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPermissionCreateManyInput = {
    id?: string
    userId: string
    permissionId: string
    granted: boolean
    createdAt?: Date | string
  }

  export type UserPermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionCreateInput = {
    id?: string
    role: $Enums.Role
    permission: PermissionCreateNestedOneWithoutRolePermissionsInput
  }

  export type RolePermissionUncheckedCreateInput = {
    id?: string
    role: $Enums.Role
    permissionId: string
  }

  export type RolePermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    permission?: PermissionUpdateOneRequiredWithoutRolePermissionsNestedInput
  }

  export type RolePermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    permissionId?: StringFieldUpdateOperationsInput | string
  }

  export type RolePermissionCreateManyInput = {
    id?: string
    role: $Enums.Role
    permissionId: string
  }

  export type RolePermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
  }

  export type RolePermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    permissionId?: StringFieldUpdateOperationsInput | string
  }

  export type CapitalImprovementCreateInput = {
    id?: string
    description: string
    improvementDate: Date | string
    cost: number
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutCapitalImprovementsInput
  }

  export type CapitalImprovementUncheckedCreateInput = {
    id?: string
    assetId: string
    description: string
    improvementDate: Date | string
    cost: number
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CapitalImprovementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutCapitalImprovementsNestedInput
  }

  export type CapitalImprovementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CapitalImprovementCreateManyInput = {
    id?: string
    assetId: string
    description: string
    improvementDate: Date | string
    cost: number
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CapitalImprovementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CapitalImprovementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceScheduleCreateInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutMaintenanceSchedulesInput
    createdBy: UserCreateNestedOneWithoutCreatedSchedulesInput
    assignedTo?: UserCreateNestedOneWithoutAssignedSchedulesInput
    template?: MaintenanceTemplateCreateNestedOneWithoutSchedulesInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleUncheckedCreateInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSchedulesNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedSchedulesNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutSchedulesNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleCreateManyInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaintenanceScheduleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceScheduleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceTemplateCreateInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: UserCreateNestedOneWithoutCreatedTemplatesInput
    schedules?: MaintenanceScheduleCreateNestedManyWithoutTemplateInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutTemplateInput
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneRequiredWithoutCreatedTemplatesNestedInput
    schedules?: MaintenanceScheduleUpdateManyWithoutTemplateNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceTemplateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: MaintenanceScheduleUncheckedUpdateManyWithoutTemplateNestedInput
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceTemplateCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaintenanceTemplateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceTemplateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditCreateInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditsInput
    auditor?: UserCreateNestedOneWithoutAuditsPerformedInput
    assignment?: AuditAssignmentCreateNestedOneWithoutAuditsInput
    request?: AuditRequestCreateNestedOneWithoutAuditsInput
  }

  export type AssetAuditUncheckedCreateInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditsNestedInput
    auditor?: UserUpdateOneWithoutAuditsPerformedNestedInput
    assignment?: AuditAssignmentUpdateOneWithoutAuditsNestedInput
    request?: AuditRequestUpdateOneWithoutAuditsNestedInput
  }

  export type AssetAuditUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditCreateManyInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditAssignmentCreateInput = {
    id?: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditAssignmentsInput
    assignedTo: UserCreateNestedOneWithoutAuditAssignmentsInput
    assignedBy: UserCreateNestedOneWithoutAuditAssignmentsMadeInput
    audits?: AssetAuditCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentUncheckedCreateInput = {
    id?: string
    assetId: string
    assignedToId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedTo?: UserUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedBy?: UserUpdateOneRequiredWithoutAuditAssignmentsMadeNestedInput
    audits?: AssetAuditUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentCreateManyInput = {
    id?: string
    assetId: string
    assignedToId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditAssignmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditAssignmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditRequestCreateInput = {
    id?: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditRequestsInput
    requester: UserCreateNestedOneWithoutAuditRequestsInput
    manager?: UserCreateNestedOneWithoutAuditRequestsReviewedInput
    audits?: AssetAuditCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestUncheckedCreateInput = {
    id?: string
    assetId: string
    requesterId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutAuditRequestsNestedInput
    manager?: UserUpdateOneWithoutAuditRequestsReviewedNestedInput
    audits?: AssetAuditUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestCreateManyInput = {
    id?: string
    assetId: string
    requesterId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RoleChangeLogCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    oldRole?: SortOrder
    newRole?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type RoleChangeLogMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    oldRole?: SortOrder
    newRole?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type RoleChangeLogMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    oldRole?: SortOrder
    newRole?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type RoleChangeLogListRelationFilter = {
    every?: RoleChangeLogWhereInput
    some?: RoleChangeLogWhereInput
    none?: RoleChangeLogWhereInput
  }

  export type UserPermissionListRelationFilter = {
    every?: UserPermissionWhereInput
    some?: UserPermissionWhereInput
    none?: UserPermissionWhereInput
  }

  export type MaintenanceListRelationFilter = {
    every?: MaintenanceWhereInput
    some?: MaintenanceWhereInput
    none?: MaintenanceWhereInput
  }

  export type MaintenanceScheduleListRelationFilter = {
    every?: MaintenanceScheduleWhereInput
    some?: MaintenanceScheduleWhereInput
    none?: MaintenanceScheduleWhereInput
  }

  export type MaintenanceTemplateListRelationFilter = {
    every?: MaintenanceTemplateWhereInput
    some?: MaintenanceTemplateWhereInput
    none?: MaintenanceTemplateWhereInput
  }

  export type TransferListRelationFilter = {
    every?: TransferWhereInput
    some?: TransferWhereInput
    none?: TransferWhereInput
  }

  export type DisposalListRelationFilter = {
    every?: DisposalWhereInput
    some?: DisposalWhereInput
    none?: DisposalWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: NotificationWhereInput
    some?: NotificationWhereInput
    none?: NotificationWhereInput
  }

  export type AssetAuditListRelationFilter = {
    every?: AssetAuditWhereInput
    some?: AssetAuditWhereInput
    none?: AssetAuditWhereInput
  }

  export type AuditAssignmentListRelationFilter = {
    every?: AuditAssignmentWhereInput
    some?: AuditAssignmentWhereInput
    none?: AuditAssignmentWhereInput
  }

  export type AuditRequestListRelationFilter = {
    every?: AuditRequestWhereInput
    some?: AuditRequestWhereInput
    none?: AuditRequestWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type RoleChangeLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserPermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaintenanceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaintenanceScheduleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MaintenanceTemplateOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TransferOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DisposalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NotificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssetAuditOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuditAssignmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AuditRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NotificationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    type?: SortOrder
    meta?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
  }

  export type NotificationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    message?: SortOrder
    type?: SortOrder
    read?: SortOrder
    createdAt?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumDepreciationMethodEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.DepreciationMethodEnum | EnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel> | $Enums.DepreciationMethodEnum | null
  }

  export type AssetDepreciationListRelationFilter = {
    every?: AssetDepreciationWhereInput
    some?: AssetDepreciationWhereInput
    none?: AssetDepreciationWhereInput
  }

  export type AssetHistoryListRelationFilter = {
    every?: AssetHistoryWhereInput
    some?: AssetHistoryWhereInput
    none?: AssetHistoryWhereInput
  }

  export type DepreciationListRelationFilter = {
    every?: DepreciationWhereInput
    some?: DepreciationWhereInput
    none?: DepreciationWhereInput
  }

  export type DocumentListRelationFilter = {
    every?: DocumentWhereInput
    some?: DocumentWhereInput
    none?: DocumentWhereInput
  }

  export type LinkedAssetListRelationFilter = {
    every?: LinkedAssetWhereInput
    some?: LinkedAssetWhereInput
    none?: LinkedAssetWhereInput
  }

  export type CapitalImprovementListRelationFilter = {
    every?: CapitalImprovementWhereInput
    some?: CapitalImprovementWhereInput
    none?: CapitalImprovementWhereInput
  }

  export type AssetDepreciationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssetHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DepreciationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LinkedAssetOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CapitalImprovementOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AssetCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    serialNumber?: SortOrder
    purchaseDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    status?: SortOrder
    location?: SortOrder
    department?: SortOrder
    category?: SortOrder
    type?: SortOrder
    supplier?: SortOrder
    warrantyExpiry?: SortOrder
    lastMaintenance?: SortOrder
    nextMaintenance?: SortOrder
    depreciableCost?: SortOrder
    salvageValue?: SortOrder
    usefulLifeMonths?: SortOrder
    depreciationMethod?: SortOrder
    depreciationStartDate?: SortOrder
    lastAuditDate?: SortOrder
    nextAuditDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetAvgOrderByAggregateInput = {
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    depreciableCost?: SortOrder
    salvageValue?: SortOrder
    usefulLifeMonths?: SortOrder
  }

  export type AssetMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    serialNumber?: SortOrder
    purchaseDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    status?: SortOrder
    location?: SortOrder
    department?: SortOrder
    category?: SortOrder
    type?: SortOrder
    supplier?: SortOrder
    warrantyExpiry?: SortOrder
    lastMaintenance?: SortOrder
    nextMaintenance?: SortOrder
    depreciableCost?: SortOrder
    salvageValue?: SortOrder
    usefulLifeMonths?: SortOrder
    depreciationMethod?: SortOrder
    depreciationStartDate?: SortOrder
    lastAuditDate?: SortOrder
    nextAuditDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    serialNumber?: SortOrder
    purchaseDate?: SortOrder
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    status?: SortOrder
    location?: SortOrder
    department?: SortOrder
    category?: SortOrder
    type?: SortOrder
    supplier?: SortOrder
    warrantyExpiry?: SortOrder
    lastMaintenance?: SortOrder
    nextMaintenance?: SortOrder
    depreciableCost?: SortOrder
    salvageValue?: SortOrder
    usefulLifeMonths?: SortOrder
    depreciationMethod?: SortOrder
    depreciationStartDate?: SortOrder
    lastAuditDate?: SortOrder
    nextAuditDate?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetSumOrderByAggregateInput = {
    purchasePrice?: SortOrder
    currentValue?: SortOrder
    depreciableCost?: SortOrder
    salvageValue?: SortOrder
    usefulLifeMonths?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumDepreciationMethodEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DepreciationMethodEnum | EnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDepreciationMethodEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.DepreciationMethodEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel>
  }

  export type EnumTransferStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusFilter<$PrismaModel> | $Enums.TransferStatus
  }

  export type AssetScalarRelationFilter = {
    is?: AssetWhereInput
    isNot?: AssetWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type TransferCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    fromDepartment?: SortOrder
    requesterId?: SortOrder
    toDepartment?: SortOrder
    status?: SortOrder
    managerReason?: SortOrder
    managerId?: SortOrder
  }

  export type TransferMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    fromDepartment?: SortOrder
    requesterId?: SortOrder
    toDepartment?: SortOrder
    status?: SortOrder
    managerReason?: SortOrder
    managerId?: SortOrder
  }

  export type TransferMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    fromDepartment?: SortOrder
    requesterId?: SortOrder
    toDepartment?: SortOrder
    status?: SortOrder
    managerReason?: SortOrder
    managerId?: SortOrder
  }

  export type EnumTransferStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransferStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransferStatusFilter<$PrismaModel>
    _max?: NestedEnumTransferStatusFilter<$PrismaModel>
  }

  export type EnumMaintenancePriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenancePriority | EnumMaintenancePriorityFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenancePriorityFilter<$PrismaModel> | $Enums.MaintenancePriority
  }

  export type EnumMaintenanceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceStatus | EnumMaintenanceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceStatusFilter<$PrismaModel> | $Enums.MaintenanceStatus
  }

  export type EnumMaintenanceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceType | EnumMaintenanceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceTypeFilter<$PrismaModel> | $Enums.MaintenanceType
  }

  export type MaintenanceScheduleNullableScalarRelationFilter = {
    is?: MaintenanceScheduleWhereInput | null
    isNot?: MaintenanceScheduleWhereInput | null
  }

  export type MaintenanceTemplateNullableScalarRelationFilter = {
    is?: MaintenanceTemplateWhereInput | null
    isNot?: MaintenanceTemplateWhereInput | null
  }

  export type MaintenanceCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    cost?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    completedAt?: SortOrder
    scheduledDate?: SortOrder
    priority?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    maintenanceType?: SortOrder
    scheduleId?: SortOrder
    templateId?: SortOrder
    assignedToId?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    checklistItems?: SortOrder
    issueType?: SortOrder
    urgencyLevel?: SortOrder
    reportedBy?: SortOrder
    assetDowntime?: SortOrder
    impactDescription?: SortOrder
    photoUrls?: SortOrder
    workPerformed?: SortOrder
    partsUsed?: SortOrder
    laborHours?: SortOrder
    partsCost?: SortOrder
    laborCost?: SortOrder
    totalCost?: SortOrder
    workStartedAt?: SortOrder
    workCompletedAt?: SortOrder
    technicianNotes?: SortOrder
    managerReviewNotes?: SortOrder
    finalApprovedAt?: SortOrder
    finalApprovedBy?: SortOrder
    workPhotos?: SortOrder
  }

  export type MaintenanceAvgOrderByAggregateInput = {
    cost?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    laborHours?: SortOrder
    partsCost?: SortOrder
    laborCost?: SortOrder
    totalCost?: SortOrder
  }

  export type MaintenanceMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    cost?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    completedAt?: SortOrder
    scheduledDate?: SortOrder
    priority?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    maintenanceType?: SortOrder
    scheduleId?: SortOrder
    templateId?: SortOrder
    assignedToId?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    checklistItems?: SortOrder
    issueType?: SortOrder
    urgencyLevel?: SortOrder
    reportedBy?: SortOrder
    assetDowntime?: SortOrder
    impactDescription?: SortOrder
    photoUrls?: SortOrder
    workPerformed?: SortOrder
    partsUsed?: SortOrder
    laborHours?: SortOrder
    partsCost?: SortOrder
    laborCost?: SortOrder
    totalCost?: SortOrder
    workStartedAt?: SortOrder
    workCompletedAt?: SortOrder
    technicianNotes?: SortOrder
    managerReviewNotes?: SortOrder
    finalApprovedAt?: SortOrder
    finalApprovedBy?: SortOrder
    workPhotos?: SortOrder
  }

  export type MaintenanceMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    cost?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    completedAt?: SortOrder
    scheduledDate?: SortOrder
    priority?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    maintenanceType?: SortOrder
    scheduleId?: SortOrder
    templateId?: SortOrder
    assignedToId?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    checklistItems?: SortOrder
    issueType?: SortOrder
    urgencyLevel?: SortOrder
    reportedBy?: SortOrder
    assetDowntime?: SortOrder
    impactDescription?: SortOrder
    photoUrls?: SortOrder
    workPerformed?: SortOrder
    partsUsed?: SortOrder
    laborHours?: SortOrder
    partsCost?: SortOrder
    laborCost?: SortOrder
    totalCost?: SortOrder
    workStartedAt?: SortOrder
    workCompletedAt?: SortOrder
    technicianNotes?: SortOrder
    managerReviewNotes?: SortOrder
    finalApprovedAt?: SortOrder
    finalApprovedBy?: SortOrder
    workPhotos?: SortOrder
  }

  export type MaintenanceSumOrderByAggregateInput = {
    cost?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    laborHours?: SortOrder
    partsCost?: SortOrder
    laborCost?: SortOrder
    totalCost?: SortOrder
  }

  export type EnumMaintenancePriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenancePriority | EnumMaintenancePriorityFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenancePriorityWithAggregatesFilter<$PrismaModel> | $Enums.MaintenancePriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMaintenancePriorityFilter<$PrismaModel>
    _max?: NestedEnumMaintenancePriorityFilter<$PrismaModel>
  }

  export type EnumMaintenanceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceStatus | EnumMaintenanceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceStatusWithAggregatesFilter<$PrismaModel> | $Enums.MaintenanceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMaintenanceStatusFilter<$PrismaModel>
    _max?: NestedEnumMaintenanceStatusFilter<$PrismaModel>
  }

  export type EnumMaintenanceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceType | EnumMaintenanceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceTypeWithAggregatesFilter<$PrismaModel> | $Enums.MaintenanceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMaintenanceTypeFilter<$PrismaModel>
    _max?: NestedEnumMaintenanceTypeFilter<$PrismaModel>
  }

  export type EnumDisposalMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalMethod | EnumDisposalMethodFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalMethodFilter<$PrismaModel> | $Enums.DisposalMethod
  }

  export type EnumDisposalStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalStatus | EnumDisposalStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalStatusFilter<$PrismaModel> | $Enums.DisposalStatus
  }

  export type DisposalCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    actualValue?: SortOrder
    expectedValue?: SortOrder
    requesterId?: SortOrder
    method?: SortOrder
    status?: SortOrder
  }

  export type DisposalAvgOrderByAggregateInput = {
    actualValue?: SortOrder
    expectedValue?: SortOrder
  }

  export type DisposalMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    actualValue?: SortOrder
    expectedValue?: SortOrder
    requesterId?: SortOrder
    method?: SortOrder
    status?: SortOrder
  }

  export type DisposalMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    reason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    actualValue?: SortOrder
    expectedValue?: SortOrder
    requesterId?: SortOrder
    method?: SortOrder
    status?: SortOrder
  }

  export type DisposalSumOrderByAggregateInput = {
    actualValue?: SortOrder
    expectedValue?: SortOrder
  }

  export type EnumDisposalMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalMethod | EnumDisposalMethodFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalMethodWithAggregatesFilter<$PrismaModel> | $Enums.DisposalMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisposalMethodFilter<$PrismaModel>
    _max?: NestedEnumDisposalMethodFilter<$PrismaModel>
  }

  export type EnumDisposalStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalStatus | EnumDisposalStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalStatusWithAggregatesFilter<$PrismaModel> | $Enums.DisposalStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisposalStatusFilter<$PrismaModel>
    _max?: NestedEnumDisposalStatusFilter<$PrismaModel>
  }

  export type EnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type DocumentCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    type?: SortOrder
    url?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    filePath?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    meta?: SortOrder
  }

  export type DocumentAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type DocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    type?: SortOrder
    url?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    filePath?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DocumentMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    type?: SortOrder
    url?: SortOrder
    fileName?: SortOrder
    fileSize?: SortOrder
    filePath?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DocumentSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type EnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DepreciationCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrder
    method?: SortOrder
    salvageValue?: SortOrder
    updatedAt?: SortOrder
    usefulLife?: SortOrder
  }

  export type DepreciationAvgOrderByAggregateInput = {
    amount?: SortOrder
    depreciationRate?: SortOrder
    salvageValue?: SortOrder
    usefulLife?: SortOrder
  }

  export type DepreciationMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrder
    method?: SortOrder
    salvageValue?: SortOrder
    updatedAt?: SortOrder
    usefulLife?: SortOrder
  }

  export type DepreciationMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    createdAt?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrder
    method?: SortOrder
    salvageValue?: SortOrder
    updatedAt?: SortOrder
    usefulLife?: SortOrder
  }

  export type DepreciationSumOrderByAggregateInput = {
    amount?: SortOrder
    depreciationRate?: SortOrder
    salvageValue?: SortOrder
    usefulLife?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type AssetDepreciationCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetDepreciationAvgOrderByAggregateInput = {
    amount?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrder
  }

  export type AssetDepreciationMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetDepreciationMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    amount?: SortOrder
    date?: SortOrder
    method?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetDepreciationSumOrderByAggregateInput = {
    amount?: SortOrder
    usefulLife?: SortOrder
    salvageValue?: SortOrder
    depreciationRate?: SortOrder
  }

  export type AssetHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    field?: SortOrder
    oldValue?: SortOrder
    newValue?: SortOrder
    changedAt?: SortOrder
    changedBy?: SortOrder
  }

  export type AssetHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    field?: SortOrder
    oldValue?: SortOrder
    newValue?: SortOrder
    changedAt?: SortOrder
    changedBy?: SortOrder
  }

  export type AssetHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    field?: SortOrder
    oldValue?: SortOrder
    newValue?: SortOrder
    changedAt?: SortOrder
    changedBy?: SortOrder
  }

  export type LinkedAssetFromAssetIdToAssetIdCompoundUniqueInput = {
    fromAssetId: string
    toAssetId: string
  }

  export type LinkedAssetCountOrderByAggregateInput = {
    id?: SortOrder
    fromAssetId?: SortOrder
    toAssetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LinkedAssetMaxOrderByAggregateInput = {
    id?: SortOrder
    fromAssetId?: SortOrder
    toAssetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LinkedAssetMinOrderByAggregateInput = {
    id?: SortOrder
    fromAssetId?: SortOrder
    toAssetId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RolePermissionListRelationFilter = {
    every?: RolePermissionWhereInput
    some?: RolePermissionWhereInput
    none?: RolePermissionWhereInput
  }

  export type RolePermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type PermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type PermissionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
  }

  export type PermissionScalarRelationFilter = {
    is?: PermissionWhereInput
    isNot?: PermissionWhereInput
  }

  export type UserPermissionUserIdPermissionIdCompoundUniqueInput = {
    userId: string
    permissionId: string
  }

  export type UserPermissionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    permissionId?: SortOrder
    granted?: SortOrder
    createdAt?: SortOrder
  }

  export type UserPermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    permissionId?: SortOrder
    granted?: SortOrder
    createdAt?: SortOrder
  }

  export type UserPermissionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    permissionId?: SortOrder
    granted?: SortOrder
    createdAt?: SortOrder
  }

  export type RolePermissionRolePermissionIdCompoundUniqueInput = {
    role: $Enums.Role
    permissionId: string
  }

  export type RolePermissionCountOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
  }

  export type RolePermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
  }

  export type RolePermissionMinOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    permissionId?: SortOrder
  }

  export type CapitalImprovementCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    improvementDate?: SortOrder
    cost?: SortOrder
    usefulLifeMonths?: SortOrder
    depreciationMethod?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CapitalImprovementAvgOrderByAggregateInput = {
    cost?: SortOrder
    usefulLifeMonths?: SortOrder
  }

  export type CapitalImprovementMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    improvementDate?: SortOrder
    cost?: SortOrder
    usefulLifeMonths?: SortOrder
    depreciationMethod?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CapitalImprovementMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    description?: SortOrder
    improvementDate?: SortOrder
    cost?: SortOrder
    usefulLifeMonths?: SortOrder
    depreciationMethod?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CapitalImprovementSumOrderByAggregateInput = {
    cost?: SortOrder
    usefulLifeMonths?: SortOrder
  }

  export type EnumScheduleFrequencyFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleFrequency | EnumScheduleFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleFrequencyFilter<$PrismaModel> | $Enums.ScheduleFrequency
  }

  export type EnumScheduleStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleStatus | EnumScheduleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleStatusFilter<$PrismaModel> | $Enums.ScheduleStatus
  }

  export type MaintenanceScheduleCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    frequency?: SortOrder
    customInterval?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    assignedToId?: SortOrder
    templateId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    lastGenerated?: SortOrder
    nextDue?: SortOrder
    leadTimeDays?: SortOrder
    autoAssign?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MaintenanceScheduleAvgOrderByAggregateInput = {
    customInterval?: SortOrder
    estimatedHours?: SortOrder
    leadTimeDays?: SortOrder
  }

  export type MaintenanceScheduleMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    frequency?: SortOrder
    customInterval?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    assignedToId?: SortOrder
    templateId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    lastGenerated?: SortOrder
    nextDue?: SortOrder
    leadTimeDays?: SortOrder
    autoAssign?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MaintenanceScheduleMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    frequency?: SortOrder
    customInterval?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    assignedToId?: SortOrder
    templateId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    lastGenerated?: SortOrder
    nextDue?: SortOrder
    leadTimeDays?: SortOrder
    autoAssign?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MaintenanceScheduleSumOrderByAggregateInput = {
    customInterval?: SortOrder
    estimatedHours?: SortOrder
    leadTimeDays?: SortOrder
  }

  export type EnumScheduleFrequencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleFrequency | EnumScheduleFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleFrequencyWithAggregatesFilter<$PrismaModel> | $Enums.ScheduleFrequency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduleFrequencyFilter<$PrismaModel>
    _max?: NestedEnumScheduleFrequencyFilter<$PrismaModel>
  }

  export type EnumScheduleStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleStatus | EnumScheduleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleStatusWithAggregatesFilter<$PrismaModel> | $Enums.ScheduleStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduleStatusFilter<$PrismaModel>
    _max?: NestedEnumScheduleStatusFilter<$PrismaModel>
  }

  export type MaintenanceTemplateCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    maintenanceType?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrder
    instructions?: SortOrder
    checklistItems?: SortOrder
    requiredSkills?: SortOrder
    safetyNotes?: SortOrder
    toolsRequired?: SortOrder
    partsRequired?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MaintenanceTemplateAvgOrderByAggregateInput = {
    estimatedHours?: SortOrder
  }

  export type MaintenanceTemplateMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    maintenanceType?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrder
    instructions?: SortOrder
    checklistItems?: SortOrder
    requiredSkills?: SortOrder
    safetyNotes?: SortOrder
    toolsRequired?: SortOrder
    partsRequired?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MaintenanceTemplateMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    maintenanceType?: SortOrder
    priority?: SortOrder
    estimatedHours?: SortOrder
    instructions?: SortOrder
    checklistItems?: SortOrder
    requiredSkills?: SortOrder
    safetyNotes?: SortOrder
    toolsRequired?: SortOrder
    partsRequired?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MaintenanceTemplateSumOrderByAggregateInput = {
    estimatedHours?: SortOrder
  }

  export type EnumAuditStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusFilter<$PrismaModel> | $Enums.AuditStatus
  }

  export type EnumAuditWorkflowStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditWorkflowStatus | EnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditWorkflowStatusFilter<$PrismaModel> | $Enums.AuditWorkflowStatus
  }

  export type EnumAuditConditionNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditCondition | EnumAuditConditionFieldRefInput<$PrismaModel> | null
    in?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAuditConditionNullableFilter<$PrismaModel> | $Enums.AuditCondition | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type AuditAssignmentNullableScalarRelationFilter = {
    is?: AuditAssignmentWhereInput | null
    isNot?: AuditAssignmentWhereInput | null
  }

  export type AuditRequestNullableScalarRelationFilter = {
    is?: AuditRequestWhereInput | null
    isNot?: AuditRequestWhereInput | null
  }

  export type AssetAuditCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    auditDate?: SortOrder
    auditedBy?: SortOrder
    auditorId?: SortOrder
    status?: SortOrder
    workflowStatus?: SortOrder
    condition?: SortOrder
    locationVerified?: SortOrder
    actualLocation?: SortOrder
    notes?: SortOrder
    discrepancies?: SortOrder
    recommendations?: SortOrder
    checklistItems?: SortOrder
    discrepancyResolved?: SortOrder
    resolvedDate?: SortOrder
    resolvedBy?: SortOrder
    resolutionNotes?: SortOrder
    photoUrls?: SortOrder
    nextAuditDate?: SortOrder
    assignmentId?: SortOrder
    requestId?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    managerApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetAuditMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    auditDate?: SortOrder
    auditedBy?: SortOrder
    auditorId?: SortOrder
    status?: SortOrder
    workflowStatus?: SortOrder
    condition?: SortOrder
    locationVerified?: SortOrder
    actualLocation?: SortOrder
    notes?: SortOrder
    discrepancies?: SortOrder
    recommendations?: SortOrder
    checklistItems?: SortOrder
    discrepancyResolved?: SortOrder
    resolvedDate?: SortOrder
    resolvedBy?: SortOrder
    resolutionNotes?: SortOrder
    photoUrls?: SortOrder
    nextAuditDate?: SortOrder
    assignmentId?: SortOrder
    requestId?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    managerApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AssetAuditMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    auditDate?: SortOrder
    auditedBy?: SortOrder
    auditorId?: SortOrder
    status?: SortOrder
    workflowStatus?: SortOrder
    condition?: SortOrder
    locationVerified?: SortOrder
    actualLocation?: SortOrder
    notes?: SortOrder
    discrepancies?: SortOrder
    recommendations?: SortOrder
    checklistItems?: SortOrder
    discrepancyResolved?: SortOrder
    resolvedDate?: SortOrder
    resolvedBy?: SortOrder
    resolutionNotes?: SortOrder
    photoUrls?: SortOrder
    nextAuditDate?: SortOrder
    assignmentId?: SortOrder
    requestId?: SortOrder
    reviewedBy?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    managerApproval?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumAuditStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditStatusFilter<$PrismaModel>
  }

  export type EnumAuditWorkflowStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditWorkflowStatus | EnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditWorkflowStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditWorkflowStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditWorkflowStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditWorkflowStatusFilter<$PrismaModel>
  }

  export type EnumAuditConditionNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditCondition | EnumAuditConditionFieldRefInput<$PrismaModel> | null
    in?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAuditConditionNullableWithAggregatesFilter<$PrismaModel> | $Enums.AuditCondition | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAuditConditionNullableFilter<$PrismaModel>
    _max?: NestedEnumAuditConditionNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumAuditAssignmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditAssignmentStatus | EnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditAssignmentStatusFilter<$PrismaModel> | $Enums.AuditAssignmentStatus
  }

  export type AuditAssignmentCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    assignedToId?: SortOrder
    assignedById?: SortOrder
    title?: SortOrder
    description?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    scheduledDate?: SortOrder
    status?: SortOrder
    instructions?: SortOrder
    checklistItems?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    acceptedAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancellationReason?: SortOrder
    notificationSent?: SortOrder
    remindersSent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AuditAssignmentAvgOrderByAggregateInput = {
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    remindersSent?: SortOrder
  }

  export type AuditAssignmentMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    assignedToId?: SortOrder
    assignedById?: SortOrder
    title?: SortOrder
    description?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    scheduledDate?: SortOrder
    status?: SortOrder
    instructions?: SortOrder
    checklistItems?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    acceptedAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancellationReason?: SortOrder
    notificationSent?: SortOrder
    remindersSent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AuditAssignmentMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    assignedToId?: SortOrder
    assignedById?: SortOrder
    title?: SortOrder
    description?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    scheduledDate?: SortOrder
    status?: SortOrder
    instructions?: SortOrder
    checklistItems?: SortOrder
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    acceptedAt?: SortOrder
    startedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    cancellationReason?: SortOrder
    notificationSent?: SortOrder
    remindersSent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AuditAssignmentSumOrderByAggregateInput = {
    estimatedHours?: SortOrder
    actualHours?: SortOrder
    remindersSent?: SortOrder
  }

  export type EnumAuditAssignmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditAssignmentStatus | EnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditAssignmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditAssignmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditAssignmentStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditAssignmentStatusFilter<$PrismaModel>
  }

  export type EnumAuditRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditRequestStatus | EnumAuditRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditRequestStatusFilter<$PrismaModel> | $Enums.AuditRequestStatus
  }

  export type AuditRequestCountOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrder
    title?: SortOrder
    reason?: SortOrder
    urgency?: SortOrder
    requestedDate?: SortOrder
    status?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    approvedBy?: SortOrder
    rejectionReason?: SortOrder
    description?: SortOrder
    expectedFindings?: SortOrder
    attachments?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AuditRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrder
    title?: SortOrder
    reason?: SortOrder
    urgency?: SortOrder
    requestedDate?: SortOrder
    status?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    approvedBy?: SortOrder
    rejectionReason?: SortOrder
    description?: SortOrder
    expectedFindings?: SortOrder
    attachments?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AuditRequestMinOrderByAggregateInput = {
    id?: SortOrder
    assetId?: SortOrder
    requesterId?: SortOrder
    managerId?: SortOrder
    title?: SortOrder
    reason?: SortOrder
    urgency?: SortOrder
    requestedDate?: SortOrder
    status?: SortOrder
    reviewedAt?: SortOrder
    reviewNotes?: SortOrder
    approvedBy?: SortOrder
    rejectionReason?: SortOrder
    description?: SortOrder
    expectedFindings?: SortOrder
    attachments?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumAuditRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditRequestStatus | EnumAuditRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditRequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditRequestStatusFilter<$PrismaModel>
  }

  export type UserCreateNestedOneWithoutRoleChangeLogsInput = {
    create?: XOR<UserCreateWithoutRoleChangeLogsInput, UserUncheckedCreateWithoutRoleChangeLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRoleChangeLogsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRoleChangesMadeInput = {
    create?: XOR<UserCreateWithoutRoleChangesMadeInput, UserUncheckedCreateWithoutRoleChangesMadeInput>
    connectOrCreate?: UserCreateOrConnectWithoutRoleChangesMadeInput
    connect?: UserWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserUpdateOneRequiredWithoutRoleChangeLogsNestedInput = {
    create?: XOR<UserCreateWithoutRoleChangeLogsInput, UserUncheckedCreateWithoutRoleChangeLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRoleChangeLogsInput
    upsert?: UserUpsertWithoutRoleChangeLogsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRoleChangeLogsInput, UserUpdateWithoutRoleChangeLogsInput>, UserUncheckedUpdateWithoutRoleChangeLogsInput>
  }

  export type UserUpdateOneRequiredWithoutRoleChangesMadeNestedInput = {
    create?: XOR<UserCreateWithoutRoleChangesMadeInput, UserUncheckedCreateWithoutRoleChangesMadeInput>
    connectOrCreate?: UserCreateOrConnectWithoutRoleChangesMadeInput
    upsert?: UserUpsertWithoutRoleChangesMadeInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRoleChangesMadeInput, UserUpdateWithoutRoleChangesMadeInput>, UserUncheckedUpdateWithoutRoleChangesMadeInput>
  }

  export type RoleChangeLogCreateNestedManyWithoutUserInput = {
    create?: XOR<RoleChangeLogCreateWithoutUserInput, RoleChangeLogUncheckedCreateWithoutUserInput> | RoleChangeLogCreateWithoutUserInput[] | RoleChangeLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutUserInput | RoleChangeLogCreateOrConnectWithoutUserInput[]
    createMany?: RoleChangeLogCreateManyUserInputEnvelope
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
  }

  export type RoleChangeLogCreateNestedManyWithoutChangedByUserInput = {
    create?: XOR<RoleChangeLogCreateWithoutChangedByUserInput, RoleChangeLogUncheckedCreateWithoutChangedByUserInput> | RoleChangeLogCreateWithoutChangedByUserInput[] | RoleChangeLogUncheckedCreateWithoutChangedByUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutChangedByUserInput | RoleChangeLogCreateOrConnectWithoutChangedByUserInput[]
    createMany?: RoleChangeLogCreateManyChangedByUserInputEnvelope
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
  }

  export type UserPermissionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserPermissionCreateWithoutUserInput, UserPermissionUncheckedCreateWithoutUserInput> | UserPermissionCreateWithoutUserInput[] | UserPermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutUserInput | UserPermissionCreateOrConnectWithoutUserInput[]
    createMany?: UserPermissionCreateManyUserInputEnvelope
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
  }

  export type MaintenanceCreateNestedManyWithoutRequesterInput = {
    create?: XOR<MaintenanceCreateWithoutRequesterInput, MaintenanceUncheckedCreateWithoutRequesterInput> | MaintenanceCreateWithoutRequesterInput[] | MaintenanceUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutRequesterInput | MaintenanceCreateOrConnectWithoutRequesterInput[]
    createMany?: MaintenanceCreateManyRequesterInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceCreateNestedManyWithoutManagerInput = {
    create?: XOR<MaintenanceCreateWithoutManagerInput, MaintenanceUncheckedCreateWithoutManagerInput> | MaintenanceCreateWithoutManagerInput[] | MaintenanceUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutManagerInput | MaintenanceCreateOrConnectWithoutManagerInput[]
    createMany?: MaintenanceCreateManyManagerInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<MaintenanceCreateWithoutAssignedToInput, MaintenanceUncheckedCreateWithoutAssignedToInput> | MaintenanceCreateWithoutAssignedToInput[] | MaintenanceUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssignedToInput | MaintenanceCreateOrConnectWithoutAssignedToInput[]
    createMany?: MaintenanceCreateManyAssignedToInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceScheduleCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutCreatedByInput, MaintenanceScheduleUncheckedCreateWithoutCreatedByInput> | MaintenanceScheduleCreateWithoutCreatedByInput[] | MaintenanceScheduleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutCreatedByInput | MaintenanceScheduleCreateOrConnectWithoutCreatedByInput[]
    createMany?: MaintenanceScheduleCreateManyCreatedByInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type MaintenanceScheduleCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssignedToInput, MaintenanceScheduleUncheckedCreateWithoutAssignedToInput> | MaintenanceScheduleCreateWithoutAssignedToInput[] | MaintenanceScheduleUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssignedToInput | MaintenanceScheduleCreateOrConnectWithoutAssignedToInput[]
    createMany?: MaintenanceScheduleCreateManyAssignedToInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type MaintenanceTemplateCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutCreatedByInput, MaintenanceTemplateUncheckedCreateWithoutCreatedByInput> | MaintenanceTemplateCreateWithoutCreatedByInput[] | MaintenanceTemplateUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutCreatedByInput | MaintenanceTemplateCreateOrConnectWithoutCreatedByInput[]
    createMany?: MaintenanceTemplateCreateManyCreatedByInputEnvelope
    connect?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
  }

  export type TransferCreateNestedManyWithoutRequesterInput = {
    create?: XOR<TransferCreateWithoutRequesterInput, TransferUncheckedCreateWithoutRequesterInput> | TransferCreateWithoutRequesterInput[] | TransferUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutRequesterInput | TransferCreateOrConnectWithoutRequesterInput[]
    createMany?: TransferCreateManyRequesterInputEnvelope
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
  }

  export type TransferCreateNestedManyWithoutManagerInput = {
    create?: XOR<TransferCreateWithoutManagerInput, TransferUncheckedCreateWithoutManagerInput> | TransferCreateWithoutManagerInput[] | TransferUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutManagerInput | TransferCreateOrConnectWithoutManagerInput[]
    createMany?: TransferCreateManyManagerInputEnvelope
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
  }

  export type DisposalCreateNestedManyWithoutRequesterInput = {
    create?: XOR<DisposalCreateWithoutRequesterInput, DisposalUncheckedCreateWithoutRequesterInput> | DisposalCreateWithoutRequesterInput[] | DisposalUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutRequesterInput | DisposalCreateOrConnectWithoutRequesterInput[]
    createMany?: DisposalCreateManyRequesterInputEnvelope
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
  }

  export type NotificationCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type AssetAuditCreateNestedManyWithoutAuditorInput = {
    create?: XOR<AssetAuditCreateWithoutAuditorInput, AssetAuditUncheckedCreateWithoutAuditorInput> | AssetAuditCreateWithoutAuditorInput[] | AssetAuditUncheckedCreateWithoutAuditorInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAuditorInput | AssetAuditCreateOrConnectWithoutAuditorInput[]
    createMany?: AssetAuditCreateManyAuditorInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type AuditAssignmentCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedToInput, AuditAssignmentUncheckedCreateWithoutAssignedToInput> | AuditAssignmentCreateWithoutAssignedToInput[] | AuditAssignmentUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedToInput | AuditAssignmentCreateOrConnectWithoutAssignedToInput[]
    createMany?: AuditAssignmentCreateManyAssignedToInputEnvelope
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
  }

  export type AuditAssignmentCreateNestedManyWithoutAssignedByInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedByInput, AuditAssignmentUncheckedCreateWithoutAssignedByInput> | AuditAssignmentCreateWithoutAssignedByInput[] | AuditAssignmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedByInput | AuditAssignmentCreateOrConnectWithoutAssignedByInput[]
    createMany?: AuditAssignmentCreateManyAssignedByInputEnvelope
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
  }

  export type AuditRequestCreateNestedManyWithoutRequesterInput = {
    create?: XOR<AuditRequestCreateWithoutRequesterInput, AuditRequestUncheckedCreateWithoutRequesterInput> | AuditRequestCreateWithoutRequesterInput[] | AuditRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutRequesterInput | AuditRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: AuditRequestCreateManyRequesterInputEnvelope
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
  }

  export type AuditRequestCreateNestedManyWithoutManagerInput = {
    create?: XOR<AuditRequestCreateWithoutManagerInput, AuditRequestUncheckedCreateWithoutManagerInput> | AuditRequestCreateWithoutManagerInput[] | AuditRequestUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutManagerInput | AuditRequestCreateOrConnectWithoutManagerInput[]
    createMany?: AuditRequestCreateManyManagerInputEnvelope
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
  }

  export type RoleChangeLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RoleChangeLogCreateWithoutUserInput, RoleChangeLogUncheckedCreateWithoutUserInput> | RoleChangeLogCreateWithoutUserInput[] | RoleChangeLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutUserInput | RoleChangeLogCreateOrConnectWithoutUserInput[]
    createMany?: RoleChangeLogCreateManyUserInputEnvelope
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
  }

  export type RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput = {
    create?: XOR<RoleChangeLogCreateWithoutChangedByUserInput, RoleChangeLogUncheckedCreateWithoutChangedByUserInput> | RoleChangeLogCreateWithoutChangedByUserInput[] | RoleChangeLogUncheckedCreateWithoutChangedByUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutChangedByUserInput | RoleChangeLogCreateOrConnectWithoutChangedByUserInput[]
    createMany?: RoleChangeLogCreateManyChangedByUserInputEnvelope
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
  }

  export type UserPermissionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserPermissionCreateWithoutUserInput, UserPermissionUncheckedCreateWithoutUserInput> | UserPermissionCreateWithoutUserInput[] | UserPermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutUserInput | UserPermissionCreateOrConnectWithoutUserInput[]
    createMany?: UserPermissionCreateManyUserInputEnvelope
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
  }

  export type MaintenanceUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<MaintenanceCreateWithoutRequesterInput, MaintenanceUncheckedCreateWithoutRequesterInput> | MaintenanceCreateWithoutRequesterInput[] | MaintenanceUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutRequesterInput | MaintenanceCreateOrConnectWithoutRequesterInput[]
    createMany?: MaintenanceCreateManyRequesterInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceUncheckedCreateNestedManyWithoutManagerInput = {
    create?: XOR<MaintenanceCreateWithoutManagerInput, MaintenanceUncheckedCreateWithoutManagerInput> | MaintenanceCreateWithoutManagerInput[] | MaintenanceUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutManagerInput | MaintenanceCreateOrConnectWithoutManagerInput[]
    createMany?: MaintenanceCreateManyManagerInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<MaintenanceCreateWithoutAssignedToInput, MaintenanceUncheckedCreateWithoutAssignedToInput> | MaintenanceCreateWithoutAssignedToInput[] | MaintenanceUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssignedToInput | MaintenanceCreateOrConnectWithoutAssignedToInput[]
    createMany?: MaintenanceCreateManyAssignedToInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutCreatedByInput, MaintenanceScheduleUncheckedCreateWithoutCreatedByInput> | MaintenanceScheduleCreateWithoutCreatedByInput[] | MaintenanceScheduleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutCreatedByInput | MaintenanceScheduleCreateOrConnectWithoutCreatedByInput[]
    createMany?: MaintenanceScheduleCreateManyCreatedByInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssignedToInput, MaintenanceScheduleUncheckedCreateWithoutAssignedToInput> | MaintenanceScheduleCreateWithoutAssignedToInput[] | MaintenanceScheduleUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssignedToInput | MaintenanceScheduleCreateOrConnectWithoutAssignedToInput[]
    createMany?: MaintenanceScheduleCreateManyAssignedToInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutCreatedByInput, MaintenanceTemplateUncheckedCreateWithoutCreatedByInput> | MaintenanceTemplateCreateWithoutCreatedByInput[] | MaintenanceTemplateUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutCreatedByInput | MaintenanceTemplateCreateOrConnectWithoutCreatedByInput[]
    createMany?: MaintenanceTemplateCreateManyCreatedByInputEnvelope
    connect?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
  }

  export type TransferUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<TransferCreateWithoutRequesterInput, TransferUncheckedCreateWithoutRequesterInput> | TransferCreateWithoutRequesterInput[] | TransferUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutRequesterInput | TransferCreateOrConnectWithoutRequesterInput[]
    createMany?: TransferCreateManyRequesterInputEnvelope
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
  }

  export type TransferUncheckedCreateNestedManyWithoutManagerInput = {
    create?: XOR<TransferCreateWithoutManagerInput, TransferUncheckedCreateWithoutManagerInput> | TransferCreateWithoutManagerInput[] | TransferUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutManagerInput | TransferCreateOrConnectWithoutManagerInput[]
    createMany?: TransferCreateManyManagerInputEnvelope
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
  }

  export type DisposalUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<DisposalCreateWithoutRequesterInput, DisposalUncheckedCreateWithoutRequesterInput> | DisposalCreateWithoutRequesterInput[] | DisposalUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutRequesterInput | DisposalCreateOrConnectWithoutRequesterInput[]
    createMany?: DisposalCreateManyRequesterInputEnvelope
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
  }

  export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
  }

  export type AssetAuditUncheckedCreateNestedManyWithoutAuditorInput = {
    create?: XOR<AssetAuditCreateWithoutAuditorInput, AssetAuditUncheckedCreateWithoutAuditorInput> | AssetAuditCreateWithoutAuditorInput[] | AssetAuditUncheckedCreateWithoutAuditorInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAuditorInput | AssetAuditCreateOrConnectWithoutAuditorInput[]
    createMany?: AssetAuditCreateManyAuditorInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedToInput, AuditAssignmentUncheckedCreateWithoutAssignedToInput> | AuditAssignmentCreateWithoutAssignedToInput[] | AuditAssignmentUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedToInput | AuditAssignmentCreateOrConnectWithoutAssignedToInput[]
    createMany?: AuditAssignmentCreateManyAssignedToInputEnvelope
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
  }

  export type AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedByInput, AuditAssignmentUncheckedCreateWithoutAssignedByInput> | AuditAssignmentCreateWithoutAssignedByInput[] | AuditAssignmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedByInput | AuditAssignmentCreateOrConnectWithoutAssignedByInput[]
    createMany?: AuditAssignmentCreateManyAssignedByInputEnvelope
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
  }

  export type AuditRequestUncheckedCreateNestedManyWithoutRequesterInput = {
    create?: XOR<AuditRequestCreateWithoutRequesterInput, AuditRequestUncheckedCreateWithoutRequesterInput> | AuditRequestCreateWithoutRequesterInput[] | AuditRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutRequesterInput | AuditRequestCreateOrConnectWithoutRequesterInput[]
    createMany?: AuditRequestCreateManyRequesterInputEnvelope
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
  }

  export type AuditRequestUncheckedCreateNestedManyWithoutManagerInput = {
    create?: XOR<AuditRequestCreateWithoutManagerInput, AuditRequestUncheckedCreateWithoutManagerInput> | AuditRequestCreateWithoutManagerInput[] | AuditRequestUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutManagerInput | AuditRequestCreateOrConnectWithoutManagerInput[]
    createMany?: AuditRequestCreateManyManagerInputEnvelope
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type RoleChangeLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<RoleChangeLogCreateWithoutUserInput, RoleChangeLogUncheckedCreateWithoutUserInput> | RoleChangeLogCreateWithoutUserInput[] | RoleChangeLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutUserInput | RoleChangeLogCreateOrConnectWithoutUserInput[]
    upsert?: RoleChangeLogUpsertWithWhereUniqueWithoutUserInput | RoleChangeLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RoleChangeLogCreateManyUserInputEnvelope
    set?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    disconnect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    delete?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    update?: RoleChangeLogUpdateWithWhereUniqueWithoutUserInput | RoleChangeLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RoleChangeLogUpdateManyWithWhereWithoutUserInput | RoleChangeLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RoleChangeLogScalarWhereInput | RoleChangeLogScalarWhereInput[]
  }

  export type RoleChangeLogUpdateManyWithoutChangedByUserNestedInput = {
    create?: XOR<RoleChangeLogCreateWithoutChangedByUserInput, RoleChangeLogUncheckedCreateWithoutChangedByUserInput> | RoleChangeLogCreateWithoutChangedByUserInput[] | RoleChangeLogUncheckedCreateWithoutChangedByUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutChangedByUserInput | RoleChangeLogCreateOrConnectWithoutChangedByUserInput[]
    upsert?: RoleChangeLogUpsertWithWhereUniqueWithoutChangedByUserInput | RoleChangeLogUpsertWithWhereUniqueWithoutChangedByUserInput[]
    createMany?: RoleChangeLogCreateManyChangedByUserInputEnvelope
    set?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    disconnect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    delete?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    update?: RoleChangeLogUpdateWithWhereUniqueWithoutChangedByUserInput | RoleChangeLogUpdateWithWhereUniqueWithoutChangedByUserInput[]
    updateMany?: RoleChangeLogUpdateManyWithWhereWithoutChangedByUserInput | RoleChangeLogUpdateManyWithWhereWithoutChangedByUserInput[]
    deleteMany?: RoleChangeLogScalarWhereInput | RoleChangeLogScalarWhereInput[]
  }

  export type UserPermissionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserPermissionCreateWithoutUserInput, UserPermissionUncheckedCreateWithoutUserInput> | UserPermissionCreateWithoutUserInput[] | UserPermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutUserInput | UserPermissionCreateOrConnectWithoutUserInput[]
    upsert?: UserPermissionUpsertWithWhereUniqueWithoutUserInput | UserPermissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserPermissionCreateManyUserInputEnvelope
    set?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    disconnect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    delete?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    update?: UserPermissionUpdateWithWhereUniqueWithoutUserInput | UserPermissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserPermissionUpdateManyWithWhereWithoutUserInput | UserPermissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserPermissionScalarWhereInput | UserPermissionScalarWhereInput[]
  }

  export type MaintenanceUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<MaintenanceCreateWithoutRequesterInput, MaintenanceUncheckedCreateWithoutRequesterInput> | MaintenanceCreateWithoutRequesterInput[] | MaintenanceUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutRequesterInput | MaintenanceCreateOrConnectWithoutRequesterInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutRequesterInput | MaintenanceUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: MaintenanceCreateManyRequesterInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutRequesterInput | MaintenanceUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutRequesterInput | MaintenanceUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceUpdateManyWithoutManagerNestedInput = {
    create?: XOR<MaintenanceCreateWithoutManagerInput, MaintenanceUncheckedCreateWithoutManagerInput> | MaintenanceCreateWithoutManagerInput[] | MaintenanceUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutManagerInput | MaintenanceCreateOrConnectWithoutManagerInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutManagerInput | MaintenanceUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: MaintenanceCreateManyManagerInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutManagerInput | MaintenanceUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutManagerInput | MaintenanceUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<MaintenanceCreateWithoutAssignedToInput, MaintenanceUncheckedCreateWithoutAssignedToInput> | MaintenanceCreateWithoutAssignedToInput[] | MaintenanceUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssignedToInput | MaintenanceCreateOrConnectWithoutAssignedToInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutAssignedToInput | MaintenanceUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: MaintenanceCreateManyAssignedToInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutAssignedToInput | MaintenanceUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutAssignedToInput | MaintenanceUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutCreatedByInput, MaintenanceScheduleUncheckedCreateWithoutCreatedByInput> | MaintenanceScheduleCreateWithoutCreatedByInput[] | MaintenanceScheduleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutCreatedByInput | MaintenanceScheduleCreateOrConnectWithoutCreatedByInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutCreatedByInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: MaintenanceScheduleCreateManyCreatedByInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutCreatedByInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutCreatedByInput | MaintenanceScheduleUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssignedToInput, MaintenanceScheduleUncheckedCreateWithoutAssignedToInput> | MaintenanceScheduleCreateWithoutAssignedToInput[] | MaintenanceScheduleUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssignedToInput | MaintenanceScheduleCreateOrConnectWithoutAssignedToInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutAssignedToInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: MaintenanceScheduleCreateManyAssignedToInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutAssignedToInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutAssignedToInput | MaintenanceScheduleUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutCreatedByInput, MaintenanceTemplateUncheckedCreateWithoutCreatedByInput> | MaintenanceTemplateCreateWithoutCreatedByInput[] | MaintenanceTemplateUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutCreatedByInput | MaintenanceTemplateCreateOrConnectWithoutCreatedByInput[]
    upsert?: MaintenanceTemplateUpsertWithWhereUniqueWithoutCreatedByInput | MaintenanceTemplateUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: MaintenanceTemplateCreateManyCreatedByInputEnvelope
    set?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    disconnect?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    delete?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    connect?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    update?: MaintenanceTemplateUpdateWithWhereUniqueWithoutCreatedByInput | MaintenanceTemplateUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: MaintenanceTemplateUpdateManyWithWhereWithoutCreatedByInput | MaintenanceTemplateUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: MaintenanceTemplateScalarWhereInput | MaintenanceTemplateScalarWhereInput[]
  }

  export type TransferUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<TransferCreateWithoutRequesterInput, TransferUncheckedCreateWithoutRequesterInput> | TransferCreateWithoutRequesterInput[] | TransferUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutRequesterInput | TransferCreateOrConnectWithoutRequesterInput[]
    upsert?: TransferUpsertWithWhereUniqueWithoutRequesterInput | TransferUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: TransferCreateManyRequesterInputEnvelope
    set?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    disconnect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    delete?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    update?: TransferUpdateWithWhereUniqueWithoutRequesterInput | TransferUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: TransferUpdateManyWithWhereWithoutRequesterInput | TransferUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: TransferScalarWhereInput | TransferScalarWhereInput[]
  }

  export type TransferUpdateManyWithoutManagerNestedInput = {
    create?: XOR<TransferCreateWithoutManagerInput, TransferUncheckedCreateWithoutManagerInput> | TransferCreateWithoutManagerInput[] | TransferUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutManagerInput | TransferCreateOrConnectWithoutManagerInput[]
    upsert?: TransferUpsertWithWhereUniqueWithoutManagerInput | TransferUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: TransferCreateManyManagerInputEnvelope
    set?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    disconnect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    delete?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    update?: TransferUpdateWithWhereUniqueWithoutManagerInput | TransferUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: TransferUpdateManyWithWhereWithoutManagerInput | TransferUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: TransferScalarWhereInput | TransferScalarWhereInput[]
  }

  export type DisposalUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<DisposalCreateWithoutRequesterInput, DisposalUncheckedCreateWithoutRequesterInput> | DisposalCreateWithoutRequesterInput[] | DisposalUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutRequesterInput | DisposalCreateOrConnectWithoutRequesterInput[]
    upsert?: DisposalUpsertWithWhereUniqueWithoutRequesterInput | DisposalUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: DisposalCreateManyRequesterInputEnvelope
    set?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    disconnect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    delete?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    update?: DisposalUpdateWithWhereUniqueWithoutRequesterInput | DisposalUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: DisposalUpdateManyWithWhereWithoutRequesterInput | DisposalUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: DisposalScalarWhereInput | DisposalScalarWhereInput[]
  }

  export type NotificationUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type AssetAuditUpdateManyWithoutAuditorNestedInput = {
    create?: XOR<AssetAuditCreateWithoutAuditorInput, AssetAuditUncheckedCreateWithoutAuditorInput> | AssetAuditCreateWithoutAuditorInput[] | AssetAuditUncheckedCreateWithoutAuditorInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAuditorInput | AssetAuditCreateOrConnectWithoutAuditorInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutAuditorInput | AssetAuditUpsertWithWhereUniqueWithoutAuditorInput[]
    createMany?: AssetAuditCreateManyAuditorInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutAuditorInput | AssetAuditUpdateWithWhereUniqueWithoutAuditorInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutAuditorInput | AssetAuditUpdateManyWithWhereWithoutAuditorInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AuditAssignmentUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedToInput, AuditAssignmentUncheckedCreateWithoutAssignedToInput> | AuditAssignmentCreateWithoutAssignedToInput[] | AuditAssignmentUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedToInput | AuditAssignmentCreateOrConnectWithoutAssignedToInput[]
    upsert?: AuditAssignmentUpsertWithWhereUniqueWithoutAssignedToInput | AuditAssignmentUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: AuditAssignmentCreateManyAssignedToInputEnvelope
    set?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    disconnect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    delete?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    update?: AuditAssignmentUpdateWithWhereUniqueWithoutAssignedToInput | AuditAssignmentUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: AuditAssignmentUpdateManyWithWhereWithoutAssignedToInput | AuditAssignmentUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
  }

  export type AuditAssignmentUpdateManyWithoutAssignedByNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedByInput, AuditAssignmentUncheckedCreateWithoutAssignedByInput> | AuditAssignmentCreateWithoutAssignedByInput[] | AuditAssignmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedByInput | AuditAssignmentCreateOrConnectWithoutAssignedByInput[]
    upsert?: AuditAssignmentUpsertWithWhereUniqueWithoutAssignedByInput | AuditAssignmentUpsertWithWhereUniqueWithoutAssignedByInput[]
    createMany?: AuditAssignmentCreateManyAssignedByInputEnvelope
    set?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    disconnect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    delete?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    update?: AuditAssignmentUpdateWithWhereUniqueWithoutAssignedByInput | AuditAssignmentUpdateWithWhereUniqueWithoutAssignedByInput[]
    updateMany?: AuditAssignmentUpdateManyWithWhereWithoutAssignedByInput | AuditAssignmentUpdateManyWithWhereWithoutAssignedByInput[]
    deleteMany?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
  }

  export type AuditRequestUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<AuditRequestCreateWithoutRequesterInput, AuditRequestUncheckedCreateWithoutRequesterInput> | AuditRequestCreateWithoutRequesterInput[] | AuditRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutRequesterInput | AuditRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: AuditRequestUpsertWithWhereUniqueWithoutRequesterInput | AuditRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: AuditRequestCreateManyRequesterInputEnvelope
    set?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    disconnect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    delete?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    update?: AuditRequestUpdateWithWhereUniqueWithoutRequesterInput | AuditRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: AuditRequestUpdateManyWithWhereWithoutRequesterInput | AuditRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
  }

  export type AuditRequestUpdateManyWithoutManagerNestedInput = {
    create?: XOR<AuditRequestCreateWithoutManagerInput, AuditRequestUncheckedCreateWithoutManagerInput> | AuditRequestCreateWithoutManagerInput[] | AuditRequestUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutManagerInput | AuditRequestCreateOrConnectWithoutManagerInput[]
    upsert?: AuditRequestUpsertWithWhereUniqueWithoutManagerInput | AuditRequestUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: AuditRequestCreateManyManagerInputEnvelope
    set?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    disconnect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    delete?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    update?: AuditRequestUpdateWithWhereUniqueWithoutManagerInput | AuditRequestUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: AuditRequestUpdateManyWithWhereWithoutManagerInput | AuditRequestUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
  }

  export type RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RoleChangeLogCreateWithoutUserInput, RoleChangeLogUncheckedCreateWithoutUserInput> | RoleChangeLogCreateWithoutUserInput[] | RoleChangeLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutUserInput | RoleChangeLogCreateOrConnectWithoutUserInput[]
    upsert?: RoleChangeLogUpsertWithWhereUniqueWithoutUserInput | RoleChangeLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RoleChangeLogCreateManyUserInputEnvelope
    set?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    disconnect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    delete?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    update?: RoleChangeLogUpdateWithWhereUniqueWithoutUserInput | RoleChangeLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RoleChangeLogUpdateManyWithWhereWithoutUserInput | RoleChangeLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RoleChangeLogScalarWhereInput | RoleChangeLogScalarWhereInput[]
  }

  export type RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput = {
    create?: XOR<RoleChangeLogCreateWithoutChangedByUserInput, RoleChangeLogUncheckedCreateWithoutChangedByUserInput> | RoleChangeLogCreateWithoutChangedByUserInput[] | RoleChangeLogUncheckedCreateWithoutChangedByUserInput[]
    connectOrCreate?: RoleChangeLogCreateOrConnectWithoutChangedByUserInput | RoleChangeLogCreateOrConnectWithoutChangedByUserInput[]
    upsert?: RoleChangeLogUpsertWithWhereUniqueWithoutChangedByUserInput | RoleChangeLogUpsertWithWhereUniqueWithoutChangedByUserInput[]
    createMany?: RoleChangeLogCreateManyChangedByUserInputEnvelope
    set?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    disconnect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    delete?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    connect?: RoleChangeLogWhereUniqueInput | RoleChangeLogWhereUniqueInput[]
    update?: RoleChangeLogUpdateWithWhereUniqueWithoutChangedByUserInput | RoleChangeLogUpdateWithWhereUniqueWithoutChangedByUserInput[]
    updateMany?: RoleChangeLogUpdateManyWithWhereWithoutChangedByUserInput | RoleChangeLogUpdateManyWithWhereWithoutChangedByUserInput[]
    deleteMany?: RoleChangeLogScalarWhereInput | RoleChangeLogScalarWhereInput[]
  }

  export type UserPermissionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserPermissionCreateWithoutUserInput, UserPermissionUncheckedCreateWithoutUserInput> | UserPermissionCreateWithoutUserInput[] | UserPermissionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutUserInput | UserPermissionCreateOrConnectWithoutUserInput[]
    upsert?: UserPermissionUpsertWithWhereUniqueWithoutUserInput | UserPermissionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserPermissionCreateManyUserInputEnvelope
    set?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    disconnect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    delete?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    update?: UserPermissionUpdateWithWhereUniqueWithoutUserInput | UserPermissionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserPermissionUpdateManyWithWhereWithoutUserInput | UserPermissionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserPermissionScalarWhereInput | UserPermissionScalarWhereInput[]
  }

  export type MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<MaintenanceCreateWithoutRequesterInput, MaintenanceUncheckedCreateWithoutRequesterInput> | MaintenanceCreateWithoutRequesterInput[] | MaintenanceUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutRequesterInput | MaintenanceCreateOrConnectWithoutRequesterInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutRequesterInput | MaintenanceUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: MaintenanceCreateManyRequesterInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutRequesterInput | MaintenanceUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutRequesterInput | MaintenanceUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceUncheckedUpdateManyWithoutManagerNestedInput = {
    create?: XOR<MaintenanceCreateWithoutManagerInput, MaintenanceUncheckedCreateWithoutManagerInput> | MaintenanceCreateWithoutManagerInput[] | MaintenanceUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutManagerInput | MaintenanceCreateOrConnectWithoutManagerInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutManagerInput | MaintenanceUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: MaintenanceCreateManyManagerInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutManagerInput | MaintenanceUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutManagerInput | MaintenanceUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<MaintenanceCreateWithoutAssignedToInput, MaintenanceUncheckedCreateWithoutAssignedToInput> | MaintenanceCreateWithoutAssignedToInput[] | MaintenanceUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssignedToInput | MaintenanceCreateOrConnectWithoutAssignedToInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutAssignedToInput | MaintenanceUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: MaintenanceCreateManyAssignedToInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutAssignedToInput | MaintenanceUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutAssignedToInput | MaintenanceUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutCreatedByInput, MaintenanceScheduleUncheckedCreateWithoutCreatedByInput> | MaintenanceScheduleCreateWithoutCreatedByInput[] | MaintenanceScheduleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutCreatedByInput | MaintenanceScheduleCreateOrConnectWithoutCreatedByInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutCreatedByInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: MaintenanceScheduleCreateManyCreatedByInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutCreatedByInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutCreatedByInput | MaintenanceScheduleUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssignedToInput, MaintenanceScheduleUncheckedCreateWithoutAssignedToInput> | MaintenanceScheduleCreateWithoutAssignedToInput[] | MaintenanceScheduleUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssignedToInput | MaintenanceScheduleCreateOrConnectWithoutAssignedToInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutAssignedToInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: MaintenanceScheduleCreateManyAssignedToInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutAssignedToInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutAssignedToInput | MaintenanceScheduleUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutCreatedByInput, MaintenanceTemplateUncheckedCreateWithoutCreatedByInput> | MaintenanceTemplateCreateWithoutCreatedByInput[] | MaintenanceTemplateUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutCreatedByInput | MaintenanceTemplateCreateOrConnectWithoutCreatedByInput[]
    upsert?: MaintenanceTemplateUpsertWithWhereUniqueWithoutCreatedByInput | MaintenanceTemplateUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: MaintenanceTemplateCreateManyCreatedByInputEnvelope
    set?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    disconnect?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    delete?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    connect?: MaintenanceTemplateWhereUniqueInput | MaintenanceTemplateWhereUniqueInput[]
    update?: MaintenanceTemplateUpdateWithWhereUniqueWithoutCreatedByInput | MaintenanceTemplateUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: MaintenanceTemplateUpdateManyWithWhereWithoutCreatedByInput | MaintenanceTemplateUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: MaintenanceTemplateScalarWhereInput | MaintenanceTemplateScalarWhereInput[]
  }

  export type TransferUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<TransferCreateWithoutRequesterInput, TransferUncheckedCreateWithoutRequesterInput> | TransferCreateWithoutRequesterInput[] | TransferUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutRequesterInput | TransferCreateOrConnectWithoutRequesterInput[]
    upsert?: TransferUpsertWithWhereUniqueWithoutRequesterInput | TransferUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: TransferCreateManyRequesterInputEnvelope
    set?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    disconnect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    delete?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    update?: TransferUpdateWithWhereUniqueWithoutRequesterInput | TransferUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: TransferUpdateManyWithWhereWithoutRequesterInput | TransferUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: TransferScalarWhereInput | TransferScalarWhereInput[]
  }

  export type TransferUncheckedUpdateManyWithoutManagerNestedInput = {
    create?: XOR<TransferCreateWithoutManagerInput, TransferUncheckedCreateWithoutManagerInput> | TransferCreateWithoutManagerInput[] | TransferUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutManagerInput | TransferCreateOrConnectWithoutManagerInput[]
    upsert?: TransferUpsertWithWhereUniqueWithoutManagerInput | TransferUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: TransferCreateManyManagerInputEnvelope
    set?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    disconnect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    delete?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    update?: TransferUpdateWithWhereUniqueWithoutManagerInput | TransferUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: TransferUpdateManyWithWhereWithoutManagerInput | TransferUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: TransferScalarWhereInput | TransferScalarWhereInput[]
  }

  export type DisposalUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<DisposalCreateWithoutRequesterInput, DisposalUncheckedCreateWithoutRequesterInput> | DisposalCreateWithoutRequesterInput[] | DisposalUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutRequesterInput | DisposalCreateOrConnectWithoutRequesterInput[]
    upsert?: DisposalUpsertWithWhereUniqueWithoutRequesterInput | DisposalUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: DisposalCreateManyRequesterInputEnvelope
    set?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    disconnect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    delete?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    update?: DisposalUpdateWithWhereUniqueWithoutRequesterInput | DisposalUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: DisposalUpdateManyWithWhereWithoutRequesterInput | DisposalUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: DisposalScalarWhereInput | DisposalScalarWhereInput[]
  }

  export type NotificationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput> | NotificationCreateWithoutUserInput[] | NotificationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: NotificationCreateOrConnectWithoutUserInput | NotificationCreateOrConnectWithoutUserInput[]
    upsert?: NotificationUpsertWithWhereUniqueWithoutUserInput | NotificationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: NotificationCreateManyUserInputEnvelope
    set?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    disconnect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    delete?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    connect?: NotificationWhereUniqueInput | NotificationWhereUniqueInput[]
    update?: NotificationUpdateWithWhereUniqueWithoutUserInput | NotificationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: NotificationUpdateManyWithWhereWithoutUserInput | NotificationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
  }

  export type AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput = {
    create?: XOR<AssetAuditCreateWithoutAuditorInput, AssetAuditUncheckedCreateWithoutAuditorInput> | AssetAuditCreateWithoutAuditorInput[] | AssetAuditUncheckedCreateWithoutAuditorInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAuditorInput | AssetAuditCreateOrConnectWithoutAuditorInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutAuditorInput | AssetAuditUpsertWithWhereUniqueWithoutAuditorInput[]
    createMany?: AssetAuditCreateManyAuditorInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutAuditorInput | AssetAuditUpdateWithWhereUniqueWithoutAuditorInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutAuditorInput | AssetAuditUpdateManyWithWhereWithoutAuditorInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedToInput, AuditAssignmentUncheckedCreateWithoutAssignedToInput> | AuditAssignmentCreateWithoutAssignedToInput[] | AuditAssignmentUncheckedCreateWithoutAssignedToInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedToInput | AuditAssignmentCreateOrConnectWithoutAssignedToInput[]
    upsert?: AuditAssignmentUpsertWithWhereUniqueWithoutAssignedToInput | AuditAssignmentUpsertWithWhereUniqueWithoutAssignedToInput[]
    createMany?: AuditAssignmentCreateManyAssignedToInputEnvelope
    set?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    disconnect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    delete?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    update?: AuditAssignmentUpdateWithWhereUniqueWithoutAssignedToInput | AuditAssignmentUpdateWithWhereUniqueWithoutAssignedToInput[]
    updateMany?: AuditAssignmentUpdateManyWithWhereWithoutAssignedToInput | AuditAssignmentUpdateManyWithWhereWithoutAssignedToInput[]
    deleteMany?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
  }

  export type AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssignedByInput, AuditAssignmentUncheckedCreateWithoutAssignedByInput> | AuditAssignmentCreateWithoutAssignedByInput[] | AuditAssignmentUncheckedCreateWithoutAssignedByInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssignedByInput | AuditAssignmentCreateOrConnectWithoutAssignedByInput[]
    upsert?: AuditAssignmentUpsertWithWhereUniqueWithoutAssignedByInput | AuditAssignmentUpsertWithWhereUniqueWithoutAssignedByInput[]
    createMany?: AuditAssignmentCreateManyAssignedByInputEnvelope
    set?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    disconnect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    delete?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    update?: AuditAssignmentUpdateWithWhereUniqueWithoutAssignedByInput | AuditAssignmentUpdateWithWhereUniqueWithoutAssignedByInput[]
    updateMany?: AuditAssignmentUpdateManyWithWhereWithoutAssignedByInput | AuditAssignmentUpdateManyWithWhereWithoutAssignedByInput[]
    deleteMany?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
  }

  export type AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput = {
    create?: XOR<AuditRequestCreateWithoutRequesterInput, AuditRequestUncheckedCreateWithoutRequesterInput> | AuditRequestCreateWithoutRequesterInput[] | AuditRequestUncheckedCreateWithoutRequesterInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutRequesterInput | AuditRequestCreateOrConnectWithoutRequesterInput[]
    upsert?: AuditRequestUpsertWithWhereUniqueWithoutRequesterInput | AuditRequestUpsertWithWhereUniqueWithoutRequesterInput[]
    createMany?: AuditRequestCreateManyRequesterInputEnvelope
    set?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    disconnect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    delete?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    update?: AuditRequestUpdateWithWhereUniqueWithoutRequesterInput | AuditRequestUpdateWithWhereUniqueWithoutRequesterInput[]
    updateMany?: AuditRequestUpdateManyWithWhereWithoutRequesterInput | AuditRequestUpdateManyWithWhereWithoutRequesterInput[]
    deleteMany?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
  }

  export type AuditRequestUncheckedUpdateManyWithoutManagerNestedInput = {
    create?: XOR<AuditRequestCreateWithoutManagerInput, AuditRequestUncheckedCreateWithoutManagerInput> | AuditRequestCreateWithoutManagerInput[] | AuditRequestUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutManagerInput | AuditRequestCreateOrConnectWithoutManagerInput[]
    upsert?: AuditRequestUpsertWithWhereUniqueWithoutManagerInput | AuditRequestUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: AuditRequestCreateManyManagerInputEnvelope
    set?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    disconnect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    delete?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    update?: AuditRequestUpdateWithWhereUniqueWithoutManagerInput | AuditRequestUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: AuditRequestUpdateManyWithWhereWithoutManagerInput | AuditRequestUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    connect?: UserWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutNotificationsInput
    upsert?: UserUpsertWithoutNotificationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutNotificationsInput, UserUpdateWithoutNotificationsInput>, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type AssetDepreciationCreateNestedManyWithoutAssetInput = {
    create?: XOR<AssetDepreciationCreateWithoutAssetInput, AssetDepreciationUncheckedCreateWithoutAssetInput> | AssetDepreciationCreateWithoutAssetInput[] | AssetDepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetDepreciationCreateOrConnectWithoutAssetInput | AssetDepreciationCreateOrConnectWithoutAssetInput[]
    createMany?: AssetDepreciationCreateManyAssetInputEnvelope
    connect?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
  }

  export type AssetHistoryCreateNestedManyWithoutAssetInput = {
    create?: XOR<AssetHistoryCreateWithoutAssetInput, AssetHistoryUncheckedCreateWithoutAssetInput> | AssetHistoryCreateWithoutAssetInput[] | AssetHistoryUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetHistoryCreateOrConnectWithoutAssetInput | AssetHistoryCreateOrConnectWithoutAssetInput[]
    createMany?: AssetHistoryCreateManyAssetInputEnvelope
    connect?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
  }

  export type DepreciationCreateNestedManyWithoutAssetInput = {
    create?: XOR<DepreciationCreateWithoutAssetInput, DepreciationUncheckedCreateWithoutAssetInput> | DepreciationCreateWithoutAssetInput[] | DepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DepreciationCreateOrConnectWithoutAssetInput | DepreciationCreateOrConnectWithoutAssetInput[]
    createMany?: DepreciationCreateManyAssetInputEnvelope
    connect?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
  }

  export type DisposalCreateNestedManyWithoutAssetInput = {
    create?: XOR<DisposalCreateWithoutAssetInput, DisposalUncheckedCreateWithoutAssetInput> | DisposalCreateWithoutAssetInput[] | DisposalUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutAssetInput | DisposalCreateOrConnectWithoutAssetInput[]
    createMany?: DisposalCreateManyAssetInputEnvelope
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
  }

  export type DocumentCreateNestedManyWithoutAssetInput = {
    create?: XOR<DocumentCreateWithoutAssetInput, DocumentUncheckedCreateWithoutAssetInput> | DocumentCreateWithoutAssetInput[] | DocumentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAssetInput | DocumentCreateOrConnectWithoutAssetInput[]
    createMany?: DocumentCreateManyAssetInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type MaintenanceCreateNestedManyWithoutAssetInput = {
    create?: XOR<MaintenanceCreateWithoutAssetInput, MaintenanceUncheckedCreateWithoutAssetInput> | MaintenanceCreateWithoutAssetInput[] | MaintenanceUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssetInput | MaintenanceCreateOrConnectWithoutAssetInput[]
    createMany?: MaintenanceCreateManyAssetInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceScheduleCreateNestedManyWithoutAssetInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssetInput, MaintenanceScheduleUncheckedCreateWithoutAssetInput> | MaintenanceScheduleCreateWithoutAssetInput[] | MaintenanceScheduleUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssetInput | MaintenanceScheduleCreateOrConnectWithoutAssetInput[]
    createMany?: MaintenanceScheduleCreateManyAssetInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type TransferCreateNestedManyWithoutAssetInput = {
    create?: XOR<TransferCreateWithoutAssetInput, TransferUncheckedCreateWithoutAssetInput> | TransferCreateWithoutAssetInput[] | TransferUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutAssetInput | TransferCreateOrConnectWithoutAssetInput[]
    createMany?: TransferCreateManyAssetInputEnvelope
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
  }

  export type LinkedAssetCreateNestedManyWithoutToAssetInput = {
    create?: XOR<LinkedAssetCreateWithoutToAssetInput, LinkedAssetUncheckedCreateWithoutToAssetInput> | LinkedAssetCreateWithoutToAssetInput[] | LinkedAssetUncheckedCreateWithoutToAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutToAssetInput | LinkedAssetCreateOrConnectWithoutToAssetInput[]
    createMany?: LinkedAssetCreateManyToAssetInputEnvelope
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
  }

  export type LinkedAssetCreateNestedManyWithoutFromAssetInput = {
    create?: XOR<LinkedAssetCreateWithoutFromAssetInput, LinkedAssetUncheckedCreateWithoutFromAssetInput> | LinkedAssetCreateWithoutFromAssetInput[] | LinkedAssetUncheckedCreateWithoutFromAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutFromAssetInput | LinkedAssetCreateOrConnectWithoutFromAssetInput[]
    createMany?: LinkedAssetCreateManyFromAssetInputEnvelope
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
  }

  export type CapitalImprovementCreateNestedManyWithoutAssetInput = {
    create?: XOR<CapitalImprovementCreateWithoutAssetInput, CapitalImprovementUncheckedCreateWithoutAssetInput> | CapitalImprovementCreateWithoutAssetInput[] | CapitalImprovementUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: CapitalImprovementCreateOrConnectWithoutAssetInput | CapitalImprovementCreateOrConnectWithoutAssetInput[]
    createMany?: CapitalImprovementCreateManyAssetInputEnvelope
    connect?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
  }

  export type AssetAuditCreateNestedManyWithoutAssetInput = {
    create?: XOR<AssetAuditCreateWithoutAssetInput, AssetAuditUncheckedCreateWithoutAssetInput> | AssetAuditCreateWithoutAssetInput[] | AssetAuditUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssetInput | AssetAuditCreateOrConnectWithoutAssetInput[]
    createMany?: AssetAuditCreateManyAssetInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type AuditAssignmentCreateNestedManyWithoutAssetInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssetInput, AuditAssignmentUncheckedCreateWithoutAssetInput> | AuditAssignmentCreateWithoutAssetInput[] | AuditAssignmentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssetInput | AuditAssignmentCreateOrConnectWithoutAssetInput[]
    createMany?: AuditAssignmentCreateManyAssetInputEnvelope
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
  }

  export type AuditRequestCreateNestedManyWithoutAssetInput = {
    create?: XOR<AuditRequestCreateWithoutAssetInput, AuditRequestUncheckedCreateWithoutAssetInput> | AuditRequestCreateWithoutAssetInput[] | AuditRequestUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutAssetInput | AuditRequestCreateOrConnectWithoutAssetInput[]
    createMany?: AuditRequestCreateManyAssetInputEnvelope
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
  }

  export type AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<AssetDepreciationCreateWithoutAssetInput, AssetDepreciationUncheckedCreateWithoutAssetInput> | AssetDepreciationCreateWithoutAssetInput[] | AssetDepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetDepreciationCreateOrConnectWithoutAssetInput | AssetDepreciationCreateOrConnectWithoutAssetInput[]
    createMany?: AssetDepreciationCreateManyAssetInputEnvelope
    connect?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
  }

  export type AssetHistoryUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<AssetHistoryCreateWithoutAssetInput, AssetHistoryUncheckedCreateWithoutAssetInput> | AssetHistoryCreateWithoutAssetInput[] | AssetHistoryUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetHistoryCreateOrConnectWithoutAssetInput | AssetHistoryCreateOrConnectWithoutAssetInput[]
    createMany?: AssetHistoryCreateManyAssetInputEnvelope
    connect?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
  }

  export type DepreciationUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<DepreciationCreateWithoutAssetInput, DepreciationUncheckedCreateWithoutAssetInput> | DepreciationCreateWithoutAssetInput[] | DepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DepreciationCreateOrConnectWithoutAssetInput | DepreciationCreateOrConnectWithoutAssetInput[]
    createMany?: DepreciationCreateManyAssetInputEnvelope
    connect?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
  }

  export type DisposalUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<DisposalCreateWithoutAssetInput, DisposalUncheckedCreateWithoutAssetInput> | DisposalCreateWithoutAssetInput[] | DisposalUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutAssetInput | DisposalCreateOrConnectWithoutAssetInput[]
    createMany?: DisposalCreateManyAssetInputEnvelope
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
  }

  export type DocumentUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<DocumentCreateWithoutAssetInput, DocumentUncheckedCreateWithoutAssetInput> | DocumentCreateWithoutAssetInput[] | DocumentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAssetInput | DocumentCreateOrConnectWithoutAssetInput[]
    createMany?: DocumentCreateManyAssetInputEnvelope
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
  }

  export type MaintenanceUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<MaintenanceCreateWithoutAssetInput, MaintenanceUncheckedCreateWithoutAssetInput> | MaintenanceCreateWithoutAssetInput[] | MaintenanceUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssetInput | MaintenanceCreateOrConnectWithoutAssetInput[]
    createMany?: MaintenanceCreateManyAssetInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssetInput, MaintenanceScheduleUncheckedCreateWithoutAssetInput> | MaintenanceScheduleCreateWithoutAssetInput[] | MaintenanceScheduleUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssetInput | MaintenanceScheduleCreateOrConnectWithoutAssetInput[]
    createMany?: MaintenanceScheduleCreateManyAssetInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type TransferUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<TransferCreateWithoutAssetInput, TransferUncheckedCreateWithoutAssetInput> | TransferCreateWithoutAssetInput[] | TransferUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutAssetInput | TransferCreateOrConnectWithoutAssetInput[]
    createMany?: TransferCreateManyAssetInputEnvelope
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
  }

  export type LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput = {
    create?: XOR<LinkedAssetCreateWithoutToAssetInput, LinkedAssetUncheckedCreateWithoutToAssetInput> | LinkedAssetCreateWithoutToAssetInput[] | LinkedAssetUncheckedCreateWithoutToAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutToAssetInput | LinkedAssetCreateOrConnectWithoutToAssetInput[]
    createMany?: LinkedAssetCreateManyToAssetInputEnvelope
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
  }

  export type LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput = {
    create?: XOR<LinkedAssetCreateWithoutFromAssetInput, LinkedAssetUncheckedCreateWithoutFromAssetInput> | LinkedAssetCreateWithoutFromAssetInput[] | LinkedAssetUncheckedCreateWithoutFromAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutFromAssetInput | LinkedAssetCreateOrConnectWithoutFromAssetInput[]
    createMany?: LinkedAssetCreateManyFromAssetInputEnvelope
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
  }

  export type CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<CapitalImprovementCreateWithoutAssetInput, CapitalImprovementUncheckedCreateWithoutAssetInput> | CapitalImprovementCreateWithoutAssetInput[] | CapitalImprovementUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: CapitalImprovementCreateOrConnectWithoutAssetInput | CapitalImprovementCreateOrConnectWithoutAssetInput[]
    createMany?: CapitalImprovementCreateManyAssetInputEnvelope
    connect?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
  }

  export type AssetAuditUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<AssetAuditCreateWithoutAssetInput, AssetAuditUncheckedCreateWithoutAssetInput> | AssetAuditCreateWithoutAssetInput[] | AssetAuditUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssetInput | AssetAuditCreateOrConnectWithoutAssetInput[]
    createMany?: AssetAuditCreateManyAssetInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssetInput, AuditAssignmentUncheckedCreateWithoutAssetInput> | AuditAssignmentCreateWithoutAssetInput[] | AuditAssignmentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssetInput | AuditAssignmentCreateOrConnectWithoutAssetInput[]
    createMany?: AuditAssignmentCreateManyAssetInputEnvelope
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
  }

  export type AuditRequestUncheckedCreateNestedManyWithoutAssetInput = {
    create?: XOR<AuditRequestCreateWithoutAssetInput, AuditRequestUncheckedCreateWithoutAssetInput> | AuditRequestCreateWithoutAssetInput[] | AuditRequestUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutAssetInput | AuditRequestCreateOrConnectWithoutAssetInput[]
    createMany?: AuditRequestCreateManyAssetInputEnvelope
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput = {
    set?: $Enums.DepreciationMethodEnum | null
  }

  export type AssetDepreciationUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AssetDepreciationCreateWithoutAssetInput, AssetDepreciationUncheckedCreateWithoutAssetInput> | AssetDepreciationCreateWithoutAssetInput[] | AssetDepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetDepreciationCreateOrConnectWithoutAssetInput | AssetDepreciationCreateOrConnectWithoutAssetInput[]
    upsert?: AssetDepreciationUpsertWithWhereUniqueWithoutAssetInput | AssetDepreciationUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AssetDepreciationCreateManyAssetInputEnvelope
    set?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    disconnect?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    delete?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    connect?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    update?: AssetDepreciationUpdateWithWhereUniqueWithoutAssetInput | AssetDepreciationUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AssetDepreciationUpdateManyWithWhereWithoutAssetInput | AssetDepreciationUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AssetDepreciationScalarWhereInput | AssetDepreciationScalarWhereInput[]
  }

  export type AssetHistoryUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AssetHistoryCreateWithoutAssetInput, AssetHistoryUncheckedCreateWithoutAssetInput> | AssetHistoryCreateWithoutAssetInput[] | AssetHistoryUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetHistoryCreateOrConnectWithoutAssetInput | AssetHistoryCreateOrConnectWithoutAssetInput[]
    upsert?: AssetHistoryUpsertWithWhereUniqueWithoutAssetInput | AssetHistoryUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AssetHistoryCreateManyAssetInputEnvelope
    set?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    disconnect?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    delete?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    connect?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    update?: AssetHistoryUpdateWithWhereUniqueWithoutAssetInput | AssetHistoryUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AssetHistoryUpdateManyWithWhereWithoutAssetInput | AssetHistoryUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AssetHistoryScalarWhereInput | AssetHistoryScalarWhereInput[]
  }

  export type DepreciationUpdateManyWithoutAssetNestedInput = {
    create?: XOR<DepreciationCreateWithoutAssetInput, DepreciationUncheckedCreateWithoutAssetInput> | DepreciationCreateWithoutAssetInput[] | DepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DepreciationCreateOrConnectWithoutAssetInput | DepreciationCreateOrConnectWithoutAssetInput[]
    upsert?: DepreciationUpsertWithWhereUniqueWithoutAssetInput | DepreciationUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: DepreciationCreateManyAssetInputEnvelope
    set?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    disconnect?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    delete?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    connect?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    update?: DepreciationUpdateWithWhereUniqueWithoutAssetInput | DepreciationUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: DepreciationUpdateManyWithWhereWithoutAssetInput | DepreciationUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: DepreciationScalarWhereInput | DepreciationScalarWhereInput[]
  }

  export type DisposalUpdateManyWithoutAssetNestedInput = {
    create?: XOR<DisposalCreateWithoutAssetInput, DisposalUncheckedCreateWithoutAssetInput> | DisposalCreateWithoutAssetInput[] | DisposalUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutAssetInput | DisposalCreateOrConnectWithoutAssetInput[]
    upsert?: DisposalUpsertWithWhereUniqueWithoutAssetInput | DisposalUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: DisposalCreateManyAssetInputEnvelope
    set?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    disconnect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    delete?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    update?: DisposalUpdateWithWhereUniqueWithoutAssetInput | DisposalUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: DisposalUpdateManyWithWhereWithoutAssetInput | DisposalUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: DisposalScalarWhereInput | DisposalScalarWhereInput[]
  }

  export type DocumentUpdateManyWithoutAssetNestedInput = {
    create?: XOR<DocumentCreateWithoutAssetInput, DocumentUncheckedCreateWithoutAssetInput> | DocumentCreateWithoutAssetInput[] | DocumentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAssetInput | DocumentCreateOrConnectWithoutAssetInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutAssetInput | DocumentUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: DocumentCreateManyAssetInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutAssetInput | DocumentUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutAssetInput | DocumentUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type MaintenanceUpdateManyWithoutAssetNestedInput = {
    create?: XOR<MaintenanceCreateWithoutAssetInput, MaintenanceUncheckedCreateWithoutAssetInput> | MaintenanceCreateWithoutAssetInput[] | MaintenanceUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssetInput | MaintenanceCreateOrConnectWithoutAssetInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutAssetInput | MaintenanceUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: MaintenanceCreateManyAssetInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutAssetInput | MaintenanceUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutAssetInput | MaintenanceUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceScheduleUpdateManyWithoutAssetNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssetInput, MaintenanceScheduleUncheckedCreateWithoutAssetInput> | MaintenanceScheduleCreateWithoutAssetInput[] | MaintenanceScheduleUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssetInput | MaintenanceScheduleCreateOrConnectWithoutAssetInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutAssetInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: MaintenanceScheduleCreateManyAssetInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutAssetInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutAssetInput | MaintenanceScheduleUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type TransferUpdateManyWithoutAssetNestedInput = {
    create?: XOR<TransferCreateWithoutAssetInput, TransferUncheckedCreateWithoutAssetInput> | TransferCreateWithoutAssetInput[] | TransferUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutAssetInput | TransferCreateOrConnectWithoutAssetInput[]
    upsert?: TransferUpsertWithWhereUniqueWithoutAssetInput | TransferUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: TransferCreateManyAssetInputEnvelope
    set?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    disconnect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    delete?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    update?: TransferUpdateWithWhereUniqueWithoutAssetInput | TransferUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: TransferUpdateManyWithWhereWithoutAssetInput | TransferUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: TransferScalarWhereInput | TransferScalarWhereInput[]
  }

  export type LinkedAssetUpdateManyWithoutToAssetNestedInput = {
    create?: XOR<LinkedAssetCreateWithoutToAssetInput, LinkedAssetUncheckedCreateWithoutToAssetInput> | LinkedAssetCreateWithoutToAssetInput[] | LinkedAssetUncheckedCreateWithoutToAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutToAssetInput | LinkedAssetCreateOrConnectWithoutToAssetInput[]
    upsert?: LinkedAssetUpsertWithWhereUniqueWithoutToAssetInput | LinkedAssetUpsertWithWhereUniqueWithoutToAssetInput[]
    createMany?: LinkedAssetCreateManyToAssetInputEnvelope
    set?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    disconnect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    delete?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    update?: LinkedAssetUpdateWithWhereUniqueWithoutToAssetInput | LinkedAssetUpdateWithWhereUniqueWithoutToAssetInput[]
    updateMany?: LinkedAssetUpdateManyWithWhereWithoutToAssetInput | LinkedAssetUpdateManyWithWhereWithoutToAssetInput[]
    deleteMany?: LinkedAssetScalarWhereInput | LinkedAssetScalarWhereInput[]
  }

  export type LinkedAssetUpdateManyWithoutFromAssetNestedInput = {
    create?: XOR<LinkedAssetCreateWithoutFromAssetInput, LinkedAssetUncheckedCreateWithoutFromAssetInput> | LinkedAssetCreateWithoutFromAssetInput[] | LinkedAssetUncheckedCreateWithoutFromAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutFromAssetInput | LinkedAssetCreateOrConnectWithoutFromAssetInput[]
    upsert?: LinkedAssetUpsertWithWhereUniqueWithoutFromAssetInput | LinkedAssetUpsertWithWhereUniqueWithoutFromAssetInput[]
    createMany?: LinkedAssetCreateManyFromAssetInputEnvelope
    set?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    disconnect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    delete?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    update?: LinkedAssetUpdateWithWhereUniqueWithoutFromAssetInput | LinkedAssetUpdateWithWhereUniqueWithoutFromAssetInput[]
    updateMany?: LinkedAssetUpdateManyWithWhereWithoutFromAssetInput | LinkedAssetUpdateManyWithWhereWithoutFromAssetInput[]
    deleteMany?: LinkedAssetScalarWhereInput | LinkedAssetScalarWhereInput[]
  }

  export type CapitalImprovementUpdateManyWithoutAssetNestedInput = {
    create?: XOR<CapitalImprovementCreateWithoutAssetInput, CapitalImprovementUncheckedCreateWithoutAssetInput> | CapitalImprovementCreateWithoutAssetInput[] | CapitalImprovementUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: CapitalImprovementCreateOrConnectWithoutAssetInput | CapitalImprovementCreateOrConnectWithoutAssetInput[]
    upsert?: CapitalImprovementUpsertWithWhereUniqueWithoutAssetInput | CapitalImprovementUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: CapitalImprovementCreateManyAssetInputEnvelope
    set?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    disconnect?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    delete?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    connect?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    update?: CapitalImprovementUpdateWithWhereUniqueWithoutAssetInput | CapitalImprovementUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: CapitalImprovementUpdateManyWithWhereWithoutAssetInput | CapitalImprovementUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: CapitalImprovementScalarWhereInput | CapitalImprovementScalarWhereInput[]
  }

  export type AssetAuditUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AssetAuditCreateWithoutAssetInput, AssetAuditUncheckedCreateWithoutAssetInput> | AssetAuditCreateWithoutAssetInput[] | AssetAuditUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssetInput | AssetAuditCreateOrConnectWithoutAssetInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutAssetInput | AssetAuditUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AssetAuditCreateManyAssetInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutAssetInput | AssetAuditUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutAssetInput | AssetAuditUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AuditAssignmentUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssetInput, AuditAssignmentUncheckedCreateWithoutAssetInput> | AuditAssignmentCreateWithoutAssetInput[] | AuditAssignmentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssetInput | AuditAssignmentCreateOrConnectWithoutAssetInput[]
    upsert?: AuditAssignmentUpsertWithWhereUniqueWithoutAssetInput | AuditAssignmentUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AuditAssignmentCreateManyAssetInputEnvelope
    set?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    disconnect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    delete?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    update?: AuditAssignmentUpdateWithWhereUniqueWithoutAssetInput | AuditAssignmentUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AuditAssignmentUpdateManyWithWhereWithoutAssetInput | AuditAssignmentUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
  }

  export type AuditRequestUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AuditRequestCreateWithoutAssetInput, AuditRequestUncheckedCreateWithoutAssetInput> | AuditRequestCreateWithoutAssetInput[] | AuditRequestUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutAssetInput | AuditRequestCreateOrConnectWithoutAssetInput[]
    upsert?: AuditRequestUpsertWithWhereUniqueWithoutAssetInput | AuditRequestUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AuditRequestCreateManyAssetInputEnvelope
    set?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    disconnect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    delete?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    update?: AuditRequestUpdateWithWhereUniqueWithoutAssetInput | AuditRequestUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AuditRequestUpdateManyWithWhereWithoutAssetInput | AuditRequestUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
  }

  export type AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AssetDepreciationCreateWithoutAssetInput, AssetDepreciationUncheckedCreateWithoutAssetInput> | AssetDepreciationCreateWithoutAssetInput[] | AssetDepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetDepreciationCreateOrConnectWithoutAssetInput | AssetDepreciationCreateOrConnectWithoutAssetInput[]
    upsert?: AssetDepreciationUpsertWithWhereUniqueWithoutAssetInput | AssetDepreciationUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AssetDepreciationCreateManyAssetInputEnvelope
    set?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    disconnect?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    delete?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    connect?: AssetDepreciationWhereUniqueInput | AssetDepreciationWhereUniqueInput[]
    update?: AssetDepreciationUpdateWithWhereUniqueWithoutAssetInput | AssetDepreciationUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AssetDepreciationUpdateManyWithWhereWithoutAssetInput | AssetDepreciationUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AssetDepreciationScalarWhereInput | AssetDepreciationScalarWhereInput[]
  }

  export type AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AssetHistoryCreateWithoutAssetInput, AssetHistoryUncheckedCreateWithoutAssetInput> | AssetHistoryCreateWithoutAssetInput[] | AssetHistoryUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetHistoryCreateOrConnectWithoutAssetInput | AssetHistoryCreateOrConnectWithoutAssetInput[]
    upsert?: AssetHistoryUpsertWithWhereUniqueWithoutAssetInput | AssetHistoryUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AssetHistoryCreateManyAssetInputEnvelope
    set?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    disconnect?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    delete?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    connect?: AssetHistoryWhereUniqueInput | AssetHistoryWhereUniqueInput[]
    update?: AssetHistoryUpdateWithWhereUniqueWithoutAssetInput | AssetHistoryUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AssetHistoryUpdateManyWithWhereWithoutAssetInput | AssetHistoryUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AssetHistoryScalarWhereInput | AssetHistoryScalarWhereInput[]
  }

  export type DepreciationUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<DepreciationCreateWithoutAssetInput, DepreciationUncheckedCreateWithoutAssetInput> | DepreciationCreateWithoutAssetInput[] | DepreciationUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DepreciationCreateOrConnectWithoutAssetInput | DepreciationCreateOrConnectWithoutAssetInput[]
    upsert?: DepreciationUpsertWithWhereUniqueWithoutAssetInput | DepreciationUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: DepreciationCreateManyAssetInputEnvelope
    set?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    disconnect?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    delete?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    connect?: DepreciationWhereUniqueInput | DepreciationWhereUniqueInput[]
    update?: DepreciationUpdateWithWhereUniqueWithoutAssetInput | DepreciationUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: DepreciationUpdateManyWithWhereWithoutAssetInput | DepreciationUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: DepreciationScalarWhereInput | DepreciationScalarWhereInput[]
  }

  export type DisposalUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<DisposalCreateWithoutAssetInput, DisposalUncheckedCreateWithoutAssetInput> | DisposalCreateWithoutAssetInput[] | DisposalUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DisposalCreateOrConnectWithoutAssetInput | DisposalCreateOrConnectWithoutAssetInput[]
    upsert?: DisposalUpsertWithWhereUniqueWithoutAssetInput | DisposalUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: DisposalCreateManyAssetInputEnvelope
    set?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    disconnect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    delete?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    connect?: DisposalWhereUniqueInput | DisposalWhereUniqueInput[]
    update?: DisposalUpdateWithWhereUniqueWithoutAssetInput | DisposalUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: DisposalUpdateManyWithWhereWithoutAssetInput | DisposalUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: DisposalScalarWhereInput | DisposalScalarWhereInput[]
  }

  export type DocumentUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<DocumentCreateWithoutAssetInput, DocumentUncheckedCreateWithoutAssetInput> | DocumentCreateWithoutAssetInput[] | DocumentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: DocumentCreateOrConnectWithoutAssetInput | DocumentCreateOrConnectWithoutAssetInput[]
    upsert?: DocumentUpsertWithWhereUniqueWithoutAssetInput | DocumentUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: DocumentCreateManyAssetInputEnvelope
    set?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    disconnect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    delete?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    connect?: DocumentWhereUniqueInput | DocumentWhereUniqueInput[]
    update?: DocumentUpdateWithWhereUniqueWithoutAssetInput | DocumentUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: DocumentUpdateManyWithWhereWithoutAssetInput | DocumentUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
  }

  export type MaintenanceUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<MaintenanceCreateWithoutAssetInput, MaintenanceUncheckedCreateWithoutAssetInput> | MaintenanceCreateWithoutAssetInput[] | MaintenanceUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutAssetInput | MaintenanceCreateOrConnectWithoutAssetInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutAssetInput | MaintenanceUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: MaintenanceCreateManyAssetInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutAssetInput | MaintenanceUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutAssetInput | MaintenanceUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutAssetInput, MaintenanceScheduleUncheckedCreateWithoutAssetInput> | MaintenanceScheduleCreateWithoutAssetInput[] | MaintenanceScheduleUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutAssetInput | MaintenanceScheduleCreateOrConnectWithoutAssetInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutAssetInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: MaintenanceScheduleCreateManyAssetInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutAssetInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutAssetInput | MaintenanceScheduleUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type TransferUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<TransferCreateWithoutAssetInput, TransferUncheckedCreateWithoutAssetInput> | TransferCreateWithoutAssetInput[] | TransferUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: TransferCreateOrConnectWithoutAssetInput | TransferCreateOrConnectWithoutAssetInput[]
    upsert?: TransferUpsertWithWhereUniqueWithoutAssetInput | TransferUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: TransferCreateManyAssetInputEnvelope
    set?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    disconnect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    delete?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    connect?: TransferWhereUniqueInput | TransferWhereUniqueInput[]
    update?: TransferUpdateWithWhereUniqueWithoutAssetInput | TransferUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: TransferUpdateManyWithWhereWithoutAssetInput | TransferUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: TransferScalarWhereInput | TransferScalarWhereInput[]
  }

  export type LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput = {
    create?: XOR<LinkedAssetCreateWithoutToAssetInput, LinkedAssetUncheckedCreateWithoutToAssetInput> | LinkedAssetCreateWithoutToAssetInput[] | LinkedAssetUncheckedCreateWithoutToAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutToAssetInput | LinkedAssetCreateOrConnectWithoutToAssetInput[]
    upsert?: LinkedAssetUpsertWithWhereUniqueWithoutToAssetInput | LinkedAssetUpsertWithWhereUniqueWithoutToAssetInput[]
    createMany?: LinkedAssetCreateManyToAssetInputEnvelope
    set?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    disconnect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    delete?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    update?: LinkedAssetUpdateWithWhereUniqueWithoutToAssetInput | LinkedAssetUpdateWithWhereUniqueWithoutToAssetInput[]
    updateMany?: LinkedAssetUpdateManyWithWhereWithoutToAssetInput | LinkedAssetUpdateManyWithWhereWithoutToAssetInput[]
    deleteMany?: LinkedAssetScalarWhereInput | LinkedAssetScalarWhereInput[]
  }

  export type LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput = {
    create?: XOR<LinkedAssetCreateWithoutFromAssetInput, LinkedAssetUncheckedCreateWithoutFromAssetInput> | LinkedAssetCreateWithoutFromAssetInput[] | LinkedAssetUncheckedCreateWithoutFromAssetInput[]
    connectOrCreate?: LinkedAssetCreateOrConnectWithoutFromAssetInput | LinkedAssetCreateOrConnectWithoutFromAssetInput[]
    upsert?: LinkedAssetUpsertWithWhereUniqueWithoutFromAssetInput | LinkedAssetUpsertWithWhereUniqueWithoutFromAssetInput[]
    createMany?: LinkedAssetCreateManyFromAssetInputEnvelope
    set?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    disconnect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    delete?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    connect?: LinkedAssetWhereUniqueInput | LinkedAssetWhereUniqueInput[]
    update?: LinkedAssetUpdateWithWhereUniqueWithoutFromAssetInput | LinkedAssetUpdateWithWhereUniqueWithoutFromAssetInput[]
    updateMany?: LinkedAssetUpdateManyWithWhereWithoutFromAssetInput | LinkedAssetUpdateManyWithWhereWithoutFromAssetInput[]
    deleteMany?: LinkedAssetScalarWhereInput | LinkedAssetScalarWhereInput[]
  }

  export type CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<CapitalImprovementCreateWithoutAssetInput, CapitalImprovementUncheckedCreateWithoutAssetInput> | CapitalImprovementCreateWithoutAssetInput[] | CapitalImprovementUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: CapitalImprovementCreateOrConnectWithoutAssetInput | CapitalImprovementCreateOrConnectWithoutAssetInput[]
    upsert?: CapitalImprovementUpsertWithWhereUniqueWithoutAssetInput | CapitalImprovementUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: CapitalImprovementCreateManyAssetInputEnvelope
    set?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    disconnect?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    delete?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    connect?: CapitalImprovementWhereUniqueInput | CapitalImprovementWhereUniqueInput[]
    update?: CapitalImprovementUpdateWithWhereUniqueWithoutAssetInput | CapitalImprovementUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: CapitalImprovementUpdateManyWithWhereWithoutAssetInput | CapitalImprovementUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: CapitalImprovementScalarWhereInput | CapitalImprovementScalarWhereInput[]
  }

  export type AssetAuditUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AssetAuditCreateWithoutAssetInput, AssetAuditUncheckedCreateWithoutAssetInput> | AssetAuditCreateWithoutAssetInput[] | AssetAuditUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssetInput | AssetAuditCreateOrConnectWithoutAssetInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutAssetInput | AssetAuditUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AssetAuditCreateManyAssetInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutAssetInput | AssetAuditUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutAssetInput | AssetAuditUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAssetInput, AuditAssignmentUncheckedCreateWithoutAssetInput> | AuditAssignmentCreateWithoutAssetInput[] | AuditAssignmentUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAssetInput | AuditAssignmentCreateOrConnectWithoutAssetInput[]
    upsert?: AuditAssignmentUpsertWithWhereUniqueWithoutAssetInput | AuditAssignmentUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AuditAssignmentCreateManyAssetInputEnvelope
    set?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    disconnect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    delete?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    connect?: AuditAssignmentWhereUniqueInput | AuditAssignmentWhereUniqueInput[]
    update?: AuditAssignmentUpdateWithWhereUniqueWithoutAssetInput | AuditAssignmentUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AuditAssignmentUpdateManyWithWhereWithoutAssetInput | AuditAssignmentUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
  }

  export type AuditRequestUncheckedUpdateManyWithoutAssetNestedInput = {
    create?: XOR<AuditRequestCreateWithoutAssetInput, AuditRequestUncheckedCreateWithoutAssetInput> | AuditRequestCreateWithoutAssetInput[] | AuditRequestUncheckedCreateWithoutAssetInput[]
    connectOrCreate?: AuditRequestCreateOrConnectWithoutAssetInput | AuditRequestCreateOrConnectWithoutAssetInput[]
    upsert?: AuditRequestUpsertWithWhereUniqueWithoutAssetInput | AuditRequestUpsertWithWhereUniqueWithoutAssetInput[]
    createMany?: AuditRequestCreateManyAssetInputEnvelope
    set?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    disconnect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    delete?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    connect?: AuditRequestWhereUniqueInput | AuditRequestWhereUniqueInput[]
    update?: AuditRequestUpdateWithWhereUniqueWithoutAssetInput | AuditRequestUpdateWithWhereUniqueWithoutAssetInput[]
    updateMany?: AuditRequestUpdateManyWithWhereWithoutAssetInput | AuditRequestUpdateManyWithWhereWithoutAssetInput[]
    deleteMany?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
  }

  export type AssetCreateNestedOneWithoutTransferRequestsInput = {
    create?: XOR<AssetCreateWithoutTransferRequestsInput, AssetUncheckedCreateWithoutTransferRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutTransferRequestsInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTransferRequestsInput = {
    create?: XOR<UserCreateWithoutTransferRequestsInput, UserUncheckedCreateWithoutTransferRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransferRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutManagedTransfersInput = {
    create?: XOR<UserCreateWithoutManagedTransfersInput, UserUncheckedCreateWithoutManagedTransfersInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedTransfersInput
    connect?: UserWhereUniqueInput
  }

  export type EnumTransferStatusFieldUpdateOperationsInput = {
    set?: $Enums.TransferStatus
  }

  export type AssetUpdateOneRequiredWithoutTransferRequestsNestedInput = {
    create?: XOR<AssetCreateWithoutTransferRequestsInput, AssetUncheckedCreateWithoutTransferRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutTransferRequestsInput
    upsert?: AssetUpsertWithoutTransferRequestsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutTransferRequestsInput, AssetUpdateWithoutTransferRequestsInput>, AssetUncheckedUpdateWithoutTransferRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutTransferRequestsNestedInput = {
    create?: XOR<UserCreateWithoutTransferRequestsInput, UserUncheckedCreateWithoutTransferRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTransferRequestsInput
    upsert?: UserUpsertWithoutTransferRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTransferRequestsInput, UserUpdateWithoutTransferRequestsInput>, UserUncheckedUpdateWithoutTransferRequestsInput>
  }

  export type UserUpdateOneWithoutManagedTransfersNestedInput = {
    create?: XOR<UserCreateWithoutManagedTransfersInput, UserUncheckedCreateWithoutManagedTransfersInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedTransfersInput
    upsert?: UserUpsertWithoutManagedTransfersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManagedTransfersInput, UserUpdateWithoutManagedTransfersInput>, UserUncheckedUpdateWithoutManagedTransfersInput>
  }

  export type AssetCreateNestedOneWithoutMaintenanceRequestsInput = {
    create?: XOR<AssetCreateWithoutMaintenanceRequestsInput, AssetUncheckedCreateWithoutMaintenanceRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutMaintenanceRequestsInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMaintenanceRequestsInput = {
    create?: XOR<UserCreateWithoutMaintenanceRequestsInput, UserUncheckedCreateWithoutMaintenanceRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMaintenanceRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutManagedMaintenanceInput = {
    create?: XOR<UserCreateWithoutManagedMaintenanceInput, UserUncheckedCreateWithoutManagedMaintenanceInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedMaintenanceInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAssignedMaintenanceInput = {
    create?: XOR<UserCreateWithoutAssignedMaintenanceInput, UserUncheckedCreateWithoutAssignedMaintenanceInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedMaintenanceInput
    connect?: UserWhereUniqueInput
  }

  export type MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutMaintenanceTasksInput, MaintenanceScheduleUncheckedCreateWithoutMaintenanceTasksInput>
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutMaintenanceTasksInput
    connect?: MaintenanceScheduleWhereUniqueInput
  }

  export type MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutMaintenanceTasksInput, MaintenanceTemplateUncheckedCreateWithoutMaintenanceTasksInput>
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutMaintenanceTasksInput
    connect?: MaintenanceTemplateWhereUniqueInput
  }

  export type EnumMaintenancePriorityFieldUpdateOperationsInput = {
    set?: $Enums.MaintenancePriority
  }

  export type EnumMaintenanceStatusFieldUpdateOperationsInput = {
    set?: $Enums.MaintenanceStatus
  }

  export type EnumMaintenanceTypeFieldUpdateOperationsInput = {
    set?: $Enums.MaintenanceType
  }

  export type AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput = {
    create?: XOR<AssetCreateWithoutMaintenanceRequestsInput, AssetUncheckedCreateWithoutMaintenanceRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutMaintenanceRequestsInput
    upsert?: AssetUpsertWithoutMaintenanceRequestsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutMaintenanceRequestsInput, AssetUpdateWithoutMaintenanceRequestsInput>, AssetUncheckedUpdateWithoutMaintenanceRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput = {
    create?: XOR<UserCreateWithoutMaintenanceRequestsInput, UserUncheckedCreateWithoutMaintenanceRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutMaintenanceRequestsInput
    upsert?: UserUpsertWithoutMaintenanceRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMaintenanceRequestsInput, UserUpdateWithoutMaintenanceRequestsInput>, UserUncheckedUpdateWithoutMaintenanceRequestsInput>
  }

  export type UserUpdateOneWithoutManagedMaintenanceNestedInput = {
    create?: XOR<UserCreateWithoutManagedMaintenanceInput, UserUncheckedCreateWithoutManagedMaintenanceInput>
    connectOrCreate?: UserCreateOrConnectWithoutManagedMaintenanceInput
    upsert?: UserUpsertWithoutManagedMaintenanceInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutManagedMaintenanceInput, UserUpdateWithoutManagedMaintenanceInput>, UserUncheckedUpdateWithoutManagedMaintenanceInput>
  }

  export type UserUpdateOneWithoutAssignedMaintenanceNestedInput = {
    create?: XOR<UserCreateWithoutAssignedMaintenanceInput, UserUncheckedCreateWithoutAssignedMaintenanceInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedMaintenanceInput
    upsert?: UserUpsertWithoutAssignedMaintenanceInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignedMaintenanceInput, UserUpdateWithoutAssignedMaintenanceInput>, UserUncheckedUpdateWithoutAssignedMaintenanceInput>
  }

  export type MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutMaintenanceTasksInput, MaintenanceScheduleUncheckedCreateWithoutMaintenanceTasksInput>
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutMaintenanceTasksInput
    upsert?: MaintenanceScheduleUpsertWithoutMaintenanceTasksInput
    disconnect?: MaintenanceScheduleWhereInput | boolean
    delete?: MaintenanceScheduleWhereInput | boolean
    connect?: MaintenanceScheduleWhereUniqueInput
    update?: XOR<XOR<MaintenanceScheduleUpdateToOneWithWhereWithoutMaintenanceTasksInput, MaintenanceScheduleUpdateWithoutMaintenanceTasksInput>, MaintenanceScheduleUncheckedUpdateWithoutMaintenanceTasksInput>
  }

  export type MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutMaintenanceTasksInput, MaintenanceTemplateUncheckedCreateWithoutMaintenanceTasksInput>
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutMaintenanceTasksInput
    upsert?: MaintenanceTemplateUpsertWithoutMaintenanceTasksInput
    disconnect?: MaintenanceTemplateWhereInput | boolean
    delete?: MaintenanceTemplateWhereInput | boolean
    connect?: MaintenanceTemplateWhereUniqueInput
    update?: XOR<XOR<MaintenanceTemplateUpdateToOneWithWhereWithoutMaintenanceTasksInput, MaintenanceTemplateUpdateWithoutMaintenanceTasksInput>, MaintenanceTemplateUncheckedUpdateWithoutMaintenanceTasksInput>
  }

  export type AssetCreateNestedOneWithoutDisposalRequestsInput = {
    create?: XOR<AssetCreateWithoutDisposalRequestsInput, AssetUncheckedCreateWithoutDisposalRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutDisposalRequestsInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDisposalRequestsInput = {
    create?: XOR<UserCreateWithoutDisposalRequestsInput, UserUncheckedCreateWithoutDisposalRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDisposalRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumDisposalMethodFieldUpdateOperationsInput = {
    set?: $Enums.DisposalMethod
  }

  export type EnumDisposalStatusFieldUpdateOperationsInput = {
    set?: $Enums.DisposalStatus
  }

  export type AssetUpdateOneRequiredWithoutDisposalRequestsNestedInput = {
    create?: XOR<AssetCreateWithoutDisposalRequestsInput, AssetUncheckedCreateWithoutDisposalRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutDisposalRequestsInput
    upsert?: AssetUpsertWithoutDisposalRequestsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutDisposalRequestsInput, AssetUpdateWithoutDisposalRequestsInput>, AssetUncheckedUpdateWithoutDisposalRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutDisposalRequestsNestedInput = {
    create?: XOR<UserCreateWithoutDisposalRequestsInput, UserUncheckedCreateWithoutDisposalRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDisposalRequestsInput
    upsert?: UserUpsertWithoutDisposalRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDisposalRequestsInput, UserUpdateWithoutDisposalRequestsInput>, UserUncheckedUpdateWithoutDisposalRequestsInput>
  }

  export type AssetCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<AssetCreateWithoutDocumentsInput, AssetUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutDocumentsInput
    connect?: AssetWhereUniqueInput
  }

  export type EnumDocumentTypeFieldUpdateOperationsInput = {
    set?: $Enums.DocumentType
  }

  export type AssetUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<AssetCreateWithoutDocumentsInput, AssetUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutDocumentsInput
    upsert?: AssetUpsertWithoutDocumentsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutDocumentsInput, AssetUpdateWithoutDocumentsInput>, AssetUncheckedUpdateWithoutDocumentsInput>
  }

  export type AssetCreateNestedOneWithoutDepreciationsInput = {
    create?: XOR<AssetCreateWithoutDepreciationsInput, AssetUncheckedCreateWithoutDepreciationsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutDepreciationsInput
    connect?: AssetWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AssetUpdateOneRequiredWithoutDepreciationsNestedInput = {
    create?: XOR<AssetCreateWithoutDepreciationsInput, AssetUncheckedCreateWithoutDepreciationsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutDepreciationsInput
    upsert?: AssetUpsertWithoutDepreciationsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutDepreciationsInput, AssetUpdateWithoutDepreciationsInput>, AssetUncheckedUpdateWithoutDepreciationsInput>
  }

  export type AssetCreateNestedOneWithoutAssetDepreciationsInput = {
    create?: XOR<AssetCreateWithoutAssetDepreciationsInput, AssetUncheckedCreateWithoutAssetDepreciationsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAssetDepreciationsInput
    connect?: AssetWhereUniqueInput
  }

  export type AssetUpdateOneRequiredWithoutAssetDepreciationsNestedInput = {
    create?: XOR<AssetCreateWithoutAssetDepreciationsInput, AssetUncheckedCreateWithoutAssetDepreciationsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAssetDepreciationsInput
    upsert?: AssetUpsertWithoutAssetDepreciationsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutAssetDepreciationsInput, AssetUpdateWithoutAssetDepreciationsInput>, AssetUncheckedUpdateWithoutAssetDepreciationsInput>
  }

  export type AssetCreateNestedOneWithoutHistoryInput = {
    create?: XOR<AssetCreateWithoutHistoryInput, AssetUncheckedCreateWithoutHistoryInput>
    connectOrCreate?: AssetCreateOrConnectWithoutHistoryInput
    connect?: AssetWhereUniqueInput
  }

  export type AssetUpdateOneRequiredWithoutHistoryNestedInput = {
    create?: XOR<AssetCreateWithoutHistoryInput, AssetUncheckedCreateWithoutHistoryInput>
    connectOrCreate?: AssetCreateOrConnectWithoutHistoryInput
    upsert?: AssetUpsertWithoutHistoryInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutHistoryInput, AssetUpdateWithoutHistoryInput>, AssetUncheckedUpdateWithoutHistoryInput>
  }

  export type AssetCreateNestedOneWithoutLinkedFromInput = {
    create?: XOR<AssetCreateWithoutLinkedFromInput, AssetUncheckedCreateWithoutLinkedFromInput>
    connectOrCreate?: AssetCreateOrConnectWithoutLinkedFromInput
    connect?: AssetWhereUniqueInput
  }

  export type AssetCreateNestedOneWithoutLinkedToInput = {
    create?: XOR<AssetCreateWithoutLinkedToInput, AssetUncheckedCreateWithoutLinkedToInput>
    connectOrCreate?: AssetCreateOrConnectWithoutLinkedToInput
    connect?: AssetWhereUniqueInput
  }

  export type AssetUpdateOneRequiredWithoutLinkedFromNestedInput = {
    create?: XOR<AssetCreateWithoutLinkedFromInput, AssetUncheckedCreateWithoutLinkedFromInput>
    connectOrCreate?: AssetCreateOrConnectWithoutLinkedFromInput
    upsert?: AssetUpsertWithoutLinkedFromInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutLinkedFromInput, AssetUpdateWithoutLinkedFromInput>, AssetUncheckedUpdateWithoutLinkedFromInput>
  }

  export type AssetUpdateOneRequiredWithoutLinkedToNestedInput = {
    create?: XOR<AssetCreateWithoutLinkedToInput, AssetUncheckedCreateWithoutLinkedToInput>
    connectOrCreate?: AssetCreateOrConnectWithoutLinkedToInput
    upsert?: AssetUpsertWithoutLinkedToInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutLinkedToInput, AssetUpdateWithoutLinkedToInput>, AssetUncheckedUpdateWithoutLinkedToInput>
  }

  export type UserPermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<UserPermissionCreateWithoutPermissionInput, UserPermissionUncheckedCreateWithoutPermissionInput> | UserPermissionCreateWithoutPermissionInput[] | UserPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutPermissionInput | UserPermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: UserPermissionCreateManyPermissionInputEnvelope
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
  }

  export type RolePermissionCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type UserPermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<UserPermissionCreateWithoutPermissionInput, UserPermissionUncheckedCreateWithoutPermissionInput> | UserPermissionCreateWithoutPermissionInput[] | UserPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutPermissionInput | UserPermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: UserPermissionCreateManyPermissionInputEnvelope
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
  }

  export type RolePermissionUncheckedCreateNestedManyWithoutPermissionInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
  }

  export type UserPermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<UserPermissionCreateWithoutPermissionInput, UserPermissionUncheckedCreateWithoutPermissionInput> | UserPermissionCreateWithoutPermissionInput[] | UserPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutPermissionInput | UserPermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: UserPermissionUpsertWithWhereUniqueWithoutPermissionInput | UserPermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: UserPermissionCreateManyPermissionInputEnvelope
    set?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    disconnect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    delete?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    update?: UserPermissionUpdateWithWhereUniqueWithoutPermissionInput | UserPermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: UserPermissionUpdateManyWithWhereWithoutPermissionInput | UserPermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: UserPermissionScalarWhereInput | UserPermissionScalarWhereInput[]
  }

  export type RolePermissionUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutPermissionInput | RolePermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutPermissionInput | RolePermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutPermissionInput | RolePermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type UserPermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<UserPermissionCreateWithoutPermissionInput, UserPermissionUncheckedCreateWithoutPermissionInput> | UserPermissionCreateWithoutPermissionInput[] | UserPermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: UserPermissionCreateOrConnectWithoutPermissionInput | UserPermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: UserPermissionUpsertWithWhereUniqueWithoutPermissionInput | UserPermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: UserPermissionCreateManyPermissionInputEnvelope
    set?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    disconnect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    delete?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    connect?: UserPermissionWhereUniqueInput | UserPermissionWhereUniqueInput[]
    update?: UserPermissionUpdateWithWhereUniqueWithoutPermissionInput | UserPermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: UserPermissionUpdateManyWithWhereWithoutPermissionInput | UserPermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: UserPermissionScalarWhereInput | UserPermissionScalarWhereInput[]
  }

  export type RolePermissionUncheckedUpdateManyWithoutPermissionNestedInput = {
    create?: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput> | RolePermissionCreateWithoutPermissionInput[] | RolePermissionUncheckedCreateWithoutPermissionInput[]
    connectOrCreate?: RolePermissionCreateOrConnectWithoutPermissionInput | RolePermissionCreateOrConnectWithoutPermissionInput[]
    upsert?: RolePermissionUpsertWithWhereUniqueWithoutPermissionInput | RolePermissionUpsertWithWhereUniqueWithoutPermissionInput[]
    createMany?: RolePermissionCreateManyPermissionInputEnvelope
    set?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    disconnect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    delete?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    connect?: RolePermissionWhereUniqueInput | RolePermissionWhereUniqueInput[]
    update?: RolePermissionUpdateWithWhereUniqueWithoutPermissionInput | RolePermissionUpdateWithWhereUniqueWithoutPermissionInput[]
    updateMany?: RolePermissionUpdateManyWithWhereWithoutPermissionInput | RolePermissionUpdateManyWithWhereWithoutPermissionInput[]
    deleteMany?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserPermissionsInput = {
    create?: XOR<UserCreateWithoutUserPermissionsInput, UserUncheckedCreateWithoutUserPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserPermissionsInput
    connect?: UserWhereUniqueInput
  }

  export type PermissionCreateNestedOneWithoutUserPermissionsInput = {
    create?: XOR<PermissionCreateWithoutUserPermissionsInput, PermissionUncheckedCreateWithoutUserPermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutUserPermissionsInput
    connect?: PermissionWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserPermissionsNestedInput = {
    create?: XOR<UserCreateWithoutUserPermissionsInput, UserUncheckedCreateWithoutUserPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserPermissionsInput
    upsert?: UserUpsertWithoutUserPermissionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserPermissionsInput, UserUpdateWithoutUserPermissionsInput>, UserUncheckedUpdateWithoutUserPermissionsInput>
  }

  export type PermissionUpdateOneRequiredWithoutUserPermissionsNestedInput = {
    create?: XOR<PermissionCreateWithoutUserPermissionsInput, PermissionUncheckedCreateWithoutUserPermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutUserPermissionsInput
    upsert?: PermissionUpsertWithoutUserPermissionsInput
    connect?: PermissionWhereUniqueInput
    update?: XOR<XOR<PermissionUpdateToOneWithWhereWithoutUserPermissionsInput, PermissionUpdateWithoutUserPermissionsInput>, PermissionUncheckedUpdateWithoutUserPermissionsInput>
  }

  export type PermissionCreateNestedOneWithoutRolePermissionsInput = {
    create?: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutRolePermissionsInput
    connect?: PermissionWhereUniqueInput
  }

  export type PermissionUpdateOneRequiredWithoutRolePermissionsNestedInput = {
    create?: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
    connectOrCreate?: PermissionCreateOrConnectWithoutRolePermissionsInput
    upsert?: PermissionUpsertWithoutRolePermissionsInput
    connect?: PermissionWhereUniqueInput
    update?: XOR<XOR<PermissionUpdateToOneWithWhereWithoutRolePermissionsInput, PermissionUpdateWithoutRolePermissionsInput>, PermissionUncheckedUpdateWithoutRolePermissionsInput>
  }

  export type AssetCreateNestedOneWithoutCapitalImprovementsInput = {
    create?: XOR<AssetCreateWithoutCapitalImprovementsInput, AssetUncheckedCreateWithoutCapitalImprovementsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutCapitalImprovementsInput
    connect?: AssetWhereUniqueInput
  }

  export type AssetUpdateOneRequiredWithoutCapitalImprovementsNestedInput = {
    create?: XOR<AssetCreateWithoutCapitalImprovementsInput, AssetUncheckedCreateWithoutCapitalImprovementsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutCapitalImprovementsInput
    upsert?: AssetUpsertWithoutCapitalImprovementsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutCapitalImprovementsInput, AssetUpdateWithoutCapitalImprovementsInput>, AssetUncheckedUpdateWithoutCapitalImprovementsInput>
  }

  export type AssetCreateNestedOneWithoutMaintenanceSchedulesInput = {
    create?: XOR<AssetCreateWithoutMaintenanceSchedulesInput, AssetUncheckedCreateWithoutMaintenanceSchedulesInput>
    connectOrCreate?: AssetCreateOrConnectWithoutMaintenanceSchedulesInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedSchedulesInput = {
    create?: XOR<UserCreateWithoutCreatedSchedulesInput, UserUncheckedCreateWithoutCreatedSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedSchedulesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAssignedSchedulesInput = {
    create?: XOR<UserCreateWithoutAssignedSchedulesInput, UserUncheckedCreateWithoutAssignedSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedSchedulesInput
    connect?: UserWhereUniqueInput
  }

  export type MaintenanceTemplateCreateNestedOneWithoutSchedulesInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutSchedulesInput, MaintenanceTemplateUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutSchedulesInput
    connect?: MaintenanceTemplateWhereUniqueInput
  }

  export type MaintenanceCreateNestedManyWithoutScheduleInput = {
    create?: XOR<MaintenanceCreateWithoutScheduleInput, MaintenanceUncheckedCreateWithoutScheduleInput> | MaintenanceCreateWithoutScheduleInput[] | MaintenanceUncheckedCreateWithoutScheduleInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutScheduleInput | MaintenanceCreateOrConnectWithoutScheduleInput[]
    createMany?: MaintenanceCreateManyScheduleInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceUncheckedCreateNestedManyWithoutScheduleInput = {
    create?: XOR<MaintenanceCreateWithoutScheduleInput, MaintenanceUncheckedCreateWithoutScheduleInput> | MaintenanceCreateWithoutScheduleInput[] | MaintenanceUncheckedCreateWithoutScheduleInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutScheduleInput | MaintenanceCreateOrConnectWithoutScheduleInput[]
    createMany?: MaintenanceCreateManyScheduleInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type EnumScheduleFrequencyFieldUpdateOperationsInput = {
    set?: $Enums.ScheduleFrequency
  }

  export type EnumScheduleStatusFieldUpdateOperationsInput = {
    set?: $Enums.ScheduleStatus
  }

  export type AssetUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput = {
    create?: XOR<AssetCreateWithoutMaintenanceSchedulesInput, AssetUncheckedCreateWithoutMaintenanceSchedulesInput>
    connectOrCreate?: AssetCreateOrConnectWithoutMaintenanceSchedulesInput
    upsert?: AssetUpsertWithoutMaintenanceSchedulesInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutMaintenanceSchedulesInput, AssetUpdateWithoutMaintenanceSchedulesInput>, AssetUncheckedUpdateWithoutMaintenanceSchedulesInput>
  }

  export type UserUpdateOneRequiredWithoutCreatedSchedulesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedSchedulesInput, UserUncheckedCreateWithoutCreatedSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedSchedulesInput
    upsert?: UserUpsertWithoutCreatedSchedulesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedSchedulesInput, UserUpdateWithoutCreatedSchedulesInput>, UserUncheckedUpdateWithoutCreatedSchedulesInput>
  }

  export type UserUpdateOneWithoutAssignedSchedulesNestedInput = {
    create?: XOR<UserCreateWithoutAssignedSchedulesInput, UserUncheckedCreateWithoutAssignedSchedulesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAssignedSchedulesInput
    upsert?: UserUpsertWithoutAssignedSchedulesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAssignedSchedulesInput, UserUpdateWithoutAssignedSchedulesInput>, UserUncheckedUpdateWithoutAssignedSchedulesInput>
  }

  export type MaintenanceTemplateUpdateOneWithoutSchedulesNestedInput = {
    create?: XOR<MaintenanceTemplateCreateWithoutSchedulesInput, MaintenanceTemplateUncheckedCreateWithoutSchedulesInput>
    connectOrCreate?: MaintenanceTemplateCreateOrConnectWithoutSchedulesInput
    upsert?: MaintenanceTemplateUpsertWithoutSchedulesInput
    disconnect?: MaintenanceTemplateWhereInput | boolean
    delete?: MaintenanceTemplateWhereInput | boolean
    connect?: MaintenanceTemplateWhereUniqueInput
    update?: XOR<XOR<MaintenanceTemplateUpdateToOneWithWhereWithoutSchedulesInput, MaintenanceTemplateUpdateWithoutSchedulesInput>, MaintenanceTemplateUncheckedUpdateWithoutSchedulesInput>
  }

  export type MaintenanceUpdateManyWithoutScheduleNestedInput = {
    create?: XOR<MaintenanceCreateWithoutScheduleInput, MaintenanceUncheckedCreateWithoutScheduleInput> | MaintenanceCreateWithoutScheduleInput[] | MaintenanceUncheckedCreateWithoutScheduleInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutScheduleInput | MaintenanceCreateOrConnectWithoutScheduleInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutScheduleInput | MaintenanceUpsertWithWhereUniqueWithoutScheduleInput[]
    createMany?: MaintenanceCreateManyScheduleInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutScheduleInput | MaintenanceUpdateWithWhereUniqueWithoutScheduleInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutScheduleInput | MaintenanceUpdateManyWithWhereWithoutScheduleInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceUncheckedUpdateManyWithoutScheduleNestedInput = {
    create?: XOR<MaintenanceCreateWithoutScheduleInput, MaintenanceUncheckedCreateWithoutScheduleInput> | MaintenanceCreateWithoutScheduleInput[] | MaintenanceUncheckedCreateWithoutScheduleInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutScheduleInput | MaintenanceCreateOrConnectWithoutScheduleInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutScheduleInput | MaintenanceUpsertWithWhereUniqueWithoutScheduleInput[]
    createMany?: MaintenanceCreateManyScheduleInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutScheduleInput | MaintenanceUpdateWithWhereUniqueWithoutScheduleInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutScheduleInput | MaintenanceUpdateManyWithWhereWithoutScheduleInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCreatedTemplatesInput = {
    create?: XOR<UserCreateWithoutCreatedTemplatesInput, UserUncheckedCreateWithoutCreatedTemplatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedTemplatesInput
    connect?: UserWhereUniqueInput
  }

  export type MaintenanceScheduleCreateNestedManyWithoutTemplateInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutTemplateInput, MaintenanceScheduleUncheckedCreateWithoutTemplateInput> | MaintenanceScheduleCreateWithoutTemplateInput[] | MaintenanceScheduleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutTemplateInput | MaintenanceScheduleCreateOrConnectWithoutTemplateInput[]
    createMany?: MaintenanceScheduleCreateManyTemplateInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type MaintenanceCreateNestedManyWithoutTemplateInput = {
    create?: XOR<MaintenanceCreateWithoutTemplateInput, MaintenanceUncheckedCreateWithoutTemplateInput> | MaintenanceCreateWithoutTemplateInput[] | MaintenanceUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutTemplateInput | MaintenanceCreateOrConnectWithoutTemplateInput[]
    createMany?: MaintenanceCreateManyTemplateInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type MaintenanceScheduleUncheckedCreateNestedManyWithoutTemplateInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutTemplateInput, MaintenanceScheduleUncheckedCreateWithoutTemplateInput> | MaintenanceScheduleCreateWithoutTemplateInput[] | MaintenanceScheduleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutTemplateInput | MaintenanceScheduleCreateOrConnectWithoutTemplateInput[]
    createMany?: MaintenanceScheduleCreateManyTemplateInputEnvelope
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
  }

  export type MaintenanceUncheckedCreateNestedManyWithoutTemplateInput = {
    create?: XOR<MaintenanceCreateWithoutTemplateInput, MaintenanceUncheckedCreateWithoutTemplateInput> | MaintenanceCreateWithoutTemplateInput[] | MaintenanceUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutTemplateInput | MaintenanceCreateOrConnectWithoutTemplateInput[]
    createMany?: MaintenanceCreateManyTemplateInputEnvelope
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutCreatedTemplatesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedTemplatesInput, UserUncheckedCreateWithoutCreatedTemplatesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedTemplatesInput
    upsert?: UserUpsertWithoutCreatedTemplatesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedTemplatesInput, UserUpdateWithoutCreatedTemplatesInput>, UserUncheckedUpdateWithoutCreatedTemplatesInput>
  }

  export type MaintenanceScheduleUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutTemplateInput, MaintenanceScheduleUncheckedCreateWithoutTemplateInput> | MaintenanceScheduleCreateWithoutTemplateInput[] | MaintenanceScheduleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutTemplateInput | MaintenanceScheduleCreateOrConnectWithoutTemplateInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutTemplateInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: MaintenanceScheduleCreateManyTemplateInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutTemplateInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutTemplateInput | MaintenanceScheduleUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type MaintenanceUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<MaintenanceCreateWithoutTemplateInput, MaintenanceUncheckedCreateWithoutTemplateInput> | MaintenanceCreateWithoutTemplateInput[] | MaintenanceUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutTemplateInput | MaintenanceCreateOrConnectWithoutTemplateInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutTemplateInput | MaintenanceUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: MaintenanceCreateManyTemplateInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutTemplateInput | MaintenanceUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutTemplateInput | MaintenanceUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<MaintenanceScheduleCreateWithoutTemplateInput, MaintenanceScheduleUncheckedCreateWithoutTemplateInput> | MaintenanceScheduleCreateWithoutTemplateInput[] | MaintenanceScheduleUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceScheduleCreateOrConnectWithoutTemplateInput | MaintenanceScheduleCreateOrConnectWithoutTemplateInput[]
    upsert?: MaintenanceScheduleUpsertWithWhereUniqueWithoutTemplateInput | MaintenanceScheduleUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: MaintenanceScheduleCreateManyTemplateInputEnvelope
    set?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    disconnect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    delete?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    connect?: MaintenanceScheduleWhereUniqueInput | MaintenanceScheduleWhereUniqueInput[]
    update?: MaintenanceScheduleUpdateWithWhereUniqueWithoutTemplateInput | MaintenanceScheduleUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: MaintenanceScheduleUpdateManyWithWhereWithoutTemplateInput | MaintenanceScheduleUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
  }

  export type MaintenanceUncheckedUpdateManyWithoutTemplateNestedInput = {
    create?: XOR<MaintenanceCreateWithoutTemplateInput, MaintenanceUncheckedCreateWithoutTemplateInput> | MaintenanceCreateWithoutTemplateInput[] | MaintenanceUncheckedCreateWithoutTemplateInput[]
    connectOrCreate?: MaintenanceCreateOrConnectWithoutTemplateInput | MaintenanceCreateOrConnectWithoutTemplateInput[]
    upsert?: MaintenanceUpsertWithWhereUniqueWithoutTemplateInput | MaintenanceUpsertWithWhereUniqueWithoutTemplateInput[]
    createMany?: MaintenanceCreateManyTemplateInputEnvelope
    set?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    disconnect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    delete?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    connect?: MaintenanceWhereUniqueInput | MaintenanceWhereUniqueInput[]
    update?: MaintenanceUpdateWithWhereUniqueWithoutTemplateInput | MaintenanceUpdateWithWhereUniqueWithoutTemplateInput[]
    updateMany?: MaintenanceUpdateManyWithWhereWithoutTemplateInput | MaintenanceUpdateManyWithWhereWithoutTemplateInput[]
    deleteMany?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
  }

  export type AssetCreateNestedOneWithoutAuditsInput = {
    create?: XOR<AssetCreateWithoutAuditsInput, AssetUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAuditsInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuditsPerformedInput = {
    create?: XOR<UserCreateWithoutAuditsPerformedInput, UserUncheckedCreateWithoutAuditsPerformedInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditsPerformedInput
    connect?: UserWhereUniqueInput
  }

  export type AuditAssignmentCreateNestedOneWithoutAuditsInput = {
    create?: XOR<AuditAssignmentCreateWithoutAuditsInput, AuditAssignmentUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAuditsInput
    connect?: AuditAssignmentWhereUniqueInput
  }

  export type AuditRequestCreateNestedOneWithoutAuditsInput = {
    create?: XOR<AuditRequestCreateWithoutAuditsInput, AuditRequestUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: AuditRequestCreateOrConnectWithoutAuditsInput
    connect?: AuditRequestWhereUniqueInput
  }

  export type EnumAuditStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuditStatus
  }

  export type EnumAuditWorkflowStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuditWorkflowStatus
  }

  export type NullableEnumAuditConditionFieldUpdateOperationsInput = {
    set?: $Enums.AuditCondition | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type AssetUpdateOneRequiredWithoutAuditsNestedInput = {
    create?: XOR<AssetCreateWithoutAuditsInput, AssetUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAuditsInput
    upsert?: AssetUpsertWithoutAuditsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutAuditsInput, AssetUpdateWithoutAuditsInput>, AssetUncheckedUpdateWithoutAuditsInput>
  }

  export type UserUpdateOneWithoutAuditsPerformedNestedInput = {
    create?: XOR<UserCreateWithoutAuditsPerformedInput, UserUncheckedCreateWithoutAuditsPerformedInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditsPerformedInput
    upsert?: UserUpsertWithoutAuditsPerformedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditsPerformedInput, UserUpdateWithoutAuditsPerformedInput>, UserUncheckedUpdateWithoutAuditsPerformedInput>
  }

  export type AuditAssignmentUpdateOneWithoutAuditsNestedInput = {
    create?: XOR<AuditAssignmentCreateWithoutAuditsInput, AuditAssignmentUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: AuditAssignmentCreateOrConnectWithoutAuditsInput
    upsert?: AuditAssignmentUpsertWithoutAuditsInput
    disconnect?: AuditAssignmentWhereInput | boolean
    delete?: AuditAssignmentWhereInput | boolean
    connect?: AuditAssignmentWhereUniqueInput
    update?: XOR<XOR<AuditAssignmentUpdateToOneWithWhereWithoutAuditsInput, AuditAssignmentUpdateWithoutAuditsInput>, AuditAssignmentUncheckedUpdateWithoutAuditsInput>
  }

  export type AuditRequestUpdateOneWithoutAuditsNestedInput = {
    create?: XOR<AuditRequestCreateWithoutAuditsInput, AuditRequestUncheckedCreateWithoutAuditsInput>
    connectOrCreate?: AuditRequestCreateOrConnectWithoutAuditsInput
    upsert?: AuditRequestUpsertWithoutAuditsInput
    disconnect?: AuditRequestWhereInput | boolean
    delete?: AuditRequestWhereInput | boolean
    connect?: AuditRequestWhereUniqueInput
    update?: XOR<XOR<AuditRequestUpdateToOneWithWhereWithoutAuditsInput, AuditRequestUpdateWithoutAuditsInput>, AuditRequestUncheckedUpdateWithoutAuditsInput>
  }

  export type AssetCreateNestedOneWithoutAuditAssignmentsInput = {
    create?: XOR<AssetCreateWithoutAuditAssignmentsInput, AssetUncheckedCreateWithoutAuditAssignmentsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAuditAssignmentsInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuditAssignmentsInput = {
    create?: XOR<UserCreateWithoutAuditAssignmentsInput, UserUncheckedCreateWithoutAuditAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditAssignmentsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuditAssignmentsMadeInput = {
    create?: XOR<UserCreateWithoutAuditAssignmentsMadeInput, UserUncheckedCreateWithoutAuditAssignmentsMadeInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditAssignmentsMadeInput
    connect?: UserWhereUniqueInput
  }

  export type AssetAuditCreateNestedManyWithoutAssignmentInput = {
    create?: XOR<AssetAuditCreateWithoutAssignmentInput, AssetAuditUncheckedCreateWithoutAssignmentInput> | AssetAuditCreateWithoutAssignmentInput[] | AssetAuditUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssignmentInput | AssetAuditCreateOrConnectWithoutAssignmentInput[]
    createMany?: AssetAuditCreateManyAssignmentInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type AssetAuditUncheckedCreateNestedManyWithoutAssignmentInput = {
    create?: XOR<AssetAuditCreateWithoutAssignmentInput, AssetAuditUncheckedCreateWithoutAssignmentInput> | AssetAuditCreateWithoutAssignmentInput[] | AssetAuditUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssignmentInput | AssetAuditCreateOrConnectWithoutAssignmentInput[]
    createMany?: AssetAuditCreateManyAssignmentInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type EnumAuditAssignmentStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuditAssignmentStatus
  }

  export type AssetUpdateOneRequiredWithoutAuditAssignmentsNestedInput = {
    create?: XOR<AssetCreateWithoutAuditAssignmentsInput, AssetUncheckedCreateWithoutAuditAssignmentsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAuditAssignmentsInput
    upsert?: AssetUpsertWithoutAuditAssignmentsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutAuditAssignmentsInput, AssetUpdateWithoutAuditAssignmentsInput>, AssetUncheckedUpdateWithoutAuditAssignmentsInput>
  }

  export type UserUpdateOneRequiredWithoutAuditAssignmentsNestedInput = {
    create?: XOR<UserCreateWithoutAuditAssignmentsInput, UserUncheckedCreateWithoutAuditAssignmentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditAssignmentsInput
    upsert?: UserUpsertWithoutAuditAssignmentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditAssignmentsInput, UserUpdateWithoutAuditAssignmentsInput>, UserUncheckedUpdateWithoutAuditAssignmentsInput>
  }

  export type UserUpdateOneRequiredWithoutAuditAssignmentsMadeNestedInput = {
    create?: XOR<UserCreateWithoutAuditAssignmentsMadeInput, UserUncheckedCreateWithoutAuditAssignmentsMadeInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditAssignmentsMadeInput
    upsert?: UserUpsertWithoutAuditAssignmentsMadeInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditAssignmentsMadeInput, UserUpdateWithoutAuditAssignmentsMadeInput>, UserUncheckedUpdateWithoutAuditAssignmentsMadeInput>
  }

  export type AssetAuditUpdateManyWithoutAssignmentNestedInput = {
    create?: XOR<AssetAuditCreateWithoutAssignmentInput, AssetAuditUncheckedCreateWithoutAssignmentInput> | AssetAuditCreateWithoutAssignmentInput[] | AssetAuditUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssignmentInput | AssetAuditCreateOrConnectWithoutAssignmentInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutAssignmentInput | AssetAuditUpsertWithWhereUniqueWithoutAssignmentInput[]
    createMany?: AssetAuditCreateManyAssignmentInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutAssignmentInput | AssetAuditUpdateWithWhereUniqueWithoutAssignmentInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutAssignmentInput | AssetAuditUpdateManyWithWhereWithoutAssignmentInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AssetAuditUncheckedUpdateManyWithoutAssignmentNestedInput = {
    create?: XOR<AssetAuditCreateWithoutAssignmentInput, AssetAuditUncheckedCreateWithoutAssignmentInput> | AssetAuditCreateWithoutAssignmentInput[] | AssetAuditUncheckedCreateWithoutAssignmentInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutAssignmentInput | AssetAuditCreateOrConnectWithoutAssignmentInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutAssignmentInput | AssetAuditUpsertWithWhereUniqueWithoutAssignmentInput[]
    createMany?: AssetAuditCreateManyAssignmentInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutAssignmentInput | AssetAuditUpdateWithWhereUniqueWithoutAssignmentInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutAssignmentInput | AssetAuditUpdateManyWithWhereWithoutAssignmentInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AssetCreateNestedOneWithoutAuditRequestsInput = {
    create?: XOR<AssetCreateWithoutAuditRequestsInput, AssetUncheckedCreateWithoutAuditRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAuditRequestsInput
    connect?: AssetWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuditRequestsInput = {
    create?: XOR<UserCreateWithoutAuditRequestsInput, UserUncheckedCreateWithoutAuditRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditRequestsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutAuditRequestsReviewedInput = {
    create?: XOR<UserCreateWithoutAuditRequestsReviewedInput, UserUncheckedCreateWithoutAuditRequestsReviewedInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditRequestsReviewedInput
    connect?: UserWhereUniqueInput
  }

  export type AssetAuditCreateNestedManyWithoutRequestInput = {
    create?: XOR<AssetAuditCreateWithoutRequestInput, AssetAuditUncheckedCreateWithoutRequestInput> | AssetAuditCreateWithoutRequestInput[] | AssetAuditUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutRequestInput | AssetAuditCreateOrConnectWithoutRequestInput[]
    createMany?: AssetAuditCreateManyRequestInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type AssetAuditUncheckedCreateNestedManyWithoutRequestInput = {
    create?: XOR<AssetAuditCreateWithoutRequestInput, AssetAuditUncheckedCreateWithoutRequestInput> | AssetAuditCreateWithoutRequestInput[] | AssetAuditUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutRequestInput | AssetAuditCreateOrConnectWithoutRequestInput[]
    createMany?: AssetAuditCreateManyRequestInputEnvelope
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
  }

  export type EnumAuditRequestStatusFieldUpdateOperationsInput = {
    set?: $Enums.AuditRequestStatus
  }

  export type AssetUpdateOneRequiredWithoutAuditRequestsNestedInput = {
    create?: XOR<AssetCreateWithoutAuditRequestsInput, AssetUncheckedCreateWithoutAuditRequestsInput>
    connectOrCreate?: AssetCreateOrConnectWithoutAuditRequestsInput
    upsert?: AssetUpsertWithoutAuditRequestsInput
    connect?: AssetWhereUniqueInput
    update?: XOR<XOR<AssetUpdateToOneWithWhereWithoutAuditRequestsInput, AssetUpdateWithoutAuditRequestsInput>, AssetUncheckedUpdateWithoutAuditRequestsInput>
  }

  export type UserUpdateOneRequiredWithoutAuditRequestsNestedInput = {
    create?: XOR<UserCreateWithoutAuditRequestsInput, UserUncheckedCreateWithoutAuditRequestsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditRequestsInput
    upsert?: UserUpsertWithoutAuditRequestsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditRequestsInput, UserUpdateWithoutAuditRequestsInput>, UserUncheckedUpdateWithoutAuditRequestsInput>
  }

  export type UserUpdateOneWithoutAuditRequestsReviewedNestedInput = {
    create?: XOR<UserCreateWithoutAuditRequestsReviewedInput, UserUncheckedCreateWithoutAuditRequestsReviewedInput>
    connectOrCreate?: UserCreateOrConnectWithoutAuditRequestsReviewedInput
    upsert?: UserUpsertWithoutAuditRequestsReviewedInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAuditRequestsReviewedInput, UserUpdateWithoutAuditRequestsReviewedInput>, UserUncheckedUpdateWithoutAuditRequestsReviewedInput>
  }

  export type AssetAuditUpdateManyWithoutRequestNestedInput = {
    create?: XOR<AssetAuditCreateWithoutRequestInput, AssetAuditUncheckedCreateWithoutRequestInput> | AssetAuditCreateWithoutRequestInput[] | AssetAuditUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutRequestInput | AssetAuditCreateOrConnectWithoutRequestInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutRequestInput | AssetAuditUpsertWithWhereUniqueWithoutRequestInput[]
    createMany?: AssetAuditCreateManyRequestInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutRequestInput | AssetAuditUpdateWithWhereUniqueWithoutRequestInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutRequestInput | AssetAuditUpdateManyWithWhereWithoutRequestInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type AssetAuditUncheckedUpdateManyWithoutRequestNestedInput = {
    create?: XOR<AssetAuditCreateWithoutRequestInput, AssetAuditUncheckedCreateWithoutRequestInput> | AssetAuditCreateWithoutRequestInput[] | AssetAuditUncheckedCreateWithoutRequestInput[]
    connectOrCreate?: AssetAuditCreateOrConnectWithoutRequestInput | AssetAuditCreateOrConnectWithoutRequestInput[]
    upsert?: AssetAuditUpsertWithWhereUniqueWithoutRequestInput | AssetAuditUpsertWithWhereUniqueWithoutRequestInput[]
    createMany?: AssetAuditCreateManyRequestInputEnvelope
    set?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    disconnect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    delete?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    connect?: AssetAuditWhereUniqueInput | AssetAuditWhereUniqueInput[]
    update?: AssetAuditUpdateWithWhereUniqueWithoutRequestInput | AssetAuditUpdateWithWhereUniqueWithoutRequestInput[]
    updateMany?: AssetAuditUpdateManyWithWhereWithoutRequestInput | AssetAuditUpdateManyWithWhereWithoutRequestInput[]
    deleteMany?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.DepreciationMethodEnum | EnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel> | $Enums.DepreciationMethodEnum | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumDepreciationMethodEnumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DepreciationMethodEnum | EnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    in?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DepreciationMethodEnum[] | ListEnumDepreciationMethodEnumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDepreciationMethodEnumNullableWithAggregatesFilter<$PrismaModel> | $Enums.DepreciationMethodEnum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel>
    _max?: NestedEnumDepreciationMethodEnumNullableFilter<$PrismaModel>
  }

  export type NestedEnumTransferStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusFilter<$PrismaModel> | $Enums.TransferStatus
  }

  export type NestedEnumTransferStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TransferStatus | EnumTransferStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TransferStatus[] | ListEnumTransferStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTransferStatusWithAggregatesFilter<$PrismaModel> | $Enums.TransferStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTransferStatusFilter<$PrismaModel>
    _max?: NestedEnumTransferStatusFilter<$PrismaModel>
  }

  export type NestedEnumMaintenancePriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenancePriority | EnumMaintenancePriorityFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenancePriorityFilter<$PrismaModel> | $Enums.MaintenancePriority
  }

  export type NestedEnumMaintenanceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceStatus | EnumMaintenanceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceStatusFilter<$PrismaModel> | $Enums.MaintenanceStatus
  }

  export type NestedEnumMaintenanceTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceType | EnumMaintenanceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceTypeFilter<$PrismaModel> | $Enums.MaintenanceType
  }

  export type NestedEnumMaintenancePriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenancePriority | EnumMaintenancePriorityFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenancePriority[] | ListEnumMaintenancePriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenancePriorityWithAggregatesFilter<$PrismaModel> | $Enums.MaintenancePriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMaintenancePriorityFilter<$PrismaModel>
    _max?: NestedEnumMaintenancePriorityFilter<$PrismaModel>
  }

  export type NestedEnumMaintenanceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceStatus | EnumMaintenanceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceStatus[] | ListEnumMaintenanceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceStatusWithAggregatesFilter<$PrismaModel> | $Enums.MaintenanceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMaintenanceStatusFilter<$PrismaModel>
    _max?: NestedEnumMaintenanceStatusFilter<$PrismaModel>
  }

  export type NestedEnumMaintenanceTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MaintenanceType | EnumMaintenanceTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.MaintenanceType[] | ListEnumMaintenanceTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumMaintenanceTypeWithAggregatesFilter<$PrismaModel> | $Enums.MaintenanceType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMaintenanceTypeFilter<$PrismaModel>
    _max?: NestedEnumMaintenanceTypeFilter<$PrismaModel>
  }

  export type NestedEnumDisposalMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalMethod | EnumDisposalMethodFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalMethodFilter<$PrismaModel> | $Enums.DisposalMethod
  }

  export type NestedEnumDisposalStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalStatus | EnumDisposalStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalStatusFilter<$PrismaModel> | $Enums.DisposalStatus
  }

  export type NestedEnumDisposalMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalMethod | EnumDisposalMethodFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalMethod[] | ListEnumDisposalMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalMethodWithAggregatesFilter<$PrismaModel> | $Enums.DisposalMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisposalMethodFilter<$PrismaModel>
    _max?: NestedEnumDisposalMethodFilter<$PrismaModel>
  }

  export type NestedEnumDisposalStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DisposalStatus | EnumDisposalStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DisposalStatus[] | ListEnumDisposalStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDisposalStatusWithAggregatesFilter<$PrismaModel> | $Enums.DisposalStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDisposalStatusFilter<$PrismaModel>
    _max?: NestedEnumDisposalStatusFilter<$PrismaModel>
  }

  export type NestedEnumDocumentTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeFilter<$PrismaModel> | $Enums.DocumentType
  }

  export type NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DocumentType | EnumDocumentTypeFieldRefInput<$PrismaModel>
    in?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.DocumentType[] | ListEnumDocumentTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumDocumentTypeWithAggregatesFilter<$PrismaModel> | $Enums.DocumentType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDocumentTypeFilter<$PrismaModel>
    _max?: NestedEnumDocumentTypeFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedEnumScheduleFrequencyFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleFrequency | EnumScheduleFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleFrequencyFilter<$PrismaModel> | $Enums.ScheduleFrequency
  }

  export type NestedEnumScheduleStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleStatus | EnumScheduleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleStatusFilter<$PrismaModel> | $Enums.ScheduleStatus
  }

  export type NestedEnumScheduleFrequencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleFrequency | EnumScheduleFrequencyFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleFrequency[] | ListEnumScheduleFrequencyFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleFrequencyWithAggregatesFilter<$PrismaModel> | $Enums.ScheduleFrequency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduleFrequencyFilter<$PrismaModel>
    _max?: NestedEnumScheduleFrequencyFilter<$PrismaModel>
  }

  export type NestedEnumScheduleStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ScheduleStatus | EnumScheduleStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ScheduleStatus[] | ListEnumScheduleStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumScheduleStatusWithAggregatesFilter<$PrismaModel> | $Enums.ScheduleStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumScheduleStatusFilter<$PrismaModel>
    _max?: NestedEnumScheduleStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusFilter<$PrismaModel> | $Enums.AuditStatus
  }

  export type NestedEnumAuditWorkflowStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditWorkflowStatus | EnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditWorkflowStatusFilter<$PrismaModel> | $Enums.AuditWorkflowStatus
  }

  export type NestedEnumAuditConditionNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditCondition | EnumAuditConditionFieldRefInput<$PrismaModel> | null
    in?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAuditConditionNullableFilter<$PrismaModel> | $Enums.AuditCondition | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumAuditStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditStatus | EnumAuditStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditStatus[] | ListEnumAuditStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditWorkflowStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditWorkflowStatus | EnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditWorkflowStatus[] | ListEnumAuditWorkflowStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditWorkflowStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditWorkflowStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditWorkflowStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditWorkflowStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditConditionNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditCondition | EnumAuditConditionFieldRefInput<$PrismaModel> | null
    in?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AuditCondition[] | ListEnumAuditConditionFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAuditConditionNullableWithAggregatesFilter<$PrismaModel> | $Enums.AuditCondition | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAuditConditionNullableFilter<$PrismaModel>
    _max?: NestedEnumAuditConditionNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumAuditAssignmentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditAssignmentStatus | EnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditAssignmentStatusFilter<$PrismaModel> | $Enums.AuditAssignmentStatus
  }

  export type NestedEnumAuditAssignmentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditAssignmentStatus | EnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditAssignmentStatus[] | ListEnumAuditAssignmentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditAssignmentStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditAssignmentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditAssignmentStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditAssignmentStatusFilter<$PrismaModel>
  }

  export type NestedEnumAuditRequestStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditRequestStatus | EnumAuditRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditRequestStatusFilter<$PrismaModel> | $Enums.AuditRequestStatus
  }

  export type NestedEnumAuditRequestStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AuditRequestStatus | EnumAuditRequestStatusFieldRefInput<$PrismaModel>
    in?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.AuditRequestStatus[] | ListEnumAuditRequestStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumAuditRequestStatusWithAggregatesFilter<$PrismaModel> | $Enums.AuditRequestStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAuditRequestStatusFilter<$PrismaModel>
    _max?: NestedEnumAuditRequestStatusFilter<$PrismaModel>
  }

  export type UserCreateWithoutRoleChangeLogsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutRoleChangeLogsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutRoleChangeLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleChangeLogsInput, UserUncheckedCreateWithoutRoleChangeLogsInput>
  }

  export type UserCreateWithoutRoleChangesMadeInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutRoleChangesMadeInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutRoleChangesMadeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleChangesMadeInput, UserUncheckedCreateWithoutRoleChangesMadeInput>
  }

  export type UserUpsertWithoutRoleChangeLogsInput = {
    update: XOR<UserUpdateWithoutRoleChangeLogsInput, UserUncheckedUpdateWithoutRoleChangeLogsInput>
    create: XOR<UserCreateWithoutRoleChangeLogsInput, UserUncheckedCreateWithoutRoleChangeLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRoleChangeLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRoleChangeLogsInput, UserUncheckedUpdateWithoutRoleChangeLogsInput>
  }

  export type UserUpdateWithoutRoleChangeLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleChangeLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutRoleChangesMadeInput = {
    update: XOR<UserUpdateWithoutRoleChangesMadeInput, UserUncheckedUpdateWithoutRoleChangesMadeInput>
    create: XOR<UserCreateWithoutRoleChangesMadeInput, UserUncheckedCreateWithoutRoleChangesMadeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRoleChangesMadeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRoleChangesMadeInput, UserUncheckedUpdateWithoutRoleChangesMadeInput>
  }

  export type UserUpdateWithoutRoleChangesMadeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleChangesMadeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type RoleChangeLogCreateWithoutUserInput = {
    id?: string
    oldRole: string
    newRole: string
    changedAt?: Date | string
    changedByUser: UserCreateNestedOneWithoutRoleChangesMadeInput
  }

  export type RoleChangeLogUncheckedCreateWithoutUserInput = {
    id?: string
    oldRole: string
    newRole: string
    changedBy: string
    changedAt?: Date | string
  }

  export type RoleChangeLogCreateOrConnectWithoutUserInput = {
    where: RoleChangeLogWhereUniqueInput
    create: XOR<RoleChangeLogCreateWithoutUserInput, RoleChangeLogUncheckedCreateWithoutUserInput>
  }

  export type RoleChangeLogCreateManyUserInputEnvelope = {
    data: RoleChangeLogCreateManyUserInput | RoleChangeLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RoleChangeLogCreateWithoutChangedByUserInput = {
    id?: string
    oldRole: string
    newRole: string
    changedAt?: Date | string
    user: UserCreateNestedOneWithoutRoleChangeLogsInput
  }

  export type RoleChangeLogUncheckedCreateWithoutChangedByUserInput = {
    id?: string
    userId: string
    oldRole: string
    newRole: string
    changedAt?: Date | string
  }

  export type RoleChangeLogCreateOrConnectWithoutChangedByUserInput = {
    where: RoleChangeLogWhereUniqueInput
    create: XOR<RoleChangeLogCreateWithoutChangedByUserInput, RoleChangeLogUncheckedCreateWithoutChangedByUserInput>
  }

  export type RoleChangeLogCreateManyChangedByUserInputEnvelope = {
    data: RoleChangeLogCreateManyChangedByUserInput | RoleChangeLogCreateManyChangedByUserInput[]
    skipDuplicates?: boolean
  }

  export type UserPermissionCreateWithoutUserInput = {
    id?: string
    granted: boolean
    createdAt?: Date | string
    permission: PermissionCreateNestedOneWithoutUserPermissionsInput
  }

  export type UserPermissionUncheckedCreateWithoutUserInput = {
    id?: string
    permissionId: string
    granted: boolean
    createdAt?: Date | string
  }

  export type UserPermissionCreateOrConnectWithoutUserInput = {
    where: UserPermissionWhereUniqueInput
    create: XOR<UserPermissionCreateWithoutUserInput, UserPermissionUncheckedCreateWithoutUserInput>
  }

  export type UserPermissionCreateManyUserInputEnvelope = {
    data: UserPermissionCreateManyUserInput | UserPermissionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceCreateWithoutRequesterInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    asset: AssetCreateNestedOneWithoutMaintenanceRequestsInput
    manager?: UserCreateNestedOneWithoutManagedMaintenanceInput
    assignedTo?: UserCreateNestedOneWithoutAssignedMaintenanceInput
    schedule?: MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput
    template?: MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateWithoutRequesterInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateOrConnectWithoutRequesterInput = {
    where: MaintenanceWhereUniqueInput
    create: XOR<MaintenanceCreateWithoutRequesterInput, MaintenanceUncheckedCreateWithoutRequesterInput>
  }

  export type MaintenanceCreateManyRequesterInputEnvelope = {
    data: MaintenanceCreateManyRequesterInput | MaintenanceCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceCreateWithoutManagerInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    asset: AssetCreateNestedOneWithoutMaintenanceRequestsInput
    requester: UserCreateNestedOneWithoutMaintenanceRequestsInput
    assignedTo?: UserCreateNestedOneWithoutAssignedMaintenanceInput
    schedule?: MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput
    template?: MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateWithoutManagerInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateOrConnectWithoutManagerInput = {
    where: MaintenanceWhereUniqueInput
    create: XOR<MaintenanceCreateWithoutManagerInput, MaintenanceUncheckedCreateWithoutManagerInput>
  }

  export type MaintenanceCreateManyManagerInputEnvelope = {
    data: MaintenanceCreateManyManagerInput | MaintenanceCreateManyManagerInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceCreateWithoutAssignedToInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    asset: AssetCreateNestedOneWithoutMaintenanceRequestsInput
    requester: UserCreateNestedOneWithoutMaintenanceRequestsInput
    manager?: UserCreateNestedOneWithoutManagedMaintenanceInput
    schedule?: MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput
    template?: MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateWithoutAssignedToInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateOrConnectWithoutAssignedToInput = {
    where: MaintenanceWhereUniqueInput
    create: XOR<MaintenanceCreateWithoutAssignedToInput, MaintenanceUncheckedCreateWithoutAssignedToInput>
  }

  export type MaintenanceCreateManyAssignedToInputEnvelope = {
    data: MaintenanceCreateManyAssignedToInput | MaintenanceCreateManyAssignedToInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceScheduleCreateWithoutCreatedByInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutMaintenanceSchedulesInput
    assignedTo?: UserCreateNestedOneWithoutAssignedSchedulesInput
    template?: MaintenanceTemplateCreateNestedOneWithoutSchedulesInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleUncheckedCreateWithoutCreatedByInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleCreateOrConnectWithoutCreatedByInput = {
    where: MaintenanceScheduleWhereUniqueInput
    create: XOR<MaintenanceScheduleCreateWithoutCreatedByInput, MaintenanceScheduleUncheckedCreateWithoutCreatedByInput>
  }

  export type MaintenanceScheduleCreateManyCreatedByInputEnvelope = {
    data: MaintenanceScheduleCreateManyCreatedByInput | MaintenanceScheduleCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceScheduleCreateWithoutAssignedToInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutMaintenanceSchedulesInput
    createdBy: UserCreateNestedOneWithoutCreatedSchedulesInput
    template?: MaintenanceTemplateCreateNestedOneWithoutSchedulesInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleUncheckedCreateWithoutAssignedToInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleCreateOrConnectWithoutAssignedToInput = {
    where: MaintenanceScheduleWhereUniqueInput
    create: XOR<MaintenanceScheduleCreateWithoutAssignedToInput, MaintenanceScheduleUncheckedCreateWithoutAssignedToInput>
  }

  export type MaintenanceScheduleCreateManyAssignedToInputEnvelope = {
    data: MaintenanceScheduleCreateManyAssignedToInput | MaintenanceScheduleCreateManyAssignedToInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceTemplateCreateWithoutCreatedByInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: MaintenanceScheduleCreateNestedManyWithoutTemplateInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateUncheckedCreateWithoutCreatedByInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutTemplateInput
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateCreateOrConnectWithoutCreatedByInput = {
    where: MaintenanceTemplateWhereUniqueInput
    create: XOR<MaintenanceTemplateCreateWithoutCreatedByInput, MaintenanceTemplateUncheckedCreateWithoutCreatedByInput>
  }

  export type MaintenanceTemplateCreateManyCreatedByInputEnvelope = {
    data: MaintenanceTemplateCreateManyCreatedByInput | MaintenanceTemplateCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type TransferCreateWithoutRequesterInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    asset: AssetCreateNestedOneWithoutTransferRequestsInput
    manager?: UserCreateNestedOneWithoutManagedTransfersInput
  }

  export type TransferUncheckedCreateWithoutRequesterInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    managerId?: string | null
  }

  export type TransferCreateOrConnectWithoutRequesterInput = {
    where: TransferWhereUniqueInput
    create: XOR<TransferCreateWithoutRequesterInput, TransferUncheckedCreateWithoutRequesterInput>
  }

  export type TransferCreateManyRequesterInputEnvelope = {
    data: TransferCreateManyRequesterInput | TransferCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type TransferCreateWithoutManagerInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    asset: AssetCreateNestedOneWithoutTransferRequestsInput
    requester: UserCreateNestedOneWithoutTransferRequestsInput
  }

  export type TransferUncheckedCreateWithoutManagerInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
  }

  export type TransferCreateOrConnectWithoutManagerInput = {
    where: TransferWhereUniqueInput
    create: XOR<TransferCreateWithoutManagerInput, TransferUncheckedCreateWithoutManagerInput>
  }

  export type TransferCreateManyManagerInputEnvelope = {
    data: TransferCreateManyManagerInput | TransferCreateManyManagerInput[]
    skipDuplicates?: boolean
  }

  export type DisposalCreateWithoutRequesterInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
    asset: AssetCreateNestedOneWithoutDisposalRequestsInput
  }

  export type DisposalUncheckedCreateWithoutRequesterInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
  }

  export type DisposalCreateOrConnectWithoutRequesterInput = {
    where: DisposalWhereUniqueInput
    create: XOR<DisposalCreateWithoutRequesterInput, DisposalUncheckedCreateWithoutRequesterInput>
  }

  export type DisposalCreateManyRequesterInputEnvelope = {
    data: DisposalCreateManyRequesterInput | DisposalCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type NotificationCreateWithoutUserInput = {
    id?: string
    message: string
    type?: string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: boolean
    createdAt?: Date | string
  }

  export type NotificationUncheckedCreateWithoutUserInput = {
    id?: string
    message: string
    type?: string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: boolean
    createdAt?: Date | string
  }

  export type NotificationCreateOrConnectWithoutUserInput = {
    where: NotificationWhereUniqueInput
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationCreateManyUserInputEnvelope = {
    data: NotificationCreateManyUserInput | NotificationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AssetAuditCreateWithoutAuditorInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditsInput
    assignment?: AuditAssignmentCreateNestedOneWithoutAuditsInput
    request?: AuditRequestCreateNestedOneWithoutAuditsInput
  }

  export type AssetAuditUncheckedCreateWithoutAuditorInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditCreateOrConnectWithoutAuditorInput = {
    where: AssetAuditWhereUniqueInput
    create: XOR<AssetAuditCreateWithoutAuditorInput, AssetAuditUncheckedCreateWithoutAuditorInput>
  }

  export type AssetAuditCreateManyAuditorInputEnvelope = {
    data: AssetAuditCreateManyAuditorInput | AssetAuditCreateManyAuditorInput[]
    skipDuplicates?: boolean
  }

  export type AuditAssignmentCreateWithoutAssignedToInput = {
    id?: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditAssignmentsInput
    assignedBy: UserCreateNestedOneWithoutAuditAssignmentsMadeInput
    audits?: AssetAuditCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentUncheckedCreateWithoutAssignedToInput = {
    id?: string
    assetId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentCreateOrConnectWithoutAssignedToInput = {
    where: AuditAssignmentWhereUniqueInput
    create: XOR<AuditAssignmentCreateWithoutAssignedToInput, AuditAssignmentUncheckedCreateWithoutAssignedToInput>
  }

  export type AuditAssignmentCreateManyAssignedToInputEnvelope = {
    data: AuditAssignmentCreateManyAssignedToInput | AuditAssignmentCreateManyAssignedToInput[]
    skipDuplicates?: boolean
  }

  export type AuditAssignmentCreateWithoutAssignedByInput = {
    id?: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditAssignmentsInput
    assignedTo: UserCreateNestedOneWithoutAuditAssignmentsInput
    audits?: AssetAuditCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentUncheckedCreateWithoutAssignedByInput = {
    id?: string
    assetId: string
    assignedToId: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentCreateOrConnectWithoutAssignedByInput = {
    where: AuditAssignmentWhereUniqueInput
    create: XOR<AuditAssignmentCreateWithoutAssignedByInput, AuditAssignmentUncheckedCreateWithoutAssignedByInput>
  }

  export type AuditAssignmentCreateManyAssignedByInputEnvelope = {
    data: AuditAssignmentCreateManyAssignedByInput | AuditAssignmentCreateManyAssignedByInput[]
    skipDuplicates?: boolean
  }

  export type AuditRequestCreateWithoutRequesterInput = {
    id?: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditRequestsInput
    manager?: UserCreateNestedOneWithoutAuditRequestsReviewedInput
    audits?: AssetAuditCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestUncheckedCreateWithoutRequesterInput = {
    id?: string
    assetId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestCreateOrConnectWithoutRequesterInput = {
    where: AuditRequestWhereUniqueInput
    create: XOR<AuditRequestCreateWithoutRequesterInput, AuditRequestUncheckedCreateWithoutRequesterInput>
  }

  export type AuditRequestCreateManyRequesterInputEnvelope = {
    data: AuditRequestCreateManyRequesterInput | AuditRequestCreateManyRequesterInput[]
    skipDuplicates?: boolean
  }

  export type AuditRequestCreateWithoutManagerInput = {
    id?: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditRequestsInput
    requester: UserCreateNestedOneWithoutAuditRequestsInput
    audits?: AssetAuditCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestUncheckedCreateWithoutManagerInput = {
    id?: string
    assetId: string
    requesterId: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestCreateOrConnectWithoutManagerInput = {
    where: AuditRequestWhereUniqueInput
    create: XOR<AuditRequestCreateWithoutManagerInput, AuditRequestUncheckedCreateWithoutManagerInput>
  }

  export type AuditRequestCreateManyManagerInputEnvelope = {
    data: AuditRequestCreateManyManagerInput | AuditRequestCreateManyManagerInput[]
    skipDuplicates?: boolean
  }

  export type RoleChangeLogUpsertWithWhereUniqueWithoutUserInput = {
    where: RoleChangeLogWhereUniqueInput
    update: XOR<RoleChangeLogUpdateWithoutUserInput, RoleChangeLogUncheckedUpdateWithoutUserInput>
    create: XOR<RoleChangeLogCreateWithoutUserInput, RoleChangeLogUncheckedCreateWithoutUserInput>
  }

  export type RoleChangeLogUpdateWithWhereUniqueWithoutUserInput = {
    where: RoleChangeLogWhereUniqueInput
    data: XOR<RoleChangeLogUpdateWithoutUserInput, RoleChangeLogUncheckedUpdateWithoutUserInput>
  }

  export type RoleChangeLogUpdateManyWithWhereWithoutUserInput = {
    where: RoleChangeLogScalarWhereInput
    data: XOR<RoleChangeLogUpdateManyMutationInput, RoleChangeLogUncheckedUpdateManyWithoutUserInput>
  }

  export type RoleChangeLogScalarWhereInput = {
    AND?: RoleChangeLogScalarWhereInput | RoleChangeLogScalarWhereInput[]
    OR?: RoleChangeLogScalarWhereInput[]
    NOT?: RoleChangeLogScalarWhereInput | RoleChangeLogScalarWhereInput[]
    id?: StringFilter<"RoleChangeLog"> | string
    userId?: StringFilter<"RoleChangeLog"> | string
    oldRole?: StringFilter<"RoleChangeLog"> | string
    newRole?: StringFilter<"RoleChangeLog"> | string
    changedBy?: StringFilter<"RoleChangeLog"> | string
    changedAt?: DateTimeFilter<"RoleChangeLog"> | Date | string
  }

  export type RoleChangeLogUpsertWithWhereUniqueWithoutChangedByUserInput = {
    where: RoleChangeLogWhereUniqueInput
    update: XOR<RoleChangeLogUpdateWithoutChangedByUserInput, RoleChangeLogUncheckedUpdateWithoutChangedByUserInput>
    create: XOR<RoleChangeLogCreateWithoutChangedByUserInput, RoleChangeLogUncheckedCreateWithoutChangedByUserInput>
  }

  export type RoleChangeLogUpdateWithWhereUniqueWithoutChangedByUserInput = {
    where: RoleChangeLogWhereUniqueInput
    data: XOR<RoleChangeLogUpdateWithoutChangedByUserInput, RoleChangeLogUncheckedUpdateWithoutChangedByUserInput>
  }

  export type RoleChangeLogUpdateManyWithWhereWithoutChangedByUserInput = {
    where: RoleChangeLogScalarWhereInput
    data: XOR<RoleChangeLogUpdateManyMutationInput, RoleChangeLogUncheckedUpdateManyWithoutChangedByUserInput>
  }

  export type UserPermissionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserPermissionWhereUniqueInput
    update: XOR<UserPermissionUpdateWithoutUserInput, UserPermissionUncheckedUpdateWithoutUserInput>
    create: XOR<UserPermissionCreateWithoutUserInput, UserPermissionUncheckedCreateWithoutUserInput>
  }

  export type UserPermissionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserPermissionWhereUniqueInput
    data: XOR<UserPermissionUpdateWithoutUserInput, UserPermissionUncheckedUpdateWithoutUserInput>
  }

  export type UserPermissionUpdateManyWithWhereWithoutUserInput = {
    where: UserPermissionScalarWhereInput
    data: XOR<UserPermissionUpdateManyMutationInput, UserPermissionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserPermissionScalarWhereInput = {
    AND?: UserPermissionScalarWhereInput | UserPermissionScalarWhereInput[]
    OR?: UserPermissionScalarWhereInput[]
    NOT?: UserPermissionScalarWhereInput | UserPermissionScalarWhereInput[]
    id?: StringFilter<"UserPermission"> | string
    userId?: StringFilter<"UserPermission"> | string
    permissionId?: StringFilter<"UserPermission"> | string
    granted?: BoolFilter<"UserPermission"> | boolean
    createdAt?: DateTimeFilter<"UserPermission"> | Date | string
  }

  export type MaintenanceUpsertWithWhereUniqueWithoutRequesterInput = {
    where: MaintenanceWhereUniqueInput
    update: XOR<MaintenanceUpdateWithoutRequesterInput, MaintenanceUncheckedUpdateWithoutRequesterInput>
    create: XOR<MaintenanceCreateWithoutRequesterInput, MaintenanceUncheckedCreateWithoutRequesterInput>
  }

  export type MaintenanceUpdateWithWhereUniqueWithoutRequesterInput = {
    where: MaintenanceWhereUniqueInput
    data: XOR<MaintenanceUpdateWithoutRequesterInput, MaintenanceUncheckedUpdateWithoutRequesterInput>
  }

  export type MaintenanceUpdateManyWithWhereWithoutRequesterInput = {
    where: MaintenanceScalarWhereInput
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyWithoutRequesterInput>
  }

  export type MaintenanceScalarWhereInput = {
    AND?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
    OR?: MaintenanceScalarWhereInput[]
    NOT?: MaintenanceScalarWhereInput | MaintenanceScalarWhereInput[]
    id?: StringFilter<"Maintenance"> | string
    assetId?: StringFilter<"Maintenance"> | string
    description?: StringFilter<"Maintenance"> | string
    cost?: FloatNullableFilter<"Maintenance"> | number | null
    createdAt?: DateTimeFilter<"Maintenance"> | Date | string
    updatedAt?: DateTimeFilter<"Maintenance"> | Date | string
    completedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    scheduledDate?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    priority?: EnumMaintenancePriorityFilter<"Maintenance"> | $Enums.MaintenancePriority
    requesterId?: StringFilter<"Maintenance"> | string
    managerId?: StringNullableFilter<"Maintenance"> | string | null
    status?: EnumMaintenanceStatusFilter<"Maintenance"> | $Enums.MaintenanceStatus
    notes?: StringNullableFilter<"Maintenance"> | string | null
    maintenanceType?: EnumMaintenanceTypeFilter<"Maintenance"> | $Enums.MaintenanceType
    scheduleId?: StringNullableFilter<"Maintenance"> | string | null
    templateId?: StringNullableFilter<"Maintenance"> | string | null
    assignedToId?: StringNullableFilter<"Maintenance"> | string | null
    estimatedHours?: FloatNullableFilter<"Maintenance"> | number | null
    actualHours?: FloatNullableFilter<"Maintenance"> | number | null
    checklistItems?: StringNullableFilter<"Maintenance"> | string | null
    issueType?: StringNullableFilter<"Maintenance"> | string | null
    urgencyLevel?: StringNullableFilter<"Maintenance"> | string | null
    reportedBy?: StringNullableFilter<"Maintenance"> | string | null
    assetDowntime?: BoolFilter<"Maintenance"> | boolean
    impactDescription?: StringNullableFilter<"Maintenance"> | string | null
    photoUrls?: StringNullableFilter<"Maintenance"> | string | null
    workPerformed?: StringNullableFilter<"Maintenance"> | string | null
    partsUsed?: StringNullableFilter<"Maintenance"> | string | null
    laborHours?: FloatNullableFilter<"Maintenance"> | number | null
    partsCost?: FloatNullableFilter<"Maintenance"> | number | null
    laborCost?: FloatNullableFilter<"Maintenance"> | number | null
    totalCost?: FloatNullableFilter<"Maintenance"> | number | null
    workStartedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    workCompletedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    technicianNotes?: StringNullableFilter<"Maintenance"> | string | null
    managerReviewNotes?: StringNullableFilter<"Maintenance"> | string | null
    finalApprovedAt?: DateTimeNullableFilter<"Maintenance"> | Date | string | null
    finalApprovedBy?: StringNullableFilter<"Maintenance"> | string | null
    workPhotos?: StringNullableFilter<"Maintenance"> | string | null
  }

  export type MaintenanceUpsertWithWhereUniqueWithoutManagerInput = {
    where: MaintenanceWhereUniqueInput
    update: XOR<MaintenanceUpdateWithoutManagerInput, MaintenanceUncheckedUpdateWithoutManagerInput>
    create: XOR<MaintenanceCreateWithoutManagerInput, MaintenanceUncheckedCreateWithoutManagerInput>
  }

  export type MaintenanceUpdateWithWhereUniqueWithoutManagerInput = {
    where: MaintenanceWhereUniqueInput
    data: XOR<MaintenanceUpdateWithoutManagerInput, MaintenanceUncheckedUpdateWithoutManagerInput>
  }

  export type MaintenanceUpdateManyWithWhereWithoutManagerInput = {
    where: MaintenanceScalarWhereInput
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyWithoutManagerInput>
  }

  export type MaintenanceUpsertWithWhereUniqueWithoutAssignedToInput = {
    where: MaintenanceWhereUniqueInput
    update: XOR<MaintenanceUpdateWithoutAssignedToInput, MaintenanceUncheckedUpdateWithoutAssignedToInput>
    create: XOR<MaintenanceCreateWithoutAssignedToInput, MaintenanceUncheckedCreateWithoutAssignedToInput>
  }

  export type MaintenanceUpdateWithWhereUniqueWithoutAssignedToInput = {
    where: MaintenanceWhereUniqueInput
    data: XOR<MaintenanceUpdateWithoutAssignedToInput, MaintenanceUncheckedUpdateWithoutAssignedToInput>
  }

  export type MaintenanceUpdateManyWithWhereWithoutAssignedToInput = {
    where: MaintenanceScalarWhereInput
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyWithoutAssignedToInput>
  }

  export type MaintenanceScheduleUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: MaintenanceScheduleWhereUniqueInput
    update: XOR<MaintenanceScheduleUpdateWithoutCreatedByInput, MaintenanceScheduleUncheckedUpdateWithoutCreatedByInput>
    create: XOR<MaintenanceScheduleCreateWithoutCreatedByInput, MaintenanceScheduleUncheckedCreateWithoutCreatedByInput>
  }

  export type MaintenanceScheduleUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: MaintenanceScheduleWhereUniqueInput
    data: XOR<MaintenanceScheduleUpdateWithoutCreatedByInput, MaintenanceScheduleUncheckedUpdateWithoutCreatedByInput>
  }

  export type MaintenanceScheduleUpdateManyWithWhereWithoutCreatedByInput = {
    where: MaintenanceScheduleScalarWhereInput
    data: XOR<MaintenanceScheduleUpdateManyMutationInput, MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type MaintenanceScheduleScalarWhereInput = {
    AND?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
    OR?: MaintenanceScheduleScalarWhereInput[]
    NOT?: MaintenanceScheduleScalarWhereInput | MaintenanceScheduleScalarWhereInput[]
    id?: StringFilter<"MaintenanceSchedule"> | string
    assetId?: StringFilter<"MaintenanceSchedule"> | string
    title?: StringFilter<"MaintenanceSchedule"> | string
    description?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    frequency?: EnumScheduleFrequencyFilter<"MaintenanceSchedule"> | $Enums.ScheduleFrequency
    customInterval?: IntNullableFilter<"MaintenanceSchedule"> | number | null
    priority?: EnumMaintenancePriorityFilter<"MaintenanceSchedule"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableFilter<"MaintenanceSchedule"> | number | null
    status?: EnumScheduleStatusFilter<"MaintenanceSchedule"> | $Enums.ScheduleStatus
    createdById?: StringFilter<"MaintenanceSchedule"> | string
    assignedToId?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    templateId?: StringNullableFilter<"MaintenanceSchedule"> | string | null
    startDate?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    endDate?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    lastGenerated?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    nextDue?: DateTimeNullableFilter<"MaintenanceSchedule"> | Date | string | null
    leadTimeDays?: IntFilter<"MaintenanceSchedule"> | number
    autoAssign?: BoolFilter<"MaintenanceSchedule"> | boolean
    createdAt?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
    updatedAt?: DateTimeFilter<"MaintenanceSchedule"> | Date | string
  }

  export type MaintenanceScheduleUpsertWithWhereUniqueWithoutAssignedToInput = {
    where: MaintenanceScheduleWhereUniqueInput
    update: XOR<MaintenanceScheduleUpdateWithoutAssignedToInput, MaintenanceScheduleUncheckedUpdateWithoutAssignedToInput>
    create: XOR<MaintenanceScheduleCreateWithoutAssignedToInput, MaintenanceScheduleUncheckedCreateWithoutAssignedToInput>
  }

  export type MaintenanceScheduleUpdateWithWhereUniqueWithoutAssignedToInput = {
    where: MaintenanceScheduleWhereUniqueInput
    data: XOR<MaintenanceScheduleUpdateWithoutAssignedToInput, MaintenanceScheduleUncheckedUpdateWithoutAssignedToInput>
  }

  export type MaintenanceScheduleUpdateManyWithWhereWithoutAssignedToInput = {
    where: MaintenanceScheduleScalarWhereInput
    data: XOR<MaintenanceScheduleUpdateManyMutationInput, MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToInput>
  }

  export type MaintenanceTemplateUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: MaintenanceTemplateWhereUniqueInput
    update: XOR<MaintenanceTemplateUpdateWithoutCreatedByInput, MaintenanceTemplateUncheckedUpdateWithoutCreatedByInput>
    create: XOR<MaintenanceTemplateCreateWithoutCreatedByInput, MaintenanceTemplateUncheckedCreateWithoutCreatedByInput>
  }

  export type MaintenanceTemplateUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: MaintenanceTemplateWhereUniqueInput
    data: XOR<MaintenanceTemplateUpdateWithoutCreatedByInput, MaintenanceTemplateUncheckedUpdateWithoutCreatedByInput>
  }

  export type MaintenanceTemplateUpdateManyWithWhereWithoutCreatedByInput = {
    where: MaintenanceTemplateScalarWhereInput
    data: XOR<MaintenanceTemplateUpdateManyMutationInput, MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type MaintenanceTemplateScalarWhereInput = {
    AND?: MaintenanceTemplateScalarWhereInput | MaintenanceTemplateScalarWhereInput[]
    OR?: MaintenanceTemplateScalarWhereInput[]
    NOT?: MaintenanceTemplateScalarWhereInput | MaintenanceTemplateScalarWhereInput[]
    id?: StringFilter<"MaintenanceTemplate"> | string
    name?: StringFilter<"MaintenanceTemplate"> | string
    description?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    maintenanceType?: EnumMaintenanceTypeFilter<"MaintenanceTemplate"> | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFilter<"MaintenanceTemplate"> | $Enums.MaintenancePriority
    estimatedHours?: FloatNullableFilter<"MaintenanceTemplate"> | number | null
    instructions?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    checklistItems?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    requiredSkills?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    safetyNotes?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    toolsRequired?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    partsRequired?: StringNullableFilter<"MaintenanceTemplate"> | string | null
    isActive?: BoolFilter<"MaintenanceTemplate"> | boolean
    createdById?: StringFilter<"MaintenanceTemplate"> | string
    createdAt?: DateTimeFilter<"MaintenanceTemplate"> | Date | string
    updatedAt?: DateTimeFilter<"MaintenanceTemplate"> | Date | string
  }

  export type TransferUpsertWithWhereUniqueWithoutRequesterInput = {
    where: TransferWhereUniqueInput
    update: XOR<TransferUpdateWithoutRequesterInput, TransferUncheckedUpdateWithoutRequesterInput>
    create: XOR<TransferCreateWithoutRequesterInput, TransferUncheckedCreateWithoutRequesterInput>
  }

  export type TransferUpdateWithWhereUniqueWithoutRequesterInput = {
    where: TransferWhereUniqueInput
    data: XOR<TransferUpdateWithoutRequesterInput, TransferUncheckedUpdateWithoutRequesterInput>
  }

  export type TransferUpdateManyWithWhereWithoutRequesterInput = {
    where: TransferScalarWhereInput
    data: XOR<TransferUpdateManyMutationInput, TransferUncheckedUpdateManyWithoutRequesterInput>
  }

  export type TransferScalarWhereInput = {
    AND?: TransferScalarWhereInput | TransferScalarWhereInput[]
    OR?: TransferScalarWhereInput[]
    NOT?: TransferScalarWhereInput | TransferScalarWhereInput[]
    id?: StringFilter<"Transfer"> | string
    assetId?: StringFilter<"Transfer"> | string
    reason?: StringFilter<"Transfer"> | string
    createdAt?: DateTimeFilter<"Transfer"> | Date | string
    updatedAt?: DateTimeFilter<"Transfer"> | Date | string
    fromDepartment?: StringFilter<"Transfer"> | string
    requesterId?: StringFilter<"Transfer"> | string
    toDepartment?: StringFilter<"Transfer"> | string
    status?: EnumTransferStatusFilter<"Transfer"> | $Enums.TransferStatus
    managerReason?: StringNullableFilter<"Transfer"> | string | null
    managerId?: StringNullableFilter<"Transfer"> | string | null
  }

  export type TransferUpsertWithWhereUniqueWithoutManagerInput = {
    where: TransferWhereUniqueInput
    update: XOR<TransferUpdateWithoutManagerInput, TransferUncheckedUpdateWithoutManagerInput>
    create: XOR<TransferCreateWithoutManagerInput, TransferUncheckedCreateWithoutManagerInput>
  }

  export type TransferUpdateWithWhereUniqueWithoutManagerInput = {
    where: TransferWhereUniqueInput
    data: XOR<TransferUpdateWithoutManagerInput, TransferUncheckedUpdateWithoutManagerInput>
  }

  export type TransferUpdateManyWithWhereWithoutManagerInput = {
    where: TransferScalarWhereInput
    data: XOR<TransferUpdateManyMutationInput, TransferUncheckedUpdateManyWithoutManagerInput>
  }

  export type DisposalUpsertWithWhereUniqueWithoutRequesterInput = {
    where: DisposalWhereUniqueInput
    update: XOR<DisposalUpdateWithoutRequesterInput, DisposalUncheckedUpdateWithoutRequesterInput>
    create: XOR<DisposalCreateWithoutRequesterInput, DisposalUncheckedCreateWithoutRequesterInput>
  }

  export type DisposalUpdateWithWhereUniqueWithoutRequesterInput = {
    where: DisposalWhereUniqueInput
    data: XOR<DisposalUpdateWithoutRequesterInput, DisposalUncheckedUpdateWithoutRequesterInput>
  }

  export type DisposalUpdateManyWithWhereWithoutRequesterInput = {
    where: DisposalScalarWhereInput
    data: XOR<DisposalUpdateManyMutationInput, DisposalUncheckedUpdateManyWithoutRequesterInput>
  }

  export type DisposalScalarWhereInput = {
    AND?: DisposalScalarWhereInput | DisposalScalarWhereInput[]
    OR?: DisposalScalarWhereInput[]
    NOT?: DisposalScalarWhereInput | DisposalScalarWhereInput[]
    id?: StringFilter<"Disposal"> | string
    assetId?: StringFilter<"Disposal"> | string
    reason?: StringFilter<"Disposal"> | string
    createdAt?: DateTimeFilter<"Disposal"> | Date | string
    updatedAt?: DateTimeFilter<"Disposal"> | Date | string
    actualValue?: FloatNullableFilter<"Disposal"> | number | null
    expectedValue?: FloatFilter<"Disposal"> | number
    requesterId?: StringFilter<"Disposal"> | string
    method?: EnumDisposalMethodFilter<"Disposal"> | $Enums.DisposalMethod
    status?: EnumDisposalStatusFilter<"Disposal"> | $Enums.DisposalStatus
  }

  export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    update: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
    create: XOR<NotificationCreateWithoutUserInput, NotificationUncheckedCreateWithoutUserInput>
  }

  export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
    where: NotificationWhereUniqueInput
    data: XOR<NotificationUpdateWithoutUserInput, NotificationUncheckedUpdateWithoutUserInput>
  }

  export type NotificationUpdateManyWithWhereWithoutUserInput = {
    where: NotificationScalarWhereInput
    data: XOR<NotificationUpdateManyMutationInput, NotificationUncheckedUpdateManyWithoutUserInput>
  }

  export type NotificationScalarWhereInput = {
    AND?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    OR?: NotificationScalarWhereInput[]
    NOT?: NotificationScalarWhereInput | NotificationScalarWhereInput[]
    id?: StringFilter<"Notification"> | string
    userId?: StringFilter<"Notification"> | string
    message?: StringFilter<"Notification"> | string
    type?: StringFilter<"Notification"> | string
    meta?: JsonNullableFilter<"Notification">
    read?: BoolFilter<"Notification"> | boolean
    createdAt?: DateTimeFilter<"Notification"> | Date | string
  }

  export type AssetAuditUpsertWithWhereUniqueWithoutAuditorInput = {
    where: AssetAuditWhereUniqueInput
    update: XOR<AssetAuditUpdateWithoutAuditorInput, AssetAuditUncheckedUpdateWithoutAuditorInput>
    create: XOR<AssetAuditCreateWithoutAuditorInput, AssetAuditUncheckedCreateWithoutAuditorInput>
  }

  export type AssetAuditUpdateWithWhereUniqueWithoutAuditorInput = {
    where: AssetAuditWhereUniqueInput
    data: XOR<AssetAuditUpdateWithoutAuditorInput, AssetAuditUncheckedUpdateWithoutAuditorInput>
  }

  export type AssetAuditUpdateManyWithWhereWithoutAuditorInput = {
    where: AssetAuditScalarWhereInput
    data: XOR<AssetAuditUpdateManyMutationInput, AssetAuditUncheckedUpdateManyWithoutAuditorInput>
  }

  export type AssetAuditScalarWhereInput = {
    AND?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
    OR?: AssetAuditScalarWhereInput[]
    NOT?: AssetAuditScalarWhereInput | AssetAuditScalarWhereInput[]
    id?: StringFilter<"AssetAudit"> | string
    assetId?: StringFilter<"AssetAudit"> | string
    auditDate?: DateTimeFilter<"AssetAudit"> | Date | string
    auditedBy?: StringFilter<"AssetAudit"> | string
    auditorId?: StringNullableFilter<"AssetAudit"> | string | null
    status?: EnumAuditStatusFilter<"AssetAudit"> | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFilter<"AssetAudit"> | $Enums.AuditWorkflowStatus
    condition?: EnumAuditConditionNullableFilter<"AssetAudit"> | $Enums.AuditCondition | null
    locationVerified?: BoolFilter<"AssetAudit"> | boolean
    actualLocation?: StringNullableFilter<"AssetAudit"> | string | null
    notes?: StringNullableFilter<"AssetAudit"> | string | null
    discrepancies?: StringNullableFilter<"AssetAudit"> | string | null
    recommendations?: StringNullableFilter<"AssetAudit"> | string | null
    checklistItems?: StringNullableFilter<"AssetAudit"> | string | null
    discrepancyResolved?: BoolFilter<"AssetAudit"> | boolean
    resolvedDate?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    resolvedBy?: StringNullableFilter<"AssetAudit"> | string | null
    resolutionNotes?: StringNullableFilter<"AssetAudit"> | string | null
    photoUrls?: StringNullableFilter<"AssetAudit"> | string | null
    nextAuditDate?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    assignmentId?: StringNullableFilter<"AssetAudit"> | string | null
    requestId?: StringNullableFilter<"AssetAudit"> | string | null
    reviewedBy?: StringNullableFilter<"AssetAudit"> | string | null
    reviewedAt?: DateTimeNullableFilter<"AssetAudit"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AssetAudit"> | string | null
    managerApproval?: BoolNullableFilter<"AssetAudit"> | boolean | null
    createdAt?: DateTimeFilter<"AssetAudit"> | Date | string
    updatedAt?: DateTimeFilter<"AssetAudit"> | Date | string
  }

  export type AuditAssignmentUpsertWithWhereUniqueWithoutAssignedToInput = {
    where: AuditAssignmentWhereUniqueInput
    update: XOR<AuditAssignmentUpdateWithoutAssignedToInput, AuditAssignmentUncheckedUpdateWithoutAssignedToInput>
    create: XOR<AuditAssignmentCreateWithoutAssignedToInput, AuditAssignmentUncheckedCreateWithoutAssignedToInput>
  }

  export type AuditAssignmentUpdateWithWhereUniqueWithoutAssignedToInput = {
    where: AuditAssignmentWhereUniqueInput
    data: XOR<AuditAssignmentUpdateWithoutAssignedToInput, AuditAssignmentUncheckedUpdateWithoutAssignedToInput>
  }

  export type AuditAssignmentUpdateManyWithWhereWithoutAssignedToInput = {
    where: AuditAssignmentScalarWhereInput
    data: XOR<AuditAssignmentUpdateManyMutationInput, AuditAssignmentUncheckedUpdateManyWithoutAssignedToInput>
  }

  export type AuditAssignmentScalarWhereInput = {
    AND?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
    OR?: AuditAssignmentScalarWhereInput[]
    NOT?: AuditAssignmentScalarWhereInput | AuditAssignmentScalarWhereInput[]
    id?: StringFilter<"AuditAssignment"> | string
    assetId?: StringFilter<"AuditAssignment"> | string
    assignedToId?: StringFilter<"AuditAssignment"> | string
    assignedById?: StringFilter<"AuditAssignment"> | string
    title?: StringFilter<"AuditAssignment"> | string
    description?: StringNullableFilter<"AuditAssignment"> | string | null
    priority?: EnumMaintenancePriorityFilter<"AuditAssignment"> | $Enums.MaintenancePriority
    dueDate?: DateTimeFilter<"AuditAssignment"> | Date | string
    scheduledDate?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    status?: EnumAuditAssignmentStatusFilter<"AuditAssignment"> | $Enums.AuditAssignmentStatus
    instructions?: StringNullableFilter<"AuditAssignment"> | string | null
    checklistItems?: StringNullableFilter<"AuditAssignment"> | string | null
    estimatedHours?: FloatNullableFilter<"AuditAssignment"> | number | null
    actualHours?: FloatNullableFilter<"AuditAssignment"> | number | null
    acceptedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    startedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"AuditAssignment"> | Date | string | null
    cancellationReason?: StringNullableFilter<"AuditAssignment"> | string | null
    notificationSent?: BoolFilter<"AuditAssignment"> | boolean
    remindersSent?: IntFilter<"AuditAssignment"> | number
    createdAt?: DateTimeFilter<"AuditAssignment"> | Date | string
    updatedAt?: DateTimeFilter<"AuditAssignment"> | Date | string
  }

  export type AuditAssignmentUpsertWithWhereUniqueWithoutAssignedByInput = {
    where: AuditAssignmentWhereUniqueInput
    update: XOR<AuditAssignmentUpdateWithoutAssignedByInput, AuditAssignmentUncheckedUpdateWithoutAssignedByInput>
    create: XOR<AuditAssignmentCreateWithoutAssignedByInput, AuditAssignmentUncheckedCreateWithoutAssignedByInput>
  }

  export type AuditAssignmentUpdateWithWhereUniqueWithoutAssignedByInput = {
    where: AuditAssignmentWhereUniqueInput
    data: XOR<AuditAssignmentUpdateWithoutAssignedByInput, AuditAssignmentUncheckedUpdateWithoutAssignedByInput>
  }

  export type AuditAssignmentUpdateManyWithWhereWithoutAssignedByInput = {
    where: AuditAssignmentScalarWhereInput
    data: XOR<AuditAssignmentUpdateManyMutationInput, AuditAssignmentUncheckedUpdateManyWithoutAssignedByInput>
  }

  export type AuditRequestUpsertWithWhereUniqueWithoutRequesterInput = {
    where: AuditRequestWhereUniqueInput
    update: XOR<AuditRequestUpdateWithoutRequesterInput, AuditRequestUncheckedUpdateWithoutRequesterInput>
    create: XOR<AuditRequestCreateWithoutRequesterInput, AuditRequestUncheckedCreateWithoutRequesterInput>
  }

  export type AuditRequestUpdateWithWhereUniqueWithoutRequesterInput = {
    where: AuditRequestWhereUniqueInput
    data: XOR<AuditRequestUpdateWithoutRequesterInput, AuditRequestUncheckedUpdateWithoutRequesterInput>
  }

  export type AuditRequestUpdateManyWithWhereWithoutRequesterInput = {
    where: AuditRequestScalarWhereInput
    data: XOR<AuditRequestUpdateManyMutationInput, AuditRequestUncheckedUpdateManyWithoutRequesterInput>
  }

  export type AuditRequestScalarWhereInput = {
    AND?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
    OR?: AuditRequestScalarWhereInput[]
    NOT?: AuditRequestScalarWhereInput | AuditRequestScalarWhereInput[]
    id?: StringFilter<"AuditRequest"> | string
    assetId?: StringFilter<"AuditRequest"> | string
    requesterId?: StringFilter<"AuditRequest"> | string
    managerId?: StringNullableFilter<"AuditRequest"> | string | null
    title?: StringFilter<"AuditRequest"> | string
    reason?: StringFilter<"AuditRequest"> | string
    urgency?: EnumMaintenancePriorityFilter<"AuditRequest"> | $Enums.MaintenancePriority
    requestedDate?: DateTimeFilter<"AuditRequest"> | Date | string
    status?: EnumAuditRequestStatusFilter<"AuditRequest"> | $Enums.AuditRequestStatus
    reviewedAt?: DateTimeNullableFilter<"AuditRequest"> | Date | string | null
    reviewNotes?: StringNullableFilter<"AuditRequest"> | string | null
    approvedBy?: StringNullableFilter<"AuditRequest"> | string | null
    rejectionReason?: StringNullableFilter<"AuditRequest"> | string | null
    description?: StringNullableFilter<"AuditRequest"> | string | null
    expectedFindings?: StringNullableFilter<"AuditRequest"> | string | null
    attachments?: StringNullableFilter<"AuditRequest"> | string | null
    createdAt?: DateTimeFilter<"AuditRequest"> | Date | string
    updatedAt?: DateTimeFilter<"AuditRequest"> | Date | string
  }

  export type AuditRequestUpsertWithWhereUniqueWithoutManagerInput = {
    where: AuditRequestWhereUniqueInput
    update: XOR<AuditRequestUpdateWithoutManagerInput, AuditRequestUncheckedUpdateWithoutManagerInput>
    create: XOR<AuditRequestCreateWithoutManagerInput, AuditRequestUncheckedCreateWithoutManagerInput>
  }

  export type AuditRequestUpdateWithWhereUniqueWithoutManagerInput = {
    where: AuditRequestWhereUniqueInput
    data: XOR<AuditRequestUpdateWithoutManagerInput, AuditRequestUncheckedUpdateWithoutManagerInput>
  }

  export type AuditRequestUpdateManyWithWhereWithoutManagerInput = {
    where: AuditRequestScalarWhereInput
    data: XOR<AuditRequestUpdateManyMutationInput, AuditRequestUncheckedUpdateManyWithoutManagerInput>
  }

  export type UserCreateWithoutNotificationsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutNotificationsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutNotificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
  }

  export type UserUpsertWithoutNotificationsInput = {
    update: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
    create: XOR<UserCreateWithoutNotificationsInput, UserUncheckedCreateWithoutNotificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutNotificationsInput, UserUncheckedUpdateWithoutNotificationsInput>
  }

  export type UserUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type AssetDepreciationCreateWithoutAssetInput = {
    id?: string
    amount: number
    date: Date | string
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate?: number | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetDepreciationUncheckedCreateWithoutAssetInput = {
    id?: string
    amount: number
    date: Date | string
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate?: number | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetDepreciationCreateOrConnectWithoutAssetInput = {
    where: AssetDepreciationWhereUniqueInput
    create: XOR<AssetDepreciationCreateWithoutAssetInput, AssetDepreciationUncheckedCreateWithoutAssetInput>
  }

  export type AssetDepreciationCreateManyAssetInputEnvelope = {
    data: AssetDepreciationCreateManyAssetInput | AssetDepreciationCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type AssetHistoryCreateWithoutAssetInput = {
    id?: string
    field: string
    oldValue?: string | null
    newValue?: string | null
    changedAt?: Date | string
    changedBy?: string | null
  }

  export type AssetHistoryUncheckedCreateWithoutAssetInput = {
    id?: string
    field: string
    oldValue?: string | null
    newValue?: string | null
    changedAt?: Date | string
    changedBy?: string | null
  }

  export type AssetHistoryCreateOrConnectWithoutAssetInput = {
    where: AssetHistoryWhereUniqueInput
    create: XOR<AssetHistoryCreateWithoutAssetInput, AssetHistoryUncheckedCreateWithoutAssetInput>
  }

  export type AssetHistoryCreateManyAssetInputEnvelope = {
    data: AssetHistoryCreateManyAssetInput | AssetHistoryCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type DepreciationCreateWithoutAssetInput = {
    id?: string
    amount: number
    date: Date | string
    createdAt?: Date | string
    depreciationRate: number
    description?: string | null
    method: string
    salvageValue: number
    updatedAt?: Date | string
    usefulLife: number
  }

  export type DepreciationUncheckedCreateWithoutAssetInput = {
    id?: string
    amount: number
    date: Date | string
    createdAt?: Date | string
    depreciationRate: number
    description?: string | null
    method: string
    salvageValue: number
    updatedAt?: Date | string
    usefulLife: number
  }

  export type DepreciationCreateOrConnectWithoutAssetInput = {
    where: DepreciationWhereUniqueInput
    create: XOR<DepreciationCreateWithoutAssetInput, DepreciationUncheckedCreateWithoutAssetInput>
  }

  export type DepreciationCreateManyAssetInputEnvelope = {
    data: DepreciationCreateManyAssetInput | DepreciationCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type DisposalCreateWithoutAssetInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
    requester: UserCreateNestedOneWithoutDisposalRequestsInput
  }

  export type DisposalUncheckedCreateWithoutAssetInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    requesterId: string
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
  }

  export type DisposalCreateOrConnectWithoutAssetInput = {
    where: DisposalWhereUniqueInput
    create: XOR<DisposalCreateWithoutAssetInput, DisposalUncheckedCreateWithoutAssetInput>
  }

  export type DisposalCreateManyAssetInputEnvelope = {
    data: DisposalCreateManyAssetInput | DisposalCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type DocumentCreateWithoutAssetInput = {
    id?: string
    type: $Enums.DocumentType
    url: string
    fileName?: string | null
    fileSize?: number | null
    filePath?: string | null
    mimeType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentUncheckedCreateWithoutAssetInput = {
    id?: string
    type: $Enums.DocumentType
    url: string
    fileName?: string | null
    fileSize?: number | null
    filePath?: string | null
    mimeType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentCreateOrConnectWithoutAssetInput = {
    where: DocumentWhereUniqueInput
    create: XOR<DocumentCreateWithoutAssetInput, DocumentUncheckedCreateWithoutAssetInput>
  }

  export type DocumentCreateManyAssetInputEnvelope = {
    data: DocumentCreateManyAssetInput | DocumentCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceCreateWithoutAssetInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    requester: UserCreateNestedOneWithoutMaintenanceRequestsInput
    manager?: UserCreateNestedOneWithoutManagedMaintenanceInput
    assignedTo?: UserCreateNestedOneWithoutAssignedMaintenanceInput
    schedule?: MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput
    template?: MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateWithoutAssetInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateOrConnectWithoutAssetInput = {
    where: MaintenanceWhereUniqueInput
    create: XOR<MaintenanceCreateWithoutAssetInput, MaintenanceUncheckedCreateWithoutAssetInput>
  }

  export type MaintenanceCreateManyAssetInputEnvelope = {
    data: MaintenanceCreateManyAssetInput | MaintenanceCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceScheduleCreateWithoutAssetInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: UserCreateNestedOneWithoutCreatedSchedulesInput
    assignedTo?: UserCreateNestedOneWithoutAssignedSchedulesInput
    template?: MaintenanceTemplateCreateNestedOneWithoutSchedulesInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleUncheckedCreateWithoutAssetInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleCreateOrConnectWithoutAssetInput = {
    where: MaintenanceScheduleWhereUniqueInput
    create: XOR<MaintenanceScheduleCreateWithoutAssetInput, MaintenanceScheduleUncheckedCreateWithoutAssetInput>
  }

  export type MaintenanceScheduleCreateManyAssetInputEnvelope = {
    data: MaintenanceScheduleCreateManyAssetInput | MaintenanceScheduleCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type TransferCreateWithoutAssetInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    requester: UserCreateNestedOneWithoutTransferRequestsInput
    manager?: UserCreateNestedOneWithoutManagedTransfersInput
  }

  export type TransferUncheckedCreateWithoutAssetInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    managerId?: string | null
  }

  export type TransferCreateOrConnectWithoutAssetInput = {
    where: TransferWhereUniqueInput
    create: XOR<TransferCreateWithoutAssetInput, TransferUncheckedCreateWithoutAssetInput>
  }

  export type TransferCreateManyAssetInputEnvelope = {
    data: TransferCreateManyAssetInput | TransferCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type LinkedAssetCreateWithoutToAssetInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromAsset: AssetCreateNestedOneWithoutLinkedFromInput
  }

  export type LinkedAssetUncheckedCreateWithoutToAssetInput = {
    id?: string
    fromAssetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LinkedAssetCreateOrConnectWithoutToAssetInput = {
    where: LinkedAssetWhereUniqueInput
    create: XOR<LinkedAssetCreateWithoutToAssetInput, LinkedAssetUncheckedCreateWithoutToAssetInput>
  }

  export type LinkedAssetCreateManyToAssetInputEnvelope = {
    data: LinkedAssetCreateManyToAssetInput | LinkedAssetCreateManyToAssetInput[]
    skipDuplicates?: boolean
  }

  export type LinkedAssetCreateWithoutFromAssetInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    toAsset: AssetCreateNestedOneWithoutLinkedToInput
  }

  export type LinkedAssetUncheckedCreateWithoutFromAssetInput = {
    id?: string
    toAssetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LinkedAssetCreateOrConnectWithoutFromAssetInput = {
    where: LinkedAssetWhereUniqueInput
    create: XOR<LinkedAssetCreateWithoutFromAssetInput, LinkedAssetUncheckedCreateWithoutFromAssetInput>
  }

  export type LinkedAssetCreateManyFromAssetInputEnvelope = {
    data: LinkedAssetCreateManyFromAssetInput | LinkedAssetCreateManyFromAssetInput[]
    skipDuplicates?: boolean
  }

  export type CapitalImprovementCreateWithoutAssetInput = {
    id?: string
    description: string
    improvementDate: Date | string
    cost: number
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CapitalImprovementUncheckedCreateWithoutAssetInput = {
    id?: string
    description: string
    improvementDate: Date | string
    cost: number
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CapitalImprovementCreateOrConnectWithoutAssetInput = {
    where: CapitalImprovementWhereUniqueInput
    create: XOR<CapitalImprovementCreateWithoutAssetInput, CapitalImprovementUncheckedCreateWithoutAssetInput>
  }

  export type CapitalImprovementCreateManyAssetInputEnvelope = {
    data: CapitalImprovementCreateManyAssetInput | CapitalImprovementCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type AssetAuditCreateWithoutAssetInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
    auditor?: UserCreateNestedOneWithoutAuditsPerformedInput
    assignment?: AuditAssignmentCreateNestedOneWithoutAuditsInput
    request?: AuditRequestCreateNestedOneWithoutAuditsInput
  }

  export type AssetAuditUncheckedCreateWithoutAssetInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditCreateOrConnectWithoutAssetInput = {
    where: AssetAuditWhereUniqueInput
    create: XOR<AssetAuditCreateWithoutAssetInput, AssetAuditUncheckedCreateWithoutAssetInput>
  }

  export type AssetAuditCreateManyAssetInputEnvelope = {
    data: AssetAuditCreateManyAssetInput | AssetAuditCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type AuditAssignmentCreateWithoutAssetInput = {
    id?: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    assignedTo: UserCreateNestedOneWithoutAuditAssignmentsInput
    assignedBy: UserCreateNestedOneWithoutAuditAssignmentsMadeInput
    audits?: AssetAuditCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentUncheckedCreateWithoutAssetInput = {
    id?: string
    assignedToId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssignmentInput
  }

  export type AuditAssignmentCreateOrConnectWithoutAssetInput = {
    where: AuditAssignmentWhereUniqueInput
    create: XOR<AuditAssignmentCreateWithoutAssetInput, AuditAssignmentUncheckedCreateWithoutAssetInput>
  }

  export type AuditAssignmentCreateManyAssetInputEnvelope = {
    data: AuditAssignmentCreateManyAssetInput | AuditAssignmentCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type AuditRequestCreateWithoutAssetInput = {
    id?: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    requester: UserCreateNestedOneWithoutAuditRequestsInput
    manager?: UserCreateNestedOneWithoutAuditRequestsReviewedInput
    audits?: AssetAuditCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestUncheckedCreateWithoutAssetInput = {
    id?: string
    requesterId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    audits?: AssetAuditUncheckedCreateNestedManyWithoutRequestInput
  }

  export type AuditRequestCreateOrConnectWithoutAssetInput = {
    where: AuditRequestWhereUniqueInput
    create: XOR<AuditRequestCreateWithoutAssetInput, AuditRequestUncheckedCreateWithoutAssetInput>
  }

  export type AuditRequestCreateManyAssetInputEnvelope = {
    data: AuditRequestCreateManyAssetInput | AuditRequestCreateManyAssetInput[]
    skipDuplicates?: boolean
  }

  export type AssetDepreciationUpsertWithWhereUniqueWithoutAssetInput = {
    where: AssetDepreciationWhereUniqueInput
    update: XOR<AssetDepreciationUpdateWithoutAssetInput, AssetDepreciationUncheckedUpdateWithoutAssetInput>
    create: XOR<AssetDepreciationCreateWithoutAssetInput, AssetDepreciationUncheckedCreateWithoutAssetInput>
  }

  export type AssetDepreciationUpdateWithWhereUniqueWithoutAssetInput = {
    where: AssetDepreciationWhereUniqueInput
    data: XOR<AssetDepreciationUpdateWithoutAssetInput, AssetDepreciationUncheckedUpdateWithoutAssetInput>
  }

  export type AssetDepreciationUpdateManyWithWhereWithoutAssetInput = {
    where: AssetDepreciationScalarWhereInput
    data: XOR<AssetDepreciationUpdateManyMutationInput, AssetDepreciationUncheckedUpdateManyWithoutAssetInput>
  }

  export type AssetDepreciationScalarWhereInput = {
    AND?: AssetDepreciationScalarWhereInput | AssetDepreciationScalarWhereInput[]
    OR?: AssetDepreciationScalarWhereInput[]
    NOT?: AssetDepreciationScalarWhereInput | AssetDepreciationScalarWhereInput[]
    id?: StringFilter<"AssetDepreciation"> | string
    assetId?: StringFilter<"AssetDepreciation"> | string
    amount?: FloatFilter<"AssetDepreciation"> | number
    date?: DateTimeFilter<"AssetDepreciation"> | Date | string
    method?: StringFilter<"AssetDepreciation"> | string
    usefulLife?: IntFilter<"AssetDepreciation"> | number
    salvageValue?: FloatFilter<"AssetDepreciation"> | number
    depreciationRate?: FloatNullableFilter<"AssetDepreciation"> | number | null
    description?: StringNullableFilter<"AssetDepreciation"> | string | null
    createdAt?: DateTimeFilter<"AssetDepreciation"> | Date | string
    updatedAt?: DateTimeFilter<"AssetDepreciation"> | Date | string
  }

  export type AssetHistoryUpsertWithWhereUniqueWithoutAssetInput = {
    where: AssetHistoryWhereUniqueInput
    update: XOR<AssetHistoryUpdateWithoutAssetInput, AssetHistoryUncheckedUpdateWithoutAssetInput>
    create: XOR<AssetHistoryCreateWithoutAssetInput, AssetHistoryUncheckedCreateWithoutAssetInput>
  }

  export type AssetHistoryUpdateWithWhereUniqueWithoutAssetInput = {
    where: AssetHistoryWhereUniqueInput
    data: XOR<AssetHistoryUpdateWithoutAssetInput, AssetHistoryUncheckedUpdateWithoutAssetInput>
  }

  export type AssetHistoryUpdateManyWithWhereWithoutAssetInput = {
    where: AssetHistoryScalarWhereInput
    data: XOR<AssetHistoryUpdateManyMutationInput, AssetHistoryUncheckedUpdateManyWithoutAssetInput>
  }

  export type AssetHistoryScalarWhereInput = {
    AND?: AssetHistoryScalarWhereInput | AssetHistoryScalarWhereInput[]
    OR?: AssetHistoryScalarWhereInput[]
    NOT?: AssetHistoryScalarWhereInput | AssetHistoryScalarWhereInput[]
    id?: StringFilter<"AssetHistory"> | string
    assetId?: StringFilter<"AssetHistory"> | string
    field?: StringFilter<"AssetHistory"> | string
    oldValue?: StringNullableFilter<"AssetHistory"> | string | null
    newValue?: StringNullableFilter<"AssetHistory"> | string | null
    changedAt?: DateTimeFilter<"AssetHistory"> | Date | string
    changedBy?: StringNullableFilter<"AssetHistory"> | string | null
  }

  export type DepreciationUpsertWithWhereUniqueWithoutAssetInput = {
    where: DepreciationWhereUniqueInput
    update: XOR<DepreciationUpdateWithoutAssetInput, DepreciationUncheckedUpdateWithoutAssetInput>
    create: XOR<DepreciationCreateWithoutAssetInput, DepreciationUncheckedCreateWithoutAssetInput>
  }

  export type DepreciationUpdateWithWhereUniqueWithoutAssetInput = {
    where: DepreciationWhereUniqueInput
    data: XOR<DepreciationUpdateWithoutAssetInput, DepreciationUncheckedUpdateWithoutAssetInput>
  }

  export type DepreciationUpdateManyWithWhereWithoutAssetInput = {
    where: DepreciationScalarWhereInput
    data: XOR<DepreciationUpdateManyMutationInput, DepreciationUncheckedUpdateManyWithoutAssetInput>
  }

  export type DepreciationScalarWhereInput = {
    AND?: DepreciationScalarWhereInput | DepreciationScalarWhereInput[]
    OR?: DepreciationScalarWhereInput[]
    NOT?: DepreciationScalarWhereInput | DepreciationScalarWhereInput[]
    id?: StringFilter<"Depreciation"> | string
    assetId?: StringFilter<"Depreciation"> | string
    amount?: FloatFilter<"Depreciation"> | number
    date?: DateTimeFilter<"Depreciation"> | Date | string
    createdAt?: DateTimeFilter<"Depreciation"> | Date | string
    depreciationRate?: FloatFilter<"Depreciation"> | number
    description?: StringNullableFilter<"Depreciation"> | string | null
    method?: StringFilter<"Depreciation"> | string
    salvageValue?: FloatFilter<"Depreciation"> | number
    updatedAt?: DateTimeFilter<"Depreciation"> | Date | string
    usefulLife?: IntFilter<"Depreciation"> | number
  }

  export type DisposalUpsertWithWhereUniqueWithoutAssetInput = {
    where: DisposalWhereUniqueInput
    update: XOR<DisposalUpdateWithoutAssetInput, DisposalUncheckedUpdateWithoutAssetInput>
    create: XOR<DisposalCreateWithoutAssetInput, DisposalUncheckedCreateWithoutAssetInput>
  }

  export type DisposalUpdateWithWhereUniqueWithoutAssetInput = {
    where: DisposalWhereUniqueInput
    data: XOR<DisposalUpdateWithoutAssetInput, DisposalUncheckedUpdateWithoutAssetInput>
  }

  export type DisposalUpdateManyWithWhereWithoutAssetInput = {
    where: DisposalScalarWhereInput
    data: XOR<DisposalUpdateManyMutationInput, DisposalUncheckedUpdateManyWithoutAssetInput>
  }

  export type DocumentUpsertWithWhereUniqueWithoutAssetInput = {
    where: DocumentWhereUniqueInput
    update: XOR<DocumentUpdateWithoutAssetInput, DocumentUncheckedUpdateWithoutAssetInput>
    create: XOR<DocumentCreateWithoutAssetInput, DocumentUncheckedCreateWithoutAssetInput>
  }

  export type DocumentUpdateWithWhereUniqueWithoutAssetInput = {
    where: DocumentWhereUniqueInput
    data: XOR<DocumentUpdateWithoutAssetInput, DocumentUncheckedUpdateWithoutAssetInput>
  }

  export type DocumentUpdateManyWithWhereWithoutAssetInput = {
    where: DocumentScalarWhereInput
    data: XOR<DocumentUpdateManyMutationInput, DocumentUncheckedUpdateManyWithoutAssetInput>
  }

  export type DocumentScalarWhereInput = {
    AND?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    OR?: DocumentScalarWhereInput[]
    NOT?: DocumentScalarWhereInput | DocumentScalarWhereInput[]
    id?: StringFilter<"Document"> | string
    assetId?: StringFilter<"Document"> | string
    type?: EnumDocumentTypeFilter<"Document"> | $Enums.DocumentType
    url?: StringFilter<"Document"> | string
    fileName?: StringNullableFilter<"Document"> | string | null
    fileSize?: IntNullableFilter<"Document"> | number | null
    filePath?: StringNullableFilter<"Document"> | string | null
    mimeType?: StringNullableFilter<"Document"> | string | null
    createdAt?: DateTimeFilter<"Document"> | Date | string
    updatedAt?: DateTimeFilter<"Document"> | Date | string
    meta?: JsonNullableFilter<"Document">
  }

  export type MaintenanceUpsertWithWhereUniqueWithoutAssetInput = {
    where: MaintenanceWhereUniqueInput
    update: XOR<MaintenanceUpdateWithoutAssetInput, MaintenanceUncheckedUpdateWithoutAssetInput>
    create: XOR<MaintenanceCreateWithoutAssetInput, MaintenanceUncheckedCreateWithoutAssetInput>
  }

  export type MaintenanceUpdateWithWhereUniqueWithoutAssetInput = {
    where: MaintenanceWhereUniqueInput
    data: XOR<MaintenanceUpdateWithoutAssetInput, MaintenanceUncheckedUpdateWithoutAssetInput>
  }

  export type MaintenanceUpdateManyWithWhereWithoutAssetInput = {
    where: MaintenanceScalarWhereInput
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyWithoutAssetInput>
  }

  export type MaintenanceScheduleUpsertWithWhereUniqueWithoutAssetInput = {
    where: MaintenanceScheduleWhereUniqueInput
    update: XOR<MaintenanceScheduleUpdateWithoutAssetInput, MaintenanceScheduleUncheckedUpdateWithoutAssetInput>
    create: XOR<MaintenanceScheduleCreateWithoutAssetInput, MaintenanceScheduleUncheckedCreateWithoutAssetInput>
  }

  export type MaintenanceScheduleUpdateWithWhereUniqueWithoutAssetInput = {
    where: MaintenanceScheduleWhereUniqueInput
    data: XOR<MaintenanceScheduleUpdateWithoutAssetInput, MaintenanceScheduleUncheckedUpdateWithoutAssetInput>
  }

  export type MaintenanceScheduleUpdateManyWithWhereWithoutAssetInput = {
    where: MaintenanceScheduleScalarWhereInput
    data: XOR<MaintenanceScheduleUpdateManyMutationInput, MaintenanceScheduleUncheckedUpdateManyWithoutAssetInput>
  }

  export type TransferUpsertWithWhereUniqueWithoutAssetInput = {
    where: TransferWhereUniqueInput
    update: XOR<TransferUpdateWithoutAssetInput, TransferUncheckedUpdateWithoutAssetInput>
    create: XOR<TransferCreateWithoutAssetInput, TransferUncheckedCreateWithoutAssetInput>
  }

  export type TransferUpdateWithWhereUniqueWithoutAssetInput = {
    where: TransferWhereUniqueInput
    data: XOR<TransferUpdateWithoutAssetInput, TransferUncheckedUpdateWithoutAssetInput>
  }

  export type TransferUpdateManyWithWhereWithoutAssetInput = {
    where: TransferScalarWhereInput
    data: XOR<TransferUpdateManyMutationInput, TransferUncheckedUpdateManyWithoutAssetInput>
  }

  export type LinkedAssetUpsertWithWhereUniqueWithoutToAssetInput = {
    where: LinkedAssetWhereUniqueInput
    update: XOR<LinkedAssetUpdateWithoutToAssetInput, LinkedAssetUncheckedUpdateWithoutToAssetInput>
    create: XOR<LinkedAssetCreateWithoutToAssetInput, LinkedAssetUncheckedCreateWithoutToAssetInput>
  }

  export type LinkedAssetUpdateWithWhereUniqueWithoutToAssetInput = {
    where: LinkedAssetWhereUniqueInput
    data: XOR<LinkedAssetUpdateWithoutToAssetInput, LinkedAssetUncheckedUpdateWithoutToAssetInput>
  }

  export type LinkedAssetUpdateManyWithWhereWithoutToAssetInput = {
    where: LinkedAssetScalarWhereInput
    data: XOR<LinkedAssetUpdateManyMutationInput, LinkedAssetUncheckedUpdateManyWithoutToAssetInput>
  }

  export type LinkedAssetScalarWhereInput = {
    AND?: LinkedAssetScalarWhereInput | LinkedAssetScalarWhereInput[]
    OR?: LinkedAssetScalarWhereInput[]
    NOT?: LinkedAssetScalarWhereInput | LinkedAssetScalarWhereInput[]
    id?: StringFilter<"LinkedAsset"> | string
    fromAssetId?: StringFilter<"LinkedAsset"> | string
    toAssetId?: StringFilter<"LinkedAsset"> | string
    createdAt?: DateTimeFilter<"LinkedAsset"> | Date | string
    updatedAt?: DateTimeFilter<"LinkedAsset"> | Date | string
  }

  export type LinkedAssetUpsertWithWhereUniqueWithoutFromAssetInput = {
    where: LinkedAssetWhereUniqueInput
    update: XOR<LinkedAssetUpdateWithoutFromAssetInput, LinkedAssetUncheckedUpdateWithoutFromAssetInput>
    create: XOR<LinkedAssetCreateWithoutFromAssetInput, LinkedAssetUncheckedCreateWithoutFromAssetInput>
  }

  export type LinkedAssetUpdateWithWhereUniqueWithoutFromAssetInput = {
    where: LinkedAssetWhereUniqueInput
    data: XOR<LinkedAssetUpdateWithoutFromAssetInput, LinkedAssetUncheckedUpdateWithoutFromAssetInput>
  }

  export type LinkedAssetUpdateManyWithWhereWithoutFromAssetInput = {
    where: LinkedAssetScalarWhereInput
    data: XOR<LinkedAssetUpdateManyMutationInput, LinkedAssetUncheckedUpdateManyWithoutFromAssetInput>
  }

  export type CapitalImprovementUpsertWithWhereUniqueWithoutAssetInput = {
    where: CapitalImprovementWhereUniqueInput
    update: XOR<CapitalImprovementUpdateWithoutAssetInput, CapitalImprovementUncheckedUpdateWithoutAssetInput>
    create: XOR<CapitalImprovementCreateWithoutAssetInput, CapitalImprovementUncheckedCreateWithoutAssetInput>
  }

  export type CapitalImprovementUpdateWithWhereUniqueWithoutAssetInput = {
    where: CapitalImprovementWhereUniqueInput
    data: XOR<CapitalImprovementUpdateWithoutAssetInput, CapitalImprovementUncheckedUpdateWithoutAssetInput>
  }

  export type CapitalImprovementUpdateManyWithWhereWithoutAssetInput = {
    where: CapitalImprovementScalarWhereInput
    data: XOR<CapitalImprovementUpdateManyMutationInput, CapitalImprovementUncheckedUpdateManyWithoutAssetInput>
  }

  export type CapitalImprovementScalarWhereInput = {
    AND?: CapitalImprovementScalarWhereInput | CapitalImprovementScalarWhereInput[]
    OR?: CapitalImprovementScalarWhereInput[]
    NOT?: CapitalImprovementScalarWhereInput | CapitalImprovementScalarWhereInput[]
    id?: StringFilter<"CapitalImprovement"> | string
    assetId?: StringFilter<"CapitalImprovement"> | string
    description?: StringFilter<"CapitalImprovement"> | string
    improvementDate?: DateTimeFilter<"CapitalImprovement"> | Date | string
    cost?: FloatFilter<"CapitalImprovement"> | number
    usefulLifeMonths?: IntNullableFilter<"CapitalImprovement"> | number | null
    depreciationMethod?: EnumDepreciationMethodEnumNullableFilter<"CapitalImprovement"> | $Enums.DepreciationMethodEnum | null
    notes?: StringNullableFilter<"CapitalImprovement"> | string | null
    createdAt?: DateTimeFilter<"CapitalImprovement"> | Date | string
    updatedAt?: DateTimeFilter<"CapitalImprovement"> | Date | string
  }

  export type AssetAuditUpsertWithWhereUniqueWithoutAssetInput = {
    where: AssetAuditWhereUniqueInput
    update: XOR<AssetAuditUpdateWithoutAssetInput, AssetAuditUncheckedUpdateWithoutAssetInput>
    create: XOR<AssetAuditCreateWithoutAssetInput, AssetAuditUncheckedCreateWithoutAssetInput>
  }

  export type AssetAuditUpdateWithWhereUniqueWithoutAssetInput = {
    where: AssetAuditWhereUniqueInput
    data: XOR<AssetAuditUpdateWithoutAssetInput, AssetAuditUncheckedUpdateWithoutAssetInput>
  }

  export type AssetAuditUpdateManyWithWhereWithoutAssetInput = {
    where: AssetAuditScalarWhereInput
    data: XOR<AssetAuditUpdateManyMutationInput, AssetAuditUncheckedUpdateManyWithoutAssetInput>
  }

  export type AuditAssignmentUpsertWithWhereUniqueWithoutAssetInput = {
    where: AuditAssignmentWhereUniqueInput
    update: XOR<AuditAssignmentUpdateWithoutAssetInput, AuditAssignmentUncheckedUpdateWithoutAssetInput>
    create: XOR<AuditAssignmentCreateWithoutAssetInput, AuditAssignmentUncheckedCreateWithoutAssetInput>
  }

  export type AuditAssignmentUpdateWithWhereUniqueWithoutAssetInput = {
    where: AuditAssignmentWhereUniqueInput
    data: XOR<AuditAssignmentUpdateWithoutAssetInput, AuditAssignmentUncheckedUpdateWithoutAssetInput>
  }

  export type AuditAssignmentUpdateManyWithWhereWithoutAssetInput = {
    where: AuditAssignmentScalarWhereInput
    data: XOR<AuditAssignmentUpdateManyMutationInput, AuditAssignmentUncheckedUpdateManyWithoutAssetInput>
  }

  export type AuditRequestUpsertWithWhereUniqueWithoutAssetInput = {
    where: AuditRequestWhereUniqueInput
    update: XOR<AuditRequestUpdateWithoutAssetInput, AuditRequestUncheckedUpdateWithoutAssetInput>
    create: XOR<AuditRequestCreateWithoutAssetInput, AuditRequestUncheckedCreateWithoutAssetInput>
  }

  export type AuditRequestUpdateWithWhereUniqueWithoutAssetInput = {
    where: AuditRequestWhereUniqueInput
    data: XOR<AuditRequestUpdateWithoutAssetInput, AuditRequestUncheckedUpdateWithoutAssetInput>
  }

  export type AuditRequestUpdateManyWithWhereWithoutAssetInput = {
    where: AuditRequestScalarWhereInput
    data: XOR<AuditRequestUpdateManyMutationInput, AuditRequestUncheckedUpdateManyWithoutAssetInput>
  }

  export type AssetCreateWithoutTransferRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutTransferRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutTransferRequestsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutTransferRequestsInput, AssetUncheckedCreateWithoutTransferRequestsInput>
  }

  export type UserCreateWithoutTransferRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutTransferRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutTransferRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTransferRequestsInput, UserUncheckedCreateWithoutTransferRequestsInput>
  }

  export type UserCreateWithoutManagedTransfersInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutManagedTransfersInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutManagedTransfersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManagedTransfersInput, UserUncheckedCreateWithoutManagedTransfersInput>
  }

  export type AssetUpsertWithoutTransferRequestsInput = {
    update: XOR<AssetUpdateWithoutTransferRequestsInput, AssetUncheckedUpdateWithoutTransferRequestsInput>
    create: XOR<AssetCreateWithoutTransferRequestsInput, AssetUncheckedCreateWithoutTransferRequestsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutTransferRequestsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutTransferRequestsInput, AssetUncheckedUpdateWithoutTransferRequestsInput>
  }

  export type AssetUpdateWithoutTransferRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutTransferRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutTransferRequestsInput = {
    update: XOR<UserUpdateWithoutTransferRequestsInput, UserUncheckedUpdateWithoutTransferRequestsInput>
    create: XOR<UserCreateWithoutTransferRequestsInput, UserUncheckedCreateWithoutTransferRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTransferRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTransferRequestsInput, UserUncheckedUpdateWithoutTransferRequestsInput>
  }

  export type UserUpdateWithoutTransferRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutTransferRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutManagedTransfersInput = {
    update: XOR<UserUpdateWithoutManagedTransfersInput, UserUncheckedUpdateWithoutManagedTransfersInput>
    create: XOR<UserCreateWithoutManagedTransfersInput, UserUncheckedCreateWithoutManagedTransfersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManagedTransfersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManagedTransfersInput, UserUncheckedUpdateWithoutManagedTransfersInput>
  }

  export type UserUpdateWithoutManagedTransfersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutManagedTransfersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type AssetCreateWithoutMaintenanceRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutMaintenanceRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutMaintenanceRequestsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutMaintenanceRequestsInput, AssetUncheckedCreateWithoutMaintenanceRequestsInput>
  }

  export type UserCreateWithoutMaintenanceRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutMaintenanceRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutMaintenanceRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMaintenanceRequestsInput, UserUncheckedCreateWithoutMaintenanceRequestsInput>
  }

  export type UserCreateWithoutManagedMaintenanceInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutManagedMaintenanceInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutManagedMaintenanceInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutManagedMaintenanceInput, UserUncheckedCreateWithoutManagedMaintenanceInput>
  }

  export type UserCreateWithoutAssignedMaintenanceInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutAssignedMaintenanceInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutAssignedMaintenanceInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignedMaintenanceInput, UserUncheckedCreateWithoutAssignedMaintenanceInput>
  }

  export type MaintenanceScheduleCreateWithoutMaintenanceTasksInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutMaintenanceSchedulesInput
    createdBy: UserCreateNestedOneWithoutCreatedSchedulesInput
    assignedTo?: UserCreateNestedOneWithoutAssignedSchedulesInput
    template?: MaintenanceTemplateCreateNestedOneWithoutSchedulesInput
  }

  export type MaintenanceScheduleUncheckedCreateWithoutMaintenanceTasksInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaintenanceScheduleCreateOrConnectWithoutMaintenanceTasksInput = {
    where: MaintenanceScheduleWhereUniqueInput
    create: XOR<MaintenanceScheduleCreateWithoutMaintenanceTasksInput, MaintenanceScheduleUncheckedCreateWithoutMaintenanceTasksInput>
  }

  export type MaintenanceTemplateCreateWithoutMaintenanceTasksInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: UserCreateNestedOneWithoutCreatedTemplatesInput
    schedules?: MaintenanceScheduleCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateUncheckedCreateWithoutMaintenanceTasksInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    schedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateCreateOrConnectWithoutMaintenanceTasksInput = {
    where: MaintenanceTemplateWhereUniqueInput
    create: XOR<MaintenanceTemplateCreateWithoutMaintenanceTasksInput, MaintenanceTemplateUncheckedCreateWithoutMaintenanceTasksInput>
  }

  export type AssetUpsertWithoutMaintenanceRequestsInput = {
    update: XOR<AssetUpdateWithoutMaintenanceRequestsInput, AssetUncheckedUpdateWithoutMaintenanceRequestsInput>
    create: XOR<AssetCreateWithoutMaintenanceRequestsInput, AssetUncheckedCreateWithoutMaintenanceRequestsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutMaintenanceRequestsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutMaintenanceRequestsInput, AssetUncheckedUpdateWithoutMaintenanceRequestsInput>
  }

  export type AssetUpdateWithoutMaintenanceRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutMaintenanceRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutMaintenanceRequestsInput = {
    update: XOR<UserUpdateWithoutMaintenanceRequestsInput, UserUncheckedUpdateWithoutMaintenanceRequestsInput>
    create: XOR<UserCreateWithoutMaintenanceRequestsInput, UserUncheckedCreateWithoutMaintenanceRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMaintenanceRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMaintenanceRequestsInput, UserUncheckedUpdateWithoutMaintenanceRequestsInput>
  }

  export type UserUpdateWithoutMaintenanceRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutMaintenanceRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutManagedMaintenanceInput = {
    update: XOR<UserUpdateWithoutManagedMaintenanceInput, UserUncheckedUpdateWithoutManagedMaintenanceInput>
    create: XOR<UserCreateWithoutManagedMaintenanceInput, UserUncheckedCreateWithoutManagedMaintenanceInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutManagedMaintenanceInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutManagedMaintenanceInput, UserUncheckedUpdateWithoutManagedMaintenanceInput>
  }

  export type UserUpdateWithoutManagedMaintenanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutManagedMaintenanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutAssignedMaintenanceInput = {
    update: XOR<UserUpdateWithoutAssignedMaintenanceInput, UserUncheckedUpdateWithoutAssignedMaintenanceInput>
    create: XOR<UserCreateWithoutAssignedMaintenanceInput, UserUncheckedCreateWithoutAssignedMaintenanceInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignedMaintenanceInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignedMaintenanceInput, UserUncheckedUpdateWithoutAssignedMaintenanceInput>
  }

  export type UserUpdateWithoutAssignedMaintenanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignedMaintenanceInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type MaintenanceScheduleUpsertWithoutMaintenanceTasksInput = {
    update: XOR<MaintenanceScheduleUpdateWithoutMaintenanceTasksInput, MaintenanceScheduleUncheckedUpdateWithoutMaintenanceTasksInput>
    create: XOR<MaintenanceScheduleCreateWithoutMaintenanceTasksInput, MaintenanceScheduleUncheckedCreateWithoutMaintenanceTasksInput>
    where?: MaintenanceScheduleWhereInput
  }

  export type MaintenanceScheduleUpdateToOneWithWhereWithoutMaintenanceTasksInput = {
    where?: MaintenanceScheduleWhereInput
    data: XOR<MaintenanceScheduleUpdateWithoutMaintenanceTasksInput, MaintenanceScheduleUncheckedUpdateWithoutMaintenanceTasksInput>
  }

  export type MaintenanceScheduleUpdateWithoutMaintenanceTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSchedulesNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedSchedulesNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutSchedulesNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateWithoutMaintenanceTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceTemplateUpsertWithoutMaintenanceTasksInput = {
    update: XOR<MaintenanceTemplateUpdateWithoutMaintenanceTasksInput, MaintenanceTemplateUncheckedUpdateWithoutMaintenanceTasksInput>
    create: XOR<MaintenanceTemplateCreateWithoutMaintenanceTasksInput, MaintenanceTemplateUncheckedCreateWithoutMaintenanceTasksInput>
    where?: MaintenanceTemplateWhereInput
  }

  export type MaintenanceTemplateUpdateToOneWithWhereWithoutMaintenanceTasksInput = {
    where?: MaintenanceTemplateWhereInput
    data: XOR<MaintenanceTemplateUpdateWithoutMaintenanceTasksInput, MaintenanceTemplateUncheckedUpdateWithoutMaintenanceTasksInput>
  }

  export type MaintenanceTemplateUpdateWithoutMaintenanceTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneRequiredWithoutCreatedTemplatesNestedInput
    schedules?: MaintenanceScheduleUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceTemplateUncheckedUpdateWithoutMaintenanceTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: MaintenanceScheduleUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type AssetCreateWithoutDisposalRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutDisposalRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutDisposalRequestsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutDisposalRequestsInput, AssetUncheckedCreateWithoutDisposalRequestsInput>
  }

  export type UserCreateWithoutDisposalRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutDisposalRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutDisposalRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDisposalRequestsInput, UserUncheckedCreateWithoutDisposalRequestsInput>
  }

  export type AssetUpsertWithoutDisposalRequestsInput = {
    update: XOR<AssetUpdateWithoutDisposalRequestsInput, AssetUncheckedUpdateWithoutDisposalRequestsInput>
    create: XOR<AssetCreateWithoutDisposalRequestsInput, AssetUncheckedCreateWithoutDisposalRequestsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutDisposalRequestsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutDisposalRequestsInput, AssetUncheckedUpdateWithoutDisposalRequestsInput>
  }

  export type AssetUpdateWithoutDisposalRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutDisposalRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutDisposalRequestsInput = {
    update: XOR<UserUpdateWithoutDisposalRequestsInput, UserUncheckedUpdateWithoutDisposalRequestsInput>
    create: XOR<UserCreateWithoutDisposalRequestsInput, UserUncheckedCreateWithoutDisposalRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDisposalRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDisposalRequestsInput, UserUncheckedUpdateWithoutDisposalRequestsInput>
  }

  export type UserUpdateWithoutDisposalRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutDisposalRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type AssetCreateWithoutDocumentsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutDocumentsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutDocumentsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutDocumentsInput, AssetUncheckedCreateWithoutDocumentsInput>
  }

  export type AssetUpsertWithoutDocumentsInput = {
    update: XOR<AssetUpdateWithoutDocumentsInput, AssetUncheckedUpdateWithoutDocumentsInput>
    create: XOR<AssetCreateWithoutDocumentsInput, AssetUncheckedCreateWithoutDocumentsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutDocumentsInput, AssetUncheckedUpdateWithoutDocumentsInput>
  }

  export type AssetUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutDocumentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetCreateWithoutDepreciationsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutDepreciationsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutDepreciationsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutDepreciationsInput, AssetUncheckedCreateWithoutDepreciationsInput>
  }

  export type AssetUpsertWithoutDepreciationsInput = {
    update: XOR<AssetUpdateWithoutDepreciationsInput, AssetUncheckedUpdateWithoutDepreciationsInput>
    create: XOR<AssetCreateWithoutDepreciationsInput, AssetUncheckedCreateWithoutDepreciationsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutDepreciationsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutDepreciationsInput, AssetUncheckedUpdateWithoutDepreciationsInput>
  }

  export type AssetUpdateWithoutDepreciationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutDepreciationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetCreateWithoutAssetDepreciationsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutAssetDepreciationsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutAssetDepreciationsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutAssetDepreciationsInput, AssetUncheckedCreateWithoutAssetDepreciationsInput>
  }

  export type AssetUpsertWithoutAssetDepreciationsInput = {
    update: XOR<AssetUpdateWithoutAssetDepreciationsInput, AssetUncheckedUpdateWithoutAssetDepreciationsInput>
    create: XOR<AssetCreateWithoutAssetDepreciationsInput, AssetUncheckedCreateWithoutAssetDepreciationsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutAssetDepreciationsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutAssetDepreciationsInput, AssetUncheckedUpdateWithoutAssetDepreciationsInput>
  }

  export type AssetUpdateWithoutAssetDepreciationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutAssetDepreciationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetCreateWithoutHistoryInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutHistoryInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutHistoryInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutHistoryInput, AssetUncheckedCreateWithoutHistoryInput>
  }

  export type AssetUpsertWithoutHistoryInput = {
    update: XOR<AssetUpdateWithoutHistoryInput, AssetUncheckedUpdateWithoutHistoryInput>
    create: XOR<AssetCreateWithoutHistoryInput, AssetUncheckedCreateWithoutHistoryInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutHistoryInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutHistoryInput, AssetUncheckedUpdateWithoutHistoryInput>
  }

  export type AssetUpdateWithoutHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetCreateWithoutLinkedFromInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutLinkedFromInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutLinkedFromInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutLinkedFromInput, AssetUncheckedCreateWithoutLinkedFromInput>
  }

  export type AssetCreateWithoutLinkedToInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutLinkedToInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutLinkedToInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutLinkedToInput, AssetUncheckedCreateWithoutLinkedToInput>
  }

  export type AssetUpsertWithoutLinkedFromInput = {
    update: XOR<AssetUpdateWithoutLinkedFromInput, AssetUncheckedUpdateWithoutLinkedFromInput>
    create: XOR<AssetCreateWithoutLinkedFromInput, AssetUncheckedCreateWithoutLinkedFromInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutLinkedFromInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutLinkedFromInput, AssetUncheckedUpdateWithoutLinkedFromInput>
  }

  export type AssetUpdateWithoutLinkedFromInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutLinkedFromInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetUpsertWithoutLinkedToInput = {
    update: XOR<AssetUpdateWithoutLinkedToInput, AssetUncheckedUpdateWithoutLinkedToInput>
    create: XOR<AssetCreateWithoutLinkedToInput, AssetUncheckedCreateWithoutLinkedToInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutLinkedToInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutLinkedToInput, AssetUncheckedUpdateWithoutLinkedToInput>
  }

  export type AssetUpdateWithoutLinkedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutLinkedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserPermissionCreateWithoutPermissionInput = {
    id?: string
    granted: boolean
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutUserPermissionsInput
  }

  export type UserPermissionUncheckedCreateWithoutPermissionInput = {
    id?: string
    userId: string
    granted: boolean
    createdAt?: Date | string
  }

  export type UserPermissionCreateOrConnectWithoutPermissionInput = {
    where: UserPermissionWhereUniqueInput
    create: XOR<UserPermissionCreateWithoutPermissionInput, UserPermissionUncheckedCreateWithoutPermissionInput>
  }

  export type UserPermissionCreateManyPermissionInputEnvelope = {
    data: UserPermissionCreateManyPermissionInput | UserPermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type RolePermissionCreateWithoutPermissionInput = {
    id?: string
    role: $Enums.Role
  }

  export type RolePermissionUncheckedCreateWithoutPermissionInput = {
    id?: string
    role: $Enums.Role
  }

  export type RolePermissionCreateOrConnectWithoutPermissionInput = {
    where: RolePermissionWhereUniqueInput
    create: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput>
  }

  export type RolePermissionCreateManyPermissionInputEnvelope = {
    data: RolePermissionCreateManyPermissionInput | RolePermissionCreateManyPermissionInput[]
    skipDuplicates?: boolean
  }

  export type UserPermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: UserPermissionWhereUniqueInput
    update: XOR<UserPermissionUpdateWithoutPermissionInput, UserPermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<UserPermissionCreateWithoutPermissionInput, UserPermissionUncheckedCreateWithoutPermissionInput>
  }

  export type UserPermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: UserPermissionWhereUniqueInput
    data: XOR<UserPermissionUpdateWithoutPermissionInput, UserPermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type UserPermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: UserPermissionScalarWhereInput
    data: XOR<UserPermissionUpdateManyMutationInput, UserPermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type RolePermissionUpsertWithWhereUniqueWithoutPermissionInput = {
    where: RolePermissionWhereUniqueInput
    update: XOR<RolePermissionUpdateWithoutPermissionInput, RolePermissionUncheckedUpdateWithoutPermissionInput>
    create: XOR<RolePermissionCreateWithoutPermissionInput, RolePermissionUncheckedCreateWithoutPermissionInput>
  }

  export type RolePermissionUpdateWithWhereUniqueWithoutPermissionInput = {
    where: RolePermissionWhereUniqueInput
    data: XOR<RolePermissionUpdateWithoutPermissionInput, RolePermissionUncheckedUpdateWithoutPermissionInput>
  }

  export type RolePermissionUpdateManyWithWhereWithoutPermissionInput = {
    where: RolePermissionScalarWhereInput
    data: XOR<RolePermissionUpdateManyMutationInput, RolePermissionUncheckedUpdateManyWithoutPermissionInput>
  }

  export type RolePermissionScalarWhereInput = {
    AND?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    OR?: RolePermissionScalarWhereInput[]
    NOT?: RolePermissionScalarWhereInput | RolePermissionScalarWhereInput[]
    id?: StringFilter<"RolePermission"> | string
    role?: EnumRoleFilter<"RolePermission"> | $Enums.Role
    permissionId?: StringFilter<"RolePermission"> | string
  }

  export type UserCreateWithoutUserPermissionsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutUserPermissionsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutUserPermissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserPermissionsInput, UserUncheckedCreateWithoutUserPermissionsInput>
  }

  export type PermissionCreateWithoutUserPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    rolePermissions?: RolePermissionCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutUserPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    rolePermissions?: RolePermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutUserPermissionsInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutUserPermissionsInput, PermissionUncheckedCreateWithoutUserPermissionsInput>
  }

  export type UserUpsertWithoutUserPermissionsInput = {
    update: XOR<UserUpdateWithoutUserPermissionsInput, UserUncheckedUpdateWithoutUserPermissionsInput>
    create: XOR<UserCreateWithoutUserPermissionsInput, UserUncheckedCreateWithoutUserPermissionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserPermissionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserPermissionsInput, UserUncheckedUpdateWithoutUserPermissionsInput>
  }

  export type UserUpdateWithoutUserPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutUserPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type PermissionUpsertWithoutUserPermissionsInput = {
    update: XOR<PermissionUpdateWithoutUserPermissionsInput, PermissionUncheckedUpdateWithoutUserPermissionsInput>
    create: XOR<PermissionCreateWithoutUserPermissionsInput, PermissionUncheckedCreateWithoutUserPermissionsInput>
    where?: PermissionWhereInput
  }

  export type PermissionUpdateToOneWithWhereWithoutUserPermissionsInput = {
    where?: PermissionWhereInput
    data: XOR<PermissionUpdateWithoutUserPermissionsInput, PermissionUncheckedUpdateWithoutUserPermissionsInput>
  }

  export type PermissionUpdateWithoutUserPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    rolePermissions?: RolePermissionUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutUserPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    rolePermissions?: RolePermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionCreateWithoutRolePermissionsInput = {
    id?: string
    name: string
    description?: string | null
    userPermissions?: UserPermissionCreateNestedManyWithoutPermissionInput
  }

  export type PermissionUncheckedCreateWithoutRolePermissionsInput = {
    id?: string
    name: string
    description?: string | null
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutPermissionInput
  }

  export type PermissionCreateOrConnectWithoutRolePermissionsInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
  }

  export type PermissionUpsertWithoutRolePermissionsInput = {
    update: XOR<PermissionUpdateWithoutRolePermissionsInput, PermissionUncheckedUpdateWithoutRolePermissionsInput>
    create: XOR<PermissionCreateWithoutRolePermissionsInput, PermissionUncheckedCreateWithoutRolePermissionsInput>
    where?: PermissionWhereInput
  }

  export type PermissionUpdateToOneWithWhereWithoutRolePermissionsInput = {
    where?: PermissionWhereInput
    data: XOR<PermissionUpdateWithoutRolePermissionsInput, PermissionUncheckedUpdateWithoutRolePermissionsInput>
  }

  export type PermissionUpdateWithoutRolePermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    userPermissions?: UserPermissionUpdateManyWithoutPermissionNestedInput
  }

  export type PermissionUncheckedUpdateWithoutRolePermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutPermissionNestedInput
  }

  export type AssetCreateWithoutCapitalImprovementsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutCapitalImprovementsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutCapitalImprovementsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutCapitalImprovementsInput, AssetUncheckedCreateWithoutCapitalImprovementsInput>
  }

  export type AssetUpsertWithoutCapitalImprovementsInput = {
    update: XOR<AssetUpdateWithoutCapitalImprovementsInput, AssetUncheckedUpdateWithoutCapitalImprovementsInput>
    create: XOR<AssetCreateWithoutCapitalImprovementsInput, AssetUncheckedCreateWithoutCapitalImprovementsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutCapitalImprovementsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutCapitalImprovementsInput, AssetUncheckedUpdateWithoutCapitalImprovementsInput>
  }

  export type AssetUpdateWithoutCapitalImprovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutCapitalImprovementsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type AssetCreateWithoutMaintenanceSchedulesInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutMaintenanceSchedulesInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutMaintenanceSchedulesInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutMaintenanceSchedulesInput, AssetUncheckedCreateWithoutMaintenanceSchedulesInput>
  }

  export type UserCreateWithoutCreatedSchedulesInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutCreatedSchedulesInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutCreatedSchedulesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedSchedulesInput, UserUncheckedCreateWithoutCreatedSchedulesInput>
  }

  export type UserCreateWithoutAssignedSchedulesInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutAssignedSchedulesInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutAssignedSchedulesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAssignedSchedulesInput, UserUncheckedCreateWithoutAssignedSchedulesInput>
  }

  export type MaintenanceTemplateCreateWithoutSchedulesInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy: UserCreateNestedOneWithoutCreatedTemplatesInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateUncheckedCreateWithoutSchedulesInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdById: string
    createdAt?: Date | string
    updatedAt?: Date | string
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutTemplateInput
  }

  export type MaintenanceTemplateCreateOrConnectWithoutSchedulesInput = {
    where: MaintenanceTemplateWhereUniqueInput
    create: XOR<MaintenanceTemplateCreateWithoutSchedulesInput, MaintenanceTemplateUncheckedCreateWithoutSchedulesInput>
  }

  export type MaintenanceCreateWithoutScheduleInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    asset: AssetCreateNestedOneWithoutMaintenanceRequestsInput
    requester: UserCreateNestedOneWithoutMaintenanceRequestsInput
    manager?: UserCreateNestedOneWithoutManagedMaintenanceInput
    assignedTo?: UserCreateNestedOneWithoutAssignedMaintenanceInput
    template?: MaintenanceTemplateCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateWithoutScheduleInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateOrConnectWithoutScheduleInput = {
    where: MaintenanceWhereUniqueInput
    create: XOR<MaintenanceCreateWithoutScheduleInput, MaintenanceUncheckedCreateWithoutScheduleInput>
  }

  export type MaintenanceCreateManyScheduleInputEnvelope = {
    data: MaintenanceCreateManyScheduleInput | MaintenanceCreateManyScheduleInput[]
    skipDuplicates?: boolean
  }

  export type AssetUpsertWithoutMaintenanceSchedulesInput = {
    update: XOR<AssetUpdateWithoutMaintenanceSchedulesInput, AssetUncheckedUpdateWithoutMaintenanceSchedulesInput>
    create: XOR<AssetCreateWithoutMaintenanceSchedulesInput, AssetUncheckedCreateWithoutMaintenanceSchedulesInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutMaintenanceSchedulesInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutMaintenanceSchedulesInput, AssetUncheckedUpdateWithoutMaintenanceSchedulesInput>
  }

  export type AssetUpdateWithoutMaintenanceSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutMaintenanceSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutCreatedSchedulesInput = {
    update: XOR<UserUpdateWithoutCreatedSchedulesInput, UserUncheckedUpdateWithoutCreatedSchedulesInput>
    create: XOR<UserCreateWithoutCreatedSchedulesInput, UserUncheckedCreateWithoutCreatedSchedulesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedSchedulesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedSchedulesInput, UserUncheckedUpdateWithoutCreatedSchedulesInput>
  }

  export type UserUpdateWithoutCreatedSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutAssignedSchedulesInput = {
    update: XOR<UserUpdateWithoutAssignedSchedulesInput, UserUncheckedUpdateWithoutAssignedSchedulesInput>
    create: XOR<UserCreateWithoutAssignedSchedulesInput, UserUncheckedCreateWithoutAssignedSchedulesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAssignedSchedulesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAssignedSchedulesInput, UserUncheckedUpdateWithoutAssignedSchedulesInput>
  }

  export type UserUpdateWithoutAssignedSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutAssignedSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type MaintenanceTemplateUpsertWithoutSchedulesInput = {
    update: XOR<MaintenanceTemplateUpdateWithoutSchedulesInput, MaintenanceTemplateUncheckedUpdateWithoutSchedulesInput>
    create: XOR<MaintenanceTemplateCreateWithoutSchedulesInput, MaintenanceTemplateUncheckedCreateWithoutSchedulesInput>
    where?: MaintenanceTemplateWhereInput
  }

  export type MaintenanceTemplateUpdateToOneWithWhereWithoutSchedulesInput = {
    where?: MaintenanceTemplateWhereInput
    data: XOR<MaintenanceTemplateUpdateWithoutSchedulesInput, MaintenanceTemplateUncheckedUpdateWithoutSchedulesInput>
  }

  export type MaintenanceTemplateUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneRequiredWithoutCreatedTemplatesNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceTemplateUncheckedUpdateWithoutSchedulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceUpsertWithWhereUniqueWithoutScheduleInput = {
    where: MaintenanceWhereUniqueInput
    update: XOR<MaintenanceUpdateWithoutScheduleInput, MaintenanceUncheckedUpdateWithoutScheduleInput>
    create: XOR<MaintenanceCreateWithoutScheduleInput, MaintenanceUncheckedCreateWithoutScheduleInput>
  }

  export type MaintenanceUpdateWithWhereUniqueWithoutScheduleInput = {
    where: MaintenanceWhereUniqueInput
    data: XOR<MaintenanceUpdateWithoutScheduleInput, MaintenanceUncheckedUpdateWithoutScheduleInput>
  }

  export type MaintenanceUpdateManyWithWhereWithoutScheduleInput = {
    where: MaintenanceScalarWhereInput
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyWithoutScheduleInput>
  }

  export type UserCreateWithoutCreatedTemplatesInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutCreatedTemplatesInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutCreatedTemplatesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedTemplatesInput, UserUncheckedCreateWithoutCreatedTemplatesInput>
  }

  export type MaintenanceScheduleCreateWithoutTemplateInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutMaintenanceSchedulesInput
    createdBy: UserCreateNestedOneWithoutCreatedSchedulesInput
    assignedTo?: UserCreateNestedOneWithoutAssignedSchedulesInput
    maintenanceTasks?: MaintenanceCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleUncheckedCreateWithoutTemplateInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    maintenanceTasks?: MaintenanceUncheckedCreateNestedManyWithoutScheduleInput
  }

  export type MaintenanceScheduleCreateOrConnectWithoutTemplateInput = {
    where: MaintenanceScheduleWhereUniqueInput
    create: XOR<MaintenanceScheduleCreateWithoutTemplateInput, MaintenanceScheduleUncheckedCreateWithoutTemplateInput>
  }

  export type MaintenanceScheduleCreateManyTemplateInputEnvelope = {
    data: MaintenanceScheduleCreateManyTemplateInput | MaintenanceScheduleCreateManyTemplateInput[]
    skipDuplicates?: boolean
  }

  export type MaintenanceCreateWithoutTemplateInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
    asset: AssetCreateNestedOneWithoutMaintenanceRequestsInput
    requester: UserCreateNestedOneWithoutMaintenanceRequestsInput
    manager?: UserCreateNestedOneWithoutManagedMaintenanceInput
    assignedTo?: UserCreateNestedOneWithoutAssignedMaintenanceInput
    schedule?: MaintenanceScheduleCreateNestedOneWithoutMaintenanceTasksInput
  }

  export type MaintenanceUncheckedCreateWithoutTemplateInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateOrConnectWithoutTemplateInput = {
    where: MaintenanceWhereUniqueInput
    create: XOR<MaintenanceCreateWithoutTemplateInput, MaintenanceUncheckedCreateWithoutTemplateInput>
  }

  export type MaintenanceCreateManyTemplateInputEnvelope = {
    data: MaintenanceCreateManyTemplateInput | MaintenanceCreateManyTemplateInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCreatedTemplatesInput = {
    update: XOR<UserUpdateWithoutCreatedTemplatesInput, UserUncheckedUpdateWithoutCreatedTemplatesInput>
    create: XOR<UserCreateWithoutCreatedTemplatesInput, UserUncheckedCreateWithoutCreatedTemplatesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedTemplatesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedTemplatesInput, UserUncheckedUpdateWithoutCreatedTemplatesInput>
  }

  export type UserUpdateWithoutCreatedTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedTemplatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type MaintenanceScheduleUpsertWithWhereUniqueWithoutTemplateInput = {
    where: MaintenanceScheduleWhereUniqueInput
    update: XOR<MaintenanceScheduleUpdateWithoutTemplateInput, MaintenanceScheduleUncheckedUpdateWithoutTemplateInput>
    create: XOR<MaintenanceScheduleCreateWithoutTemplateInput, MaintenanceScheduleUncheckedCreateWithoutTemplateInput>
  }

  export type MaintenanceScheduleUpdateWithWhereUniqueWithoutTemplateInput = {
    where: MaintenanceScheduleWhereUniqueInput
    data: XOR<MaintenanceScheduleUpdateWithoutTemplateInput, MaintenanceScheduleUncheckedUpdateWithoutTemplateInput>
  }

  export type MaintenanceScheduleUpdateManyWithWhereWithoutTemplateInput = {
    where: MaintenanceScheduleScalarWhereInput
    data: XOR<MaintenanceScheduleUpdateManyMutationInput, MaintenanceScheduleUncheckedUpdateManyWithoutTemplateInput>
  }

  export type MaintenanceUpsertWithWhereUniqueWithoutTemplateInput = {
    where: MaintenanceWhereUniqueInput
    update: XOR<MaintenanceUpdateWithoutTemplateInput, MaintenanceUncheckedUpdateWithoutTemplateInput>
    create: XOR<MaintenanceCreateWithoutTemplateInput, MaintenanceUncheckedCreateWithoutTemplateInput>
  }

  export type MaintenanceUpdateWithWhereUniqueWithoutTemplateInput = {
    where: MaintenanceWhereUniqueInput
    data: XOR<MaintenanceUpdateWithoutTemplateInput, MaintenanceUncheckedUpdateWithoutTemplateInput>
  }

  export type MaintenanceUpdateManyWithWhereWithoutTemplateInput = {
    where: MaintenanceScalarWhereInput
    data: XOR<MaintenanceUpdateManyMutationInput, MaintenanceUncheckedUpdateManyWithoutTemplateInput>
  }

  export type AssetCreateWithoutAuditsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutAuditsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutAuditsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutAuditsInput, AssetUncheckedCreateWithoutAuditsInput>
  }

  export type UserCreateWithoutAuditsPerformedInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutAuditsPerformedInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutAuditsPerformedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditsPerformedInput, UserUncheckedCreateWithoutAuditsPerformedInput>
  }

  export type AuditAssignmentCreateWithoutAuditsInput = {
    id?: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditAssignmentsInput
    assignedTo: UserCreateNestedOneWithoutAuditAssignmentsInput
    assignedBy: UserCreateNestedOneWithoutAuditAssignmentsMadeInput
  }

  export type AuditAssignmentUncheckedCreateWithoutAuditsInput = {
    id?: string
    assetId: string
    assignedToId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditAssignmentCreateOrConnectWithoutAuditsInput = {
    where: AuditAssignmentWhereUniqueInput
    create: XOR<AuditAssignmentCreateWithoutAuditsInput, AuditAssignmentUncheckedCreateWithoutAuditsInput>
  }

  export type AuditRequestCreateWithoutAuditsInput = {
    id?: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditRequestsInput
    requester: UserCreateNestedOneWithoutAuditRequestsInput
    manager?: UserCreateNestedOneWithoutAuditRequestsReviewedInput
  }

  export type AuditRequestUncheckedCreateWithoutAuditsInput = {
    id?: string
    assetId: string
    requesterId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditRequestCreateOrConnectWithoutAuditsInput = {
    where: AuditRequestWhereUniqueInput
    create: XOR<AuditRequestCreateWithoutAuditsInput, AuditRequestUncheckedCreateWithoutAuditsInput>
  }

  export type AssetUpsertWithoutAuditsInput = {
    update: XOR<AssetUpdateWithoutAuditsInput, AssetUncheckedUpdateWithoutAuditsInput>
    create: XOR<AssetCreateWithoutAuditsInput, AssetUncheckedCreateWithoutAuditsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutAuditsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutAuditsInput, AssetUncheckedUpdateWithoutAuditsInput>
  }

  export type AssetUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutAuditsPerformedInput = {
    update: XOR<UserUpdateWithoutAuditsPerformedInput, UserUncheckedUpdateWithoutAuditsPerformedInput>
    create: XOR<UserCreateWithoutAuditsPerformedInput, UserUncheckedCreateWithoutAuditsPerformedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditsPerformedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditsPerformedInput, UserUncheckedUpdateWithoutAuditsPerformedInput>
  }

  export type UserUpdateWithoutAuditsPerformedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditsPerformedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type AuditAssignmentUpsertWithoutAuditsInput = {
    update: XOR<AuditAssignmentUpdateWithoutAuditsInput, AuditAssignmentUncheckedUpdateWithoutAuditsInput>
    create: XOR<AuditAssignmentCreateWithoutAuditsInput, AuditAssignmentUncheckedCreateWithoutAuditsInput>
    where?: AuditAssignmentWhereInput
  }

  export type AuditAssignmentUpdateToOneWithWhereWithoutAuditsInput = {
    where?: AuditAssignmentWhereInput
    data: XOR<AuditAssignmentUpdateWithoutAuditsInput, AuditAssignmentUncheckedUpdateWithoutAuditsInput>
  }

  export type AuditAssignmentUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedTo?: UserUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedBy?: UserUpdateOneRequiredWithoutAuditAssignmentsMadeNestedInput
  }

  export type AuditAssignmentUncheckedUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditRequestUpsertWithoutAuditsInput = {
    update: XOR<AuditRequestUpdateWithoutAuditsInput, AuditRequestUncheckedUpdateWithoutAuditsInput>
    create: XOR<AuditRequestCreateWithoutAuditsInput, AuditRequestUncheckedCreateWithoutAuditsInput>
    where?: AuditRequestWhereInput
  }

  export type AuditRequestUpdateToOneWithWhereWithoutAuditsInput = {
    where?: AuditRequestWhereInput
    data: XOR<AuditRequestUpdateWithoutAuditsInput, AuditRequestUncheckedUpdateWithoutAuditsInput>
  }

  export type AuditRequestUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutAuditRequestsNestedInput
    manager?: UserUpdateOneWithoutAuditRequestsReviewedNestedInput
  }

  export type AuditRequestUncheckedUpdateWithoutAuditsInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetCreateWithoutAuditAssignmentsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutAuditAssignmentsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutAuditAssignmentsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutAuditAssignmentsInput, AssetUncheckedCreateWithoutAuditAssignmentsInput>
  }

  export type UserCreateWithoutAuditAssignmentsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutAuditAssignmentsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutAuditAssignmentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditAssignmentsInput, UserUncheckedCreateWithoutAuditAssignmentsInput>
  }

  export type UserCreateWithoutAuditAssignmentsMadeInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutAuditAssignmentsMadeInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutAuditAssignmentsMadeInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditAssignmentsMadeInput, UserUncheckedCreateWithoutAuditAssignmentsMadeInput>
  }

  export type AssetAuditCreateWithoutAssignmentInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditsInput
    auditor?: UserCreateNestedOneWithoutAuditsPerformedInput
    request?: AuditRequestCreateNestedOneWithoutAuditsInput
  }

  export type AssetAuditUncheckedCreateWithoutAssignmentInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditCreateOrConnectWithoutAssignmentInput = {
    where: AssetAuditWhereUniqueInput
    create: XOR<AssetAuditCreateWithoutAssignmentInput, AssetAuditUncheckedCreateWithoutAssignmentInput>
  }

  export type AssetAuditCreateManyAssignmentInputEnvelope = {
    data: AssetAuditCreateManyAssignmentInput | AssetAuditCreateManyAssignmentInput[]
    skipDuplicates?: boolean
  }

  export type AssetUpsertWithoutAuditAssignmentsInput = {
    update: XOR<AssetUpdateWithoutAuditAssignmentsInput, AssetUncheckedUpdateWithoutAuditAssignmentsInput>
    create: XOR<AssetCreateWithoutAuditAssignmentsInput, AssetUncheckedCreateWithoutAuditAssignmentsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutAuditAssignmentsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutAuditAssignmentsInput, AssetUncheckedUpdateWithoutAuditAssignmentsInput>
  }

  export type AssetUpdateWithoutAuditAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutAuditAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutAuditAssignmentsInput = {
    update: XOR<UserUpdateWithoutAuditAssignmentsInput, UserUncheckedUpdateWithoutAuditAssignmentsInput>
    create: XOR<UserCreateWithoutAuditAssignmentsInput, UserUncheckedCreateWithoutAuditAssignmentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditAssignmentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditAssignmentsInput, UserUncheckedUpdateWithoutAuditAssignmentsInput>
  }

  export type UserUpdateWithoutAuditAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditAssignmentsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutAuditAssignmentsMadeInput = {
    update: XOR<UserUpdateWithoutAuditAssignmentsMadeInput, UserUncheckedUpdateWithoutAuditAssignmentsMadeInput>
    create: XOR<UserCreateWithoutAuditAssignmentsMadeInput, UserUncheckedCreateWithoutAuditAssignmentsMadeInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditAssignmentsMadeInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditAssignmentsMadeInput, UserUncheckedUpdateWithoutAuditAssignmentsMadeInput>
  }

  export type UserUpdateWithoutAuditAssignmentsMadeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditAssignmentsMadeInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type AssetAuditUpsertWithWhereUniqueWithoutAssignmentInput = {
    where: AssetAuditWhereUniqueInput
    update: XOR<AssetAuditUpdateWithoutAssignmentInput, AssetAuditUncheckedUpdateWithoutAssignmentInput>
    create: XOR<AssetAuditCreateWithoutAssignmentInput, AssetAuditUncheckedCreateWithoutAssignmentInput>
  }

  export type AssetAuditUpdateWithWhereUniqueWithoutAssignmentInput = {
    where: AssetAuditWhereUniqueInput
    data: XOR<AssetAuditUpdateWithoutAssignmentInput, AssetAuditUncheckedUpdateWithoutAssignmentInput>
  }

  export type AssetAuditUpdateManyWithWhereWithoutAssignmentInput = {
    where: AssetAuditScalarWhereInput
    data: XOR<AssetAuditUpdateManyMutationInput, AssetAuditUncheckedUpdateManyWithoutAssignmentInput>
  }

  export type AssetCreateWithoutAuditRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationCreateNestedManyWithoutAssetInput
    history?: AssetHistoryCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalCreateNestedManyWithoutAssetInput
    documents?: DocumentCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssetInput
    transferRequests?: TransferCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementCreateNestedManyWithoutAssetInput
    audits?: AssetAuditCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssetInput
  }

  export type AssetUncheckedCreateWithoutAuditRequestsInput = {
    id?: string
    name: string
    description?: string | null
    serialNumber: string
    purchaseDate: Date | string
    purchasePrice: number
    currentValue: number
    status?: string
    location?: string | null
    department?: string | null
    category?: string | null
    type?: string | null
    supplier?: string | null
    warrantyExpiry?: Date | string | null
    lastMaintenance?: Date | string | null
    nextMaintenance?: Date | string | null
    depreciableCost?: number | null
    salvageValue?: number | null
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: Date | string | null
    lastAuditDate?: Date | string | null
    nextAuditDate?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    assetDepreciations?: AssetDepreciationUncheckedCreateNestedManyWithoutAssetInput
    history?: AssetHistoryUncheckedCreateNestedManyWithoutAssetInput
    depreciations?: DepreciationUncheckedCreateNestedManyWithoutAssetInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutAssetInput
    documents?: DocumentUncheckedCreateNestedManyWithoutAssetInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutAssetInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssetInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutAssetInput
    linkedTo?: LinkedAssetUncheckedCreateNestedManyWithoutToAssetInput
    linkedFrom?: LinkedAssetUncheckedCreateNestedManyWithoutFromAssetInput
    capitalImprovements?: CapitalImprovementUncheckedCreateNestedManyWithoutAssetInput
    audits?: AssetAuditUncheckedCreateNestedManyWithoutAssetInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssetInput
  }

  export type AssetCreateOrConnectWithoutAuditRequestsInput = {
    where: AssetWhereUniqueInput
    create: XOR<AssetCreateWithoutAuditRequestsInput, AssetUncheckedCreateWithoutAuditRequestsInput>
  }

  export type UserCreateWithoutAuditRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequestsReviewed?: AuditRequestCreateNestedManyWithoutManagerInput
  }

  export type UserUncheckedCreateWithoutAuditRequestsInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequestsReviewed?: AuditRequestUncheckedCreateNestedManyWithoutManagerInput
  }

  export type UserCreateOrConnectWithoutAuditRequestsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditRequestsInput, UserUncheckedCreateWithoutAuditRequestsInput>
  }

  export type UserCreateWithoutAuditRequestsReviewedInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalCreateNestedManyWithoutRequesterInput
    notifications?: NotificationCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestCreateNestedManyWithoutRequesterInput
  }

  export type UserUncheckedCreateWithoutAuditRequestsReviewedInput = {
    id?: string
    name?: string | null
    email: string
    password: string
    role?: $Enums.Role
    emailVerified?: Date | string | null
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roleChangeLogs?: RoleChangeLogUncheckedCreateNestedManyWithoutUserInput
    roleChangesMade?: RoleChangeLogUncheckedCreateNestedManyWithoutChangedByUserInput
    userPermissions?: UserPermissionUncheckedCreateNestedManyWithoutUserInput
    maintenanceRequests?: MaintenanceUncheckedCreateNestedManyWithoutRequesterInput
    managedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutManagerInput
    assignedMaintenance?: MaintenanceUncheckedCreateNestedManyWithoutAssignedToInput
    createdSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutCreatedByInput
    assignedSchedules?: MaintenanceScheduleUncheckedCreateNestedManyWithoutAssignedToInput
    createdTemplates?: MaintenanceTemplateUncheckedCreateNestedManyWithoutCreatedByInput
    transferRequests?: TransferUncheckedCreateNestedManyWithoutRequesterInput
    managedTransfers?: TransferUncheckedCreateNestedManyWithoutManagerInput
    disposalRequests?: DisposalUncheckedCreateNestedManyWithoutRequesterInput
    notifications?: NotificationUncheckedCreateNestedManyWithoutUserInput
    auditsPerformed?: AssetAuditUncheckedCreateNestedManyWithoutAuditorInput
    auditAssignments?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedToInput
    auditAssignmentsMade?: AuditAssignmentUncheckedCreateNestedManyWithoutAssignedByInput
    auditRequests?: AuditRequestUncheckedCreateNestedManyWithoutRequesterInput
  }

  export type UserCreateOrConnectWithoutAuditRequestsReviewedInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAuditRequestsReviewedInput, UserUncheckedCreateWithoutAuditRequestsReviewedInput>
  }

  export type AssetAuditCreateWithoutRequestInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
    asset: AssetCreateNestedOneWithoutAuditsInput
    auditor?: UserCreateNestedOneWithoutAuditsPerformedInput
    assignment?: AuditAssignmentCreateNestedOneWithoutAuditsInput
  }

  export type AssetAuditUncheckedCreateWithoutRequestInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditCreateOrConnectWithoutRequestInput = {
    where: AssetAuditWhereUniqueInput
    create: XOR<AssetAuditCreateWithoutRequestInput, AssetAuditUncheckedCreateWithoutRequestInput>
  }

  export type AssetAuditCreateManyRequestInputEnvelope = {
    data: AssetAuditCreateManyRequestInput | AssetAuditCreateManyRequestInput[]
    skipDuplicates?: boolean
  }

  export type AssetUpsertWithoutAuditRequestsInput = {
    update: XOR<AssetUpdateWithoutAuditRequestsInput, AssetUncheckedUpdateWithoutAuditRequestsInput>
    create: XOR<AssetCreateWithoutAuditRequestsInput, AssetUncheckedCreateWithoutAuditRequestsInput>
    where?: AssetWhereInput
  }

  export type AssetUpdateToOneWithWhereWithoutAuditRequestsInput = {
    where?: AssetWhereInput
    data: XOR<AssetUpdateWithoutAuditRequestsInput, AssetUncheckedUpdateWithoutAuditRequestsInput>
  }

  export type AssetUpdateWithoutAuditRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUpdateManyWithoutAssetNestedInput
    documents?: DocumentUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssetNestedInput
  }

  export type AssetUncheckedUpdateWithoutAuditRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    serialNumber?: StringFieldUpdateOperationsInput | string
    purchaseDate?: DateTimeFieldUpdateOperationsInput | Date | string
    purchasePrice?: FloatFieldUpdateOperationsInput | number
    currentValue?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    location?: NullableStringFieldUpdateOperationsInput | string | null
    department?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    supplier?: NullableStringFieldUpdateOperationsInput | string | null
    warrantyExpiry?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextMaintenance?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    depreciableCost?: NullableFloatFieldUpdateOperationsInput | number | null
    salvageValue?: NullableFloatFieldUpdateOperationsInput | number | null
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    depreciationStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assetDepreciations?: AssetDepreciationUncheckedUpdateManyWithoutAssetNestedInput
    history?: AssetHistoryUncheckedUpdateManyWithoutAssetNestedInput
    depreciations?: DepreciationUncheckedUpdateManyWithoutAssetNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutAssetNestedInput
    documents?: DocumentUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutAssetNestedInput
    maintenanceSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssetNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutAssetNestedInput
    linkedTo?: LinkedAssetUncheckedUpdateManyWithoutToAssetNestedInput
    linkedFrom?: LinkedAssetUncheckedUpdateManyWithoutFromAssetNestedInput
    capitalImprovements?: CapitalImprovementUncheckedUpdateManyWithoutAssetNestedInput
    audits?: AssetAuditUncheckedUpdateManyWithoutAssetNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssetNestedInput
  }

  export type UserUpsertWithoutAuditRequestsInput = {
    update: XOR<UserUpdateWithoutAuditRequestsInput, UserUncheckedUpdateWithoutAuditRequestsInput>
    create: XOR<UserCreateWithoutAuditRequestsInput, UserUncheckedCreateWithoutAuditRequestsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditRequestsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditRequestsInput, UserUncheckedUpdateWithoutAuditRequestsInput>
  }

  export type UserUpdateWithoutAuditRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequestsReviewed?: AuditRequestUpdateManyWithoutManagerNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequestsReviewed?: AuditRequestUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type UserUpsertWithoutAuditRequestsReviewedInput = {
    update: XOR<UserUpdateWithoutAuditRequestsReviewedInput, UserUncheckedUpdateWithoutAuditRequestsReviewedInput>
    create: XOR<UserCreateWithoutAuditRequestsReviewedInput, UserUncheckedCreateWithoutAuditRequestsReviewedInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAuditRequestsReviewedInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAuditRequestsReviewedInput, UserUncheckedUpdateWithoutAuditRequestsReviewedInput>
  }

  export type UserUpdateWithoutAuditRequestsReviewedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUpdateManyWithoutRequesterNestedInput
  }

  export type UserUncheckedUpdateWithoutAuditRequestsReviewedInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    emailVerified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleChangeLogs?: RoleChangeLogUncheckedUpdateManyWithoutUserNestedInput
    roleChangesMade?: RoleChangeLogUncheckedUpdateManyWithoutChangedByUserNestedInput
    userPermissions?: UserPermissionUncheckedUpdateManyWithoutUserNestedInput
    maintenanceRequests?: MaintenanceUncheckedUpdateManyWithoutRequesterNestedInput
    managedMaintenance?: MaintenanceUncheckedUpdateManyWithoutManagerNestedInput
    assignedMaintenance?: MaintenanceUncheckedUpdateManyWithoutAssignedToNestedInput
    createdSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByNestedInput
    assignedSchedules?: MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToNestedInput
    createdTemplates?: MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByNestedInput
    transferRequests?: TransferUncheckedUpdateManyWithoutRequesterNestedInput
    managedTransfers?: TransferUncheckedUpdateManyWithoutManagerNestedInput
    disposalRequests?: DisposalUncheckedUpdateManyWithoutRequesterNestedInput
    notifications?: NotificationUncheckedUpdateManyWithoutUserNestedInput
    auditsPerformed?: AssetAuditUncheckedUpdateManyWithoutAuditorNestedInput
    auditAssignments?: AuditAssignmentUncheckedUpdateManyWithoutAssignedToNestedInput
    auditAssignmentsMade?: AuditAssignmentUncheckedUpdateManyWithoutAssignedByNestedInput
    auditRequests?: AuditRequestUncheckedUpdateManyWithoutRequesterNestedInput
  }

  export type AssetAuditUpsertWithWhereUniqueWithoutRequestInput = {
    where: AssetAuditWhereUniqueInput
    update: XOR<AssetAuditUpdateWithoutRequestInput, AssetAuditUncheckedUpdateWithoutRequestInput>
    create: XOR<AssetAuditCreateWithoutRequestInput, AssetAuditUncheckedCreateWithoutRequestInput>
  }

  export type AssetAuditUpdateWithWhereUniqueWithoutRequestInput = {
    where: AssetAuditWhereUniqueInput
    data: XOR<AssetAuditUpdateWithoutRequestInput, AssetAuditUncheckedUpdateWithoutRequestInput>
  }

  export type AssetAuditUpdateManyWithWhereWithoutRequestInput = {
    where: AssetAuditScalarWhereInput
    data: XOR<AssetAuditUpdateManyMutationInput, AssetAuditUncheckedUpdateManyWithoutRequestInput>
  }

  export type RoleChangeLogCreateManyUserInput = {
    id?: string
    oldRole: string
    newRole: string
    changedBy: string
    changedAt?: Date | string
  }

  export type RoleChangeLogCreateManyChangedByUserInput = {
    id?: string
    userId: string
    oldRole: string
    newRole: string
    changedAt?: Date | string
  }

  export type UserPermissionCreateManyUserInput = {
    id?: string
    permissionId: string
    granted: boolean
    createdAt?: Date | string
  }

  export type MaintenanceCreateManyRequesterInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateManyManagerInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceCreateManyAssignedToInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceScheduleCreateManyCreatedByInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaintenanceScheduleCreateManyAssignedToInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaintenanceTemplateCreateManyCreatedByInput = {
    id?: string
    name: string
    description?: string | null
    maintenanceType?: $Enums.MaintenanceType
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    instructions?: string | null
    checklistItems?: string | null
    requiredSkills?: string | null
    safetyNotes?: string | null
    toolsRequired?: string | null
    partsRequired?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransferCreateManyRequesterInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    managerId?: string | null
  }

  export type TransferCreateManyManagerInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
  }

  export type DisposalCreateManyRequesterInput = {
    id?: string
    assetId: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
  }

  export type NotificationCreateManyUserInput = {
    id?: string
    message: string
    type?: string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: boolean
    createdAt?: Date | string
  }

  export type AssetAuditCreateManyAuditorInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditAssignmentCreateManyAssignedToInput = {
    id?: string
    assetId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditAssignmentCreateManyAssignedByInput = {
    id?: string
    assetId: string
    assignedToId: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditRequestCreateManyRequesterInput = {
    id?: string
    assetId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditRequestCreateManyManagerInput = {
    id?: string
    assetId: string
    requesterId: string
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleChangeLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedByUser?: UserUpdateOneRequiredWithoutRoleChangesMadeNestedInput
  }

  export type RoleChangeLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedBy?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleChangeLogUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedBy?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleChangeLogUpdateWithoutChangedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRoleChangeLogsNestedInput
  }

  export type RoleChangeLogUncheckedUpdateWithoutChangedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleChangeLogUncheckedUpdateManyWithoutChangedByUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    oldRole?: StringFieldUpdateOperationsInput | string
    newRole?: StringFieldUpdateOperationsInput | string
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPermissionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permission?: PermissionUpdateOneRequiredWithoutUserPermissionsNestedInput
  }

  export type UserPermissionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPermissionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    permissionId?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedMaintenanceNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedMaintenanceNestedInput
    schedule?: MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUpdateWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedMaintenanceNestedInput
    schedule?: MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUpdateWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedMaintenanceNestedInput
    schedule?: MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceScheduleUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedSchedulesNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutSchedulesNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceScheduleUpdateWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSchedulesNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutSchedulesNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceTemplateUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: MaintenanceScheduleUpdateManyWithoutTemplateNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceTemplateUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    schedules?: MaintenanceScheduleUncheckedUpdateManyWithoutTemplateNestedInput
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutTemplateNestedInput
  }

  export type MaintenanceTemplateUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    requiredSkills?: NullableStringFieldUpdateOperationsInput | string | null
    safetyNotes?: NullableStringFieldUpdateOperationsInput | string | null
    toolsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    partsRequired?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutTransferRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedTransfersNestedInput
  }

  export type TransferUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferUpdateWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutTransferRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutTransferRequestsNestedInput
  }

  export type TransferUncheckedUpdateWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferUncheckedUpdateManyWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DisposalUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
    asset?: AssetUpdateOneRequiredWithoutDisposalRequestsNestedInput
  }

  export type DisposalUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type DisposalUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type NotificationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type NotificationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    meta?: NullableJsonNullValueInput | InputJsonValue
    read?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUpdateWithoutAuditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditsNestedInput
    assignment?: AuditAssignmentUpdateOneWithoutAuditsNestedInput
    request?: AuditRequestUpdateOneWithoutAuditsNestedInput
  }

  export type AssetAuditUncheckedUpdateWithoutAuditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUncheckedUpdateManyWithoutAuditorInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditAssignmentUpdateWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedBy?: UserUpdateOneRequiredWithoutAuditAssignmentsMadeNestedInput
    audits?: AssetAuditUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateManyWithoutAssignedToInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditAssignmentUpdateWithoutAssignedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedTo?: UserUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    audits?: AssetAuditUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateWithoutAssignedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateManyWithoutAssignedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditRequestUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditRequestsNestedInput
    manager?: UserUpdateOneWithoutAuditRequestsReviewedNestedInput
    audits?: AssetAuditUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateManyWithoutRequesterInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditRequestUpdateWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutAuditRequestsNestedInput
    audits?: AssetAuditUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateManyWithoutManagerInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetDepreciationCreateManyAssetInput = {
    id?: string
    amount: number
    date: Date | string
    method: string
    usefulLife: number
    salvageValue: number
    depreciationRate?: number | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetHistoryCreateManyAssetInput = {
    id?: string
    field: string
    oldValue?: string | null
    newValue?: string | null
    changedAt?: Date | string
    changedBy?: string | null
  }

  export type DepreciationCreateManyAssetInput = {
    id?: string
    amount: number
    date: Date | string
    createdAt?: Date | string
    depreciationRate: number
    description?: string | null
    method: string
    salvageValue: number
    updatedAt?: Date | string
    usefulLife: number
  }

  export type DisposalCreateManyAssetInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    actualValue?: number | null
    expectedValue: number
    requesterId: string
    method: $Enums.DisposalMethod
    status?: $Enums.DisposalStatus
  }

  export type DocumentCreateManyAssetInput = {
    id?: string
    type: $Enums.DocumentType
    url: string
    fileName?: string | null
    fileSize?: number | null
    filePath?: string | null
    mimeType?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type MaintenanceCreateManyAssetInput = {
    id?: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceScheduleCreateManyAssetInput = {
    id?: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    templateId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type TransferCreateManyAssetInput = {
    id?: string
    reason: string
    createdAt?: Date | string
    updatedAt?: Date | string
    fromDepartment: string
    requesterId: string
    toDepartment: string
    status?: $Enums.TransferStatus
    managerReason?: string | null
    managerId?: string | null
  }

  export type LinkedAssetCreateManyToAssetInput = {
    id?: string
    fromAssetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LinkedAssetCreateManyFromAssetInput = {
    id?: string
    toAssetId: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CapitalImprovementCreateManyAssetInput = {
    id?: string
    description: string
    improvementDate: Date | string
    cost: number
    usefulLifeMonths?: number | null
    depreciationMethod?: $Enums.DepreciationMethodEnum | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditCreateManyAssetInput = {
    id?: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditAssignmentCreateManyAssetInput = {
    id?: string
    assignedToId: string
    assignedById: string
    title: string
    description?: string | null
    priority?: $Enums.MaintenancePriority
    dueDate: Date | string
    scheduledDate?: Date | string | null
    status?: $Enums.AuditAssignmentStatus
    instructions?: string | null
    checklistItems?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    acceptedAt?: Date | string | null
    startedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    cancellationReason?: string | null
    notificationSent?: boolean
    remindersSent?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AuditRequestCreateManyAssetInput = {
    id?: string
    requesterId: string
    managerId?: string | null
    title: string
    reason: string
    urgency?: $Enums.MaintenancePriority
    requestedDate: Date | string
    status?: $Enums.AuditRequestStatus
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    approvedBy?: string | null
    rejectionReason?: string | null
    description?: string | null
    expectedFindings?: string | null
    attachments?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetDepreciationUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetDepreciationUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetDepreciationUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    method?: StringFieldUpdateOperationsInput | string
    usefulLife?: IntFieldUpdateOperationsInput | number
    salvageValue?: FloatFieldUpdateOperationsInput | number
    depreciationRate?: NullableFloatFieldUpdateOperationsInput | number | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetHistoryUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssetHistoryUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssetHistoryUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    field?: StringFieldUpdateOperationsInput | string
    oldValue?: NullableStringFieldUpdateOperationsInput | string | null
    newValue?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DepreciationUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
  }

  export type DepreciationUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
  }

  export type DepreciationUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    depreciationRate?: FloatFieldUpdateOperationsInput | number
    description?: NullableStringFieldUpdateOperationsInput | string | null
    method?: StringFieldUpdateOperationsInput | string
    salvageValue?: FloatFieldUpdateOperationsInput | number
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usefulLife?: IntFieldUpdateOperationsInput | number
  }

  export type DisposalUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
    requester?: UserUpdateOneRequiredWithoutDisposalRequestsNestedInput
  }

  export type DisposalUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    requesterId?: StringFieldUpdateOperationsInput | string
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type DisposalUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    actualValue?: NullableFloatFieldUpdateOperationsInput | number | null
    expectedValue?: FloatFieldUpdateOperationsInput | number
    requesterId?: StringFieldUpdateOperationsInput | string
    method?: EnumDisposalMethodFieldUpdateOperationsInput | $Enums.DisposalMethod
    status?: EnumDisposalStatusFieldUpdateOperationsInput | $Enums.DisposalStatus
  }

  export type DocumentUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type DocumentUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumDocumentTypeFieldUpdateOperationsInput | $Enums.DocumentType
    url?: StringFieldUpdateOperationsInput | string
    fileName?: NullableStringFieldUpdateOperationsInput | string | null
    fileSize?: NullableIntFieldUpdateOperationsInput | number | null
    filePath?: NullableStringFieldUpdateOperationsInput | string | null
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    meta?: NullableJsonNullValueInput | InputJsonValue
  }

  export type MaintenanceUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    requester?: UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedMaintenanceNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedMaintenanceNestedInput
    schedule?: MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceScheduleUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneRequiredWithoutCreatedSchedulesNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedSchedulesNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutSchedulesNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type TransferUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    requester?: UserUpdateOneRequiredWithoutTransferRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedTransfersNestedInput
  }

  export type TransferUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TransferUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromDepartment?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    toDepartment?: StringFieldUpdateOperationsInput | string
    status?: EnumTransferStatusFieldUpdateOperationsInput | $Enums.TransferStatus
    managerReason?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LinkedAssetUpdateWithoutToAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromAsset?: AssetUpdateOneRequiredWithoutLinkedFromNestedInput
  }

  export type LinkedAssetUncheckedUpdateWithoutToAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromAssetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LinkedAssetUncheckedUpdateManyWithoutToAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromAssetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LinkedAssetUpdateWithoutFromAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    toAsset?: AssetUpdateOneRequiredWithoutLinkedToNestedInput
  }

  export type LinkedAssetUncheckedUpdateWithoutFromAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    toAssetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LinkedAssetUncheckedUpdateManyWithoutFromAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    toAssetId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CapitalImprovementUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CapitalImprovementUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CapitalImprovementUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    improvementDate?: DateTimeFieldUpdateOperationsInput | Date | string
    cost?: FloatFieldUpdateOperationsInput | number
    usefulLifeMonths?: NullableIntFieldUpdateOperationsInput | number | null
    depreciationMethod?: NullableEnumDepreciationMethodEnumFieldUpdateOperationsInput | $Enums.DepreciationMethodEnum | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    auditor?: UserUpdateOneWithoutAuditsPerformedNestedInput
    assignment?: AuditAssignmentUpdateOneWithoutAuditsNestedInput
    request?: AuditRequestUpdateOneWithoutAuditsNestedInput
  }

  export type AssetAuditUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditAssignmentUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedTo?: UserUpdateOneRequiredWithoutAuditAssignmentsNestedInput
    assignedBy?: UserUpdateOneRequiredWithoutAuditAssignmentsMadeNestedInput
    audits?: AssetAuditUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutAssignmentNestedInput
  }

  export type AuditAssignmentUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    assignedToId?: StringFieldUpdateOperationsInput | string
    assignedById?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    dueDate?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumAuditAssignmentStatusFieldUpdateOperationsInput | $Enums.AuditAssignmentStatus
    instructions?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    notificationSent?: BoolFieldUpdateOperationsInput | boolean
    remindersSent?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditRequestUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    requester?: UserUpdateOneRequiredWithoutAuditRequestsNestedInput
    manager?: UserUpdateOneWithoutAuditRequestsReviewedNestedInput
    audits?: AssetAuditUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    audits?: AssetAuditUncheckedUpdateManyWithoutRequestNestedInput
  }

  export type AuditRequestUncheckedUpdateManyWithoutAssetInput = {
    id?: StringFieldUpdateOperationsInput | string
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    reason?: StringFieldUpdateOperationsInput | string
    urgency?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requestedDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: EnumAuditRequestStatusFieldUpdateOperationsInput | $Enums.AuditRequestStatus
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    approvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    rejectionReason?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    expectedFindings?: NullableStringFieldUpdateOperationsInput | string | null
    attachments?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPermissionCreateManyPermissionInput = {
    id?: string
    userId: string
    granted: boolean
    createdAt?: Date | string
  }

  export type RolePermissionCreateManyPermissionInput = {
    id?: string
    role: $Enums.Role
  }

  export type UserPermissionUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserPermissionsNestedInput
  }

  export type UserPermissionUncheckedUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserPermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    granted?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RolePermissionUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
  }

  export type RolePermissionUncheckedUpdateWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
  }

  export type RolePermissionUncheckedUpdateManyWithoutPermissionInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
  }

  export type MaintenanceCreateManyScheduleInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    templateId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceUpdateWithoutScheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedMaintenanceNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedMaintenanceNestedInput
    template?: MaintenanceTemplateUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateWithoutScheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyWithoutScheduleInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceScheduleCreateManyTemplateInput = {
    id?: string
    assetId: string
    title: string
    description?: string | null
    frequency: $Enums.ScheduleFrequency
    customInterval?: number | null
    priority?: $Enums.MaintenancePriority
    estimatedHours?: number | null
    status?: $Enums.ScheduleStatus
    createdById: string
    assignedToId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    lastGenerated?: Date | string | null
    nextDue?: Date | string | null
    leadTimeDays?: number
    autoAssign?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MaintenanceCreateManyTemplateInput = {
    id?: string
    assetId: string
    description: string
    cost?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    completedAt?: Date | string | null
    scheduledDate?: Date | string | null
    priority: $Enums.MaintenancePriority
    requesterId: string
    managerId?: string | null
    status?: $Enums.MaintenanceStatus
    notes?: string | null
    maintenanceType?: $Enums.MaintenanceType
    scheduleId?: string | null
    assignedToId?: string | null
    estimatedHours?: number | null
    actualHours?: number | null
    checklistItems?: string | null
    issueType?: string | null
    urgencyLevel?: string | null
    reportedBy?: string | null
    assetDowntime?: boolean
    impactDescription?: string | null
    photoUrls?: string | null
    workPerformed?: string | null
    partsUsed?: string | null
    laborHours?: number | null
    partsCost?: number | null
    laborCost?: number | null
    totalCost?: number | null
    workStartedAt?: Date | string | null
    workCompletedAt?: Date | string | null
    technicianNotes?: string | null
    managerReviewNotes?: string | null
    finalApprovedAt?: Date | string | null
    finalApprovedBy?: string | null
    workPhotos?: string | null
  }

  export type MaintenanceScheduleUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutMaintenanceSchedulesNestedInput
    createdBy?: UserUpdateOneRequiredWithoutCreatedSchedulesNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedSchedulesNestedInput
    maintenanceTasks?: MaintenanceUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    maintenanceTasks?: MaintenanceUncheckedUpdateManyWithoutScheduleNestedInput
  }

  export type MaintenanceScheduleUncheckedUpdateManyWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: EnumScheduleFrequencyFieldUpdateOperationsInput | $Enums.ScheduleFrequency
    customInterval?: NullableIntFieldUpdateOperationsInput | number | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: EnumScheduleStatusFieldUpdateOperationsInput | $Enums.ScheduleStatus
    createdById?: StringFieldUpdateOperationsInput | string
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastGenerated?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    nextDue?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    leadTimeDays?: IntFieldUpdateOperationsInput | number
    autoAssign?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MaintenanceUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
    asset?: AssetUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    requester?: UserUpdateOneRequiredWithoutMaintenanceRequestsNestedInput
    manager?: UserUpdateOneWithoutManagedMaintenanceNestedInput
    assignedTo?: UserUpdateOneWithoutAssignedMaintenanceNestedInput
    schedule?: MaintenanceScheduleUpdateOneWithoutMaintenanceTasksNestedInput
  }

  export type MaintenanceUncheckedUpdateWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MaintenanceUncheckedUpdateManyWithoutTemplateInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cost?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: EnumMaintenancePriorityFieldUpdateOperationsInput | $Enums.MaintenancePriority
    requesterId?: StringFieldUpdateOperationsInput | string
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumMaintenanceStatusFieldUpdateOperationsInput | $Enums.MaintenanceStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    maintenanceType?: EnumMaintenanceTypeFieldUpdateOperationsInput | $Enums.MaintenanceType
    scheduleId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedToId?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedHours?: NullableFloatFieldUpdateOperationsInput | number | null
    actualHours?: NullableFloatFieldUpdateOperationsInput | number | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    issueType?: NullableStringFieldUpdateOperationsInput | string | null
    urgencyLevel?: NullableStringFieldUpdateOperationsInput | string | null
    reportedBy?: NullableStringFieldUpdateOperationsInput | string | null
    assetDowntime?: BoolFieldUpdateOperationsInput | boolean
    impactDescription?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    workPerformed?: NullableStringFieldUpdateOperationsInput | string | null
    partsUsed?: NullableStringFieldUpdateOperationsInput | string | null
    laborHours?: NullableFloatFieldUpdateOperationsInput | number | null
    partsCost?: NullableFloatFieldUpdateOperationsInput | number | null
    laborCost?: NullableFloatFieldUpdateOperationsInput | number | null
    totalCost?: NullableFloatFieldUpdateOperationsInput | number | null
    workStartedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    workCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    technicianNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerReviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    finalApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finalApprovedBy?: NullableStringFieldUpdateOperationsInput | string | null
    workPhotos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AssetAuditCreateManyAssignmentInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    requestId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditUpdateWithoutAssignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditsNestedInput
    auditor?: UserUpdateOneWithoutAuditsPerformedNestedInput
    request?: AuditRequestUpdateOneWithoutAuditsNestedInput
  }

  export type AssetAuditUncheckedUpdateWithoutAssignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUncheckedUpdateManyWithoutAssignmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditCreateManyRequestInput = {
    id?: string
    assetId: string
    auditDate: Date | string
    auditedBy: string
    auditorId?: string | null
    status?: $Enums.AuditStatus
    workflowStatus?: $Enums.AuditWorkflowStatus
    condition?: $Enums.AuditCondition | null
    locationVerified?: boolean
    actualLocation?: string | null
    notes?: string | null
    discrepancies?: string | null
    recommendations?: string | null
    checklistItems?: string | null
    discrepancyResolved?: boolean
    resolvedDate?: Date | string | null
    resolvedBy?: string | null
    resolutionNotes?: string | null
    photoUrls?: string | null
    nextAuditDate?: Date | string | null
    assignmentId?: string | null
    reviewedBy?: string | null
    reviewedAt?: Date | string | null
    reviewNotes?: string | null
    managerApproval?: boolean | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AssetAuditUpdateWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    asset?: AssetUpdateOneRequiredWithoutAuditsNestedInput
    auditor?: UserUpdateOneWithoutAuditsPerformedNestedInput
    assignment?: AuditAssignmentUpdateOneWithoutAuditsNestedInput
  }

  export type AssetAuditUncheckedUpdateWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AssetAuditUncheckedUpdateManyWithoutRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    assetId?: StringFieldUpdateOperationsInput | string
    auditDate?: DateTimeFieldUpdateOperationsInput | Date | string
    auditedBy?: StringFieldUpdateOperationsInput | string
    auditorId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumAuditStatusFieldUpdateOperationsInput | $Enums.AuditStatus
    workflowStatus?: EnumAuditWorkflowStatusFieldUpdateOperationsInput | $Enums.AuditWorkflowStatus
    condition?: NullableEnumAuditConditionFieldUpdateOperationsInput | $Enums.AuditCondition | null
    locationVerified?: BoolFieldUpdateOperationsInput | boolean
    actualLocation?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancies?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    checklistItems?: NullableStringFieldUpdateOperationsInput | string | null
    discrepancyResolved?: BoolFieldUpdateOperationsInput | boolean
    resolvedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    resolvedBy?: NullableStringFieldUpdateOperationsInput | string | null
    resolutionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    photoUrls?: NullableStringFieldUpdateOperationsInput | string | null
    nextAuditDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    assignmentId?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewNotes?: NullableStringFieldUpdateOperationsInput | string | null
    managerApproval?: NullableBoolFieldUpdateOperationsInput | boolean | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}